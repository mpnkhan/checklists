# ,Level,Version,Checkpoint,Summary,Description,Remediation,Value Statement,Severity,Reference,Category,Widget Coverage ,CSR,Affected Disability ,Reference (Developer),Reference (Designer),,,,,,,,,
1,A,2.0,1.1.1 Non-text content ,Image link missing alt text,"An img element is the only content of the link, but it is missing alt text. Alt text should describe the purpose of the link.","Action: When set inside a link with no accessible name, all images present must be given an alt attribute.
  
How to fix:
Using alt attributes, add concise, meaningful alt text for images inside a link with no accessible name, e.g., ""Local Weather Report"".","Images and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech. The absence of such tags is an accessibility violation.

When an alt attribute is not present on an image, a screen reader may announce the image's file name and path instead. This fails to communicate the image's content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,Yes,Yes,"Blind, Low Vision, Deafblind, Cognitive ","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives:
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt=""""):
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:
https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
2,A,2.0,1.1.1 Non-text content,Button missing alt text,The button image is missing an alt attribute.,"Action: Specify a text alternative that describes the button's function.
  
How to fix:
Using alt attributes, add concise, meaningful alt text to the button image, e.g., ""Submit"", ""Download"".","All image submit buttons must have an alt attribute.

Images and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech. The absence of such tags is an accessibility violation.

When an alt attribute is not present on an image, a screen reader may announce the image's file name and path instead. This fails to communicate the image's content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,Yes,Yes,"Blind, Deafblind, Mobility ","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/
","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:

https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
3,A,2.0,1.1.1 Non-text content ,Image map missing alt text,An area element in an image map is missing an alt attribute.,"Action: Add alternative text that describes the area element's function.
  
How to fix:
Using the alt attribute, add concise, meaningful alt text to the area element, e.g., ""Food Court Restaurants"".","All area elements in an image map must have an alt attribute.

Images and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech. The absence of such tags is an accessibility violation.

When an alt attribute is not present on an image, a screen reader may announce the image's file name and path instead. This fails to communicate the image's content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,No,Yes,"Blind, Low Vision, Deafblind, Cognitive ","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/
","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:
https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
4,A,2.0,1.1.1 Non-text content,Alt text duplicates link text,Img element inside a link must not use alt text that duplicates the text content of the link.,"Action: When images are embedded within links that also contain visible link text, set the embedded image as decorative-only; do not re-use the link text in the alt attribute.
  
How to fix:
If the image inside the link does not convey additional information, it is not useful to repeat the link text as alt text. Instead, set a null (empty) alt attribute for the image.","All img elements inside a link [<a>] must not repeat the accessible name provided in the link text. Assistive technologies will announce the accessible name twice, which might confuse the user. Either the alt attribute should be a null/empty alt="""", or it must be given a unique accessible name that is different from the link text.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,Yes,Yes,"Blind, Low Vision, Deafblind, Cognitive ","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/
","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:
https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
5,A,2.0,1.1.1 Non-text content,Missing alt text in a link,"Img element inside a link has empty or missing alt text, when a link beside it contains link text.","Action: When set inside a link with no accessible name, all images present must be given an alt attribute. If an adjacent, relevant link has link text, the links may be combined.
  
How to fix:
1. Consider combining Link A (that has link text) with Link B, containing an image that has no alt text.
2. If the adjacent link is not sufficiently relevant to combine, use alt attributes to add alt text to the image inside the link.","Images and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech. The absence of such tags is an accessibility violation.

When an alt attribute is not present on an image, a screen reader may announce the image's file name and path instead. This fails to communicate the image's content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,Yes,Yes,"Blind, Low Vision, Deafblind, Cognitive ","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/
","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:

https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
6,A,2.0,1.1.1 Non-text content,Image alt text is not meaningful,The image has alternative text that does not convey the information in the image.,"Action: When an image has a text description that does not communicate the meaning of the image, or does not include text that is visible in the image, change the alt text to fit the meaning, and include all visible text.
  
How to fix:
Add accurate, meaningful alt text:
1. Observe the image. What information is it intended to convey?
2. Add concise alt text that matches the image meaning, e.g., ""Room Service"" rather than ""fork bell"".
3. Observe the image. Does it include visible text?
4. If yes, be sure to include any visible text in the alt text, e.g., ""Room Service: 8 a.m. to 8 p.m.""","Images and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech. The absence of such tags is an accessibility violation.

All accessible text (alt text) for images must convey image meaning, and include any text visible in the image. Otherwise, the alt text fails to convey the image's information, and will be irrelevant and ineffective for screen reader and accessible tech users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,Yes,Yes,"Blind, Low Vision, Deafblind, Cognitive ","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/
","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:
https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
7,A,2.0,1.1.1 Non-text content,Missing Captcha alternative,Missing alternate method to solve visual Captcha.,"Action: Provide an alternate method of solving the Captcha.
  
How to fix:
For people who cannot see the Captcha image, the resulting page function is inaccessible (e.g., Submit Form). Offer an alternate, accessible method to solve the Captcha, such as audio, math logic, OTP, etc.","Captchas generally contain text or audio. The purpose of Captcha forms is to prevent automated servers and automated robotic web crawlers (""bots"") from submitting forms.

However, assistive tech users, who may not be able to properly view or listen to Captcha-type distorted text or audio, will be blocked from accessing the content unless an alternative method is provided.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,No,No,"Blind, Low Vision, Deafblind, Cognitive ","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/
","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:

https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
8,A,2.0,1.1.1 Non-text content,Captcha image missing alt text,Img element on the Captcha lacks text alternative.,"Action: Provide a generic text alternative for the image.
  
How to fix:
Because Captcha images are randomly generated, it is not possible to offer a directly relevant alt text. However, the image is important: it is the key to a page function. To be sure that screen reader and assistive tech users are informed about the image, add generic alt text, e.g., ""Captcha image"".",All Captcha-type img elements must have a generic alternate text to enable assistive technologies to access the content.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,No,No,"Blind, Low Vision, Deafblind, Cognitive ","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/
","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:

https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
9,A,2.0,1.1.1 Non-text content,Informative image missing alt text,"The image conveys information, but does not have a text alternative.","Action: Describe the image with a text alternative.
 
How to fix:
1. Observe the image. What information is it intended to convey?
2. Add concise, meaningful alt text that describes the meaning of the image in appropriate context, e.g., ""Sunflower seed patterns follow the Fibonacci sequence"" or ""Tulip market in Amsterdam, Holland"" rather than ""flowers"".","Images and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech. The absence of such tags is an accessibility violation.

When an alt attribute is not present on an image, a screen reader may announce the image's file name and path instead. This fails to communicate the image's content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,Yes,No,"Blind, Low Vision, Deafblind, Cognitive ","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/
","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:

https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
10,A,2.0,1.1.1 Non-text content,Decorative image has alt text,Img element that is decorative-only has alt text.,"Action: Decorative-only images that do not convey information must be given a null attribute so that screen readers and assistive tech will skip over it.
  
 How to fix:
 1. Observe that the image does not convey important information: e.g., a decorative swirl, or a photo of a person next to a text description of that person.
 2. Remove descriptive text. Add an empty alt attribute (alt="""") instead.

Note: Null alt attributes are also sometimes known as empty alt attributes. They are made by including no information between the opening and closing quotes of an alt attribute.","Decorative-only images and graphic elements do not convey information that is required to understand the content or website's overall meaning. They should not be communicated to screen reader and assistive tech users, as they are a waste of time and confusing.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,Yes,Yes,"Blind, Low Vision, Deafblind, Cognitive ","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/
","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:

https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
11,A,2.0,1.1.1 Non-text content,Complex images missing text description,"Missing alt text for a complex image (e.g., chart/infographics/diagram/graph)","Action: Add an appropriate text alternative that describes the overall purpose of the image and all relevant items in the image. A chart or graph should be presented in real text format or another alternate format.
  
How to fix:
1. Infographic or diagram:
a. Add alt text that describes the overall meaning that the image is intended to convey, e.g., ""Common farm animals around the world"".
b. Include a description of all relevant items within the complex image, e.g., ""chickens"".
2. Chart or graph: When possible, set charts and graphs in real text format, using HTML-based table structures if relevant.
3. If the complex image requires a longer description:
a. If possible, add the description as plain text on the page near the image, and set an empty image alt attribute (alt="""").
b. If plain text is not possible, add a link to a longer description.","All non-text content (e.g., images, charts, icons and infographics) must have an appropriate text equivalent.

Complex images such as maps or flowcharts may require a more systematic approach. Describe all visible (and relevant) information for the complex image. For example, alt text for a map could include all points on the map, or places visually highlighted on the map. Alt text for complex images is vital, and an alt text such as ""map"" or ""graph"" is irrelevant: it fails to convey the image's meaning and data.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,No,Yes,"Blind, Low Vision, Deafblind","
Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/

Where relevant text exists in the UI, use aria-labelledby and aria-describedby to reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/


Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/
","
Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:

https://staging.userway.org/university/library/text-content-for-videos/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
12,A,2.0,1.2.1 Audio-only and video-only,Audio-only content missing text transcript,Audio-only content does not have a text transcript.,"Action: Add a text transcript for audio-only content. Include all spoken dialogue and sound cues needed to convey the information presented in the audio-only content.
  
How to fix:
1. Create a text transcript that includes all spoken dialogue and sound cues needed to convey information presented via audio.
2. Add the transcript.","Transcripts offer access to audio content for people for people who are deaf, have low hearing, or are unable to listen. With transcripts, users can also consume audio content at their own pace. A full text transcript is needed to completely convey the information.",Critical,https://www.w3.org/WAI/WCAG21/Techniques/general/G158,Audio and Video,No,No,"Deaf, Hard of hearing ",,,,,,,,,,,
13,A,2.0,1.2.1 Audio-only and video-only,Video-only content has incomplete audio description,Audio description for video-only content does not include descriptions of all important visual information.,"Action: Create an audio description that clearly conveys all important visual information from video-only content.
  
How to fix:
1. Create an audio description that includes all important information conveyed visually in the video.
2. Replace the audio description.","An audio description (descriptive audio or video) is required when important information is visually shown, and cannot be observed by a blind or vision-impaired user. An audio description presents visual information in an accessible way for blind or low vision users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded,Audio and Video,No,No,Deaf. Hard of hearing,,"Visual Content in Videos:
https://staging.userway.org/university/library/visual-content-in-videos/

Video Transcripts:
https://staging.userway.org/university/library/video-transcripts/",,,,,,,,,
14,A,2.0,1.2.1 Audio-only and video-only,Text transcript not identified,Text transcript for audio-only or video-only content is not clearly labeled as such.,"Action: When creating a text transcript, provide a programmatically identifiable label.
  
 How to fix:
 Add a programmatically identifiable label, e.g., a heading or region, to the text transcript, to make it clearly identifiable to users.","Transcripts offer access to audio content for people who are deaf, have low hearing, or are unable to listen. With transcripts, users can also consume audio content at their own pace. Audio content with no transcript is not accessible for users who cannot hear or access audio content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded,Audio and Video,No,No,"Deaf, Hard of hearing ",,"Visual Content in Videos:
https://staging.userway.org/university/library/visual-content-in-videos/

Video Transcripts:
https://staging.userway.org/university/library/video-transcripts/",,,,,,,,,
15,A,2.0,1.2.1 Audio-only and video-only,Video-only content has incomplete text transcript,Text transcript for video-only content does not include descriptions of all important visual information.,"Action: When composing text transcripts for video-only content, describe all visual data necessary to convey the information presented in the video-only content.
  
 How to fix:
 1. Create a text transcript that includes descriptions of all important information conveyed visually in the video.
 2. Replace the transcript.","Transcripts offer access to audio content for people for people who are deaf, have low hearing, or are unable to listen. With transcripts, users can also consume audio content at their own pace. A full text transcript is needed to completely convey the information.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded,Audio and Video,No,No,"Deaf, Hard of hearing ",,"Visual Content in Videos:
https://staging.userway.org/university/library/visual-content-in-videos/

Video Transcripts:
https://staging.userway.org/university/library/video-transcripts/",,,,,,,,,
16,A,2.0,1.2.1 Audio-only and video-only,Audio-only content has incomplete text transcript,Text transcript for audio-only content does not include all spoken dialogue and sound effects.,"Action: When composing text transcripts for audio-only content, include all spoken dialogue and sound cues needed to convey the information presented in the audio-only content.
  
 How to fix:
 1. Create a text transcript that includes all spoken dialogue and sound cues needed to convey information presented via audio in the video.
 2. Replace the transcript.","Transcripts offer access to audio content for people who are deaf or have low hearing. With transcripts, users can also consume audio content at their own pace. A full text transcript is needed to completely convey the information.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded,Audio and Video,No,No,"Deaf, Hard of hearing ",,"Visual Content in Videos:
https://staging.userway.org/university/library/visual-content-in-videos/

Video Transcripts:
https://staging.userway.org/university/library/video-transcripts/",,,,,,,,,
17,A,2.0,1.2.3 Audio description or media alternative,Missing text transcript,Video-only content that communicates information does not have a text transcript or an audio description.,"Action: Provide either text transcript or an audio track for silent video.
  
 How to fix:
  
 1. Either create a text transcript that includes descriptions of all important information conveyed visually in the video.
 2. Then, add the text transcript.
 3. Or, create a synchronized audio track for the video, describing all visual data necessary to convey the information presented in the video-only content.","Transcripts offer access to audio content for people for people who are deaf, have low hearing, or are unable to listen. With transcripts, users can also consume audio content at their own pace. A text transcript is an essential tool to convey information presented in silent video content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded,Audio and Video,No,No,"Deaf, Hard of hearing ",,"Visual Content in Videos:
https://staging.userway.org/university/library/visual-content-in-videos/

Video Transcripts:
https://staging.userway.org/university/library/video-transcripts/",,,,,,,,,
18,A,2.0,1.2.2 Captions (prerecorded),Captions not synchronized,"Video has captions, but they are not synchronized with video's audio content.","Action: When adding captions to pre-recorded video with dialogues, make sure captions are synchronized with dialogue and sound cues.
  
How to fix:
Synchronize existing captions with your video's audio content.",Captions offer content access to users who cannot hear the audio content of a video. Synchronized captions impart a better comprehension of the content.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/captions-prerecorded,Audio and Video,No,No,"Deaf, Hard of hearing ","
Embed Multimedia Content that Supports Closed Captions:
https://staging.userway.org/university/library/embed-multimedia-content-that-supports-closed-captions/","
Video Captions:
https://staging.userway.org/university/library/video-captions/

Text Content for Videos:
https://staging.userway.org/university/library/text-content-for-videos/",,,,,,,,,
19,A,2.0,1.2.2 Captions (prerecorded),Captions do not include all spoken dialog,"Video has captions, but they do not include all spoken dialogue and important sound effects from the video's audio content.","Action: When adding captions to pre-recorded video with dialogue, make sure the captions include all spoken dialogue as well as other sound cues.
  
 How to fix:
 1. If captions can be edited, add all spoken dialogue and sound cues needed to convey the information presented in the video's audio content.
 2. If necessary, create new captions. Be sure to include all spoken dialogue and sound cues needed to convey the information presented in the video's audio content.","Spoken dialogue enriches user comprehension of the video. It includes non-speech information, which is as important as spoken dialogue to deepen understanding of information.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/captions-prerecorded,Audio and Video,No,No,"Deaf, Hard of hearing, Blind, Low Vision ","
Embed Multimedia Content that Supports Closed Captions:
https://staging.userway.org/university/library/embed-multimedia-content-that-supports-closed-captions/","
Video Captions:
https://staging.userway.org/university/library/video-captions/

Text Content for Videos:
https://staging.userway.org/university/library/text-content-for-videos/",,,,,,,,,
20,A,2.0,1.2.2 Captions (prerecorded),Missing video captions,The video does not have synchronized captions.,"Action: Provide captions for videos with audio.
  
 How to fix:
 1. Add captions for the video's audio content.
 2. Check if this video is itself considered an alternative for text content.
 a. Exception: If it is, then it does not require captions.","Captions communicate the audio content of a video, so that users who cannot hear can still understand its content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/captions-prerecorded,Audio and Video,No,No,"Deaf, Hard of hearing","
Embed Multimedia Content that Supports Closed Captions:
https://staging.userway.org/university/library/embed-multimedia-content-that-supports-closed-captions/","
Video Captions:
https://staging.userway.org/university/library/video-captions/

Text Content for Videos:
https://staging.userway.org/university/library/text-content-for-videos/",,,,,,,,,
21,A,2.0,1.2.3 Audio description or media alternative,Audio description not synchronized,The audio description is not synchronized to complement the audio content of the video.,"Action: When adding audio descriptions to pre-recorded video, make sure the descriptions are synchronized with the visual information in the video, and that the descriptions work with the audio content of the video.
  
 How to fix:
 1. Consider the video's audio content.
 2. Find conflicts between the video's audio and the added audio description.
 3. Re-synchronize description audio such that it avoids conflicting with the video's existing audio content.","When important information is visually shown but not verbally described, audio description is an accessibility requirement. Audio that is not synchronized with content is difficult to follow and understand.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/audio-description-prerecorded,Audio and Video,No,No,"Deaf, Hard of hearing",,"Visual content in videos:
https://staging.userway.org/university/library/visual-content-in-videos/",,,,,,,,,
22,A,2.0,1.2.3 Audio description or media alternative,Visual information not available in text alternative,The text alternative does not describe important information communicated visually in the video.,"Action: When there is a text alternative available for the pre-recorded video, make sure all visual information is conveyed in the text alternative.
  
 How to fix:
 1. Create or edit a text alternative.
 2. Make sure it includes descriptions of all important information conveyed visually in the video.
 3. Replace the existing text alternative.",A full text alternative for visual data is required. This includes all visual context that gives a more comprehensive understanding of the visual information.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/audio-description-or-media-alternative-prerecorded,Audio and Video,No,No,"Blind, Low Vision, Deaf, Hard of Hearing ",,"Visual content in videos:
https://staging.userway.org/university/library/visual-content-in-videos/",,,,,,,,,
23,A,2.0,1.2.3 Audio description or media alternative,Insufficient information in audio description,The audio description does not describe important information communicated visually in the video.,"Action: When adding audio descriptions to pre-recorded video, make sure:
 1. All important visual information is conveyed in the audio description, and
 2. The audio description is synchronized with visual information in the video, and
 3. The description works with the audio content of the video.
  
 How to fix:
 1. Consider the video's visual content.
 2. Consider the video's audio content.
 3. Find and correct conflicts between the video's visuals / audio and the added audio description.
 4. Re-synchronize description audio such that it avoids conflicting with the video's existing audio content.","When important information is visually shown but not verbally described, audio description is an accessibility requirement. If the audio description does not sufficiently cover important data visually presented in the video, it cannot offer a full understanding to all users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/audio-description-or-media-alternative-prerecorded,Audio and Video,No,No,"Blind, Low Vision, Deaf, Hard of hearing ",,"Visual content in videos:
https://staging.userway.org/university/library/visual-content-in-videos/",,,,,,,,,
24,AA,2.0,1.2.5 Audio description (pre-recorded),Audio description unavailable,The video does not have an audio description.,"Action: Provide audio description or text transcript for the video.
  
How to fix:
1. Consider the video's content and users.
2. Choose to create either an audio description or a text transcript that conveys all important information conveyed in the video.
3. Add either a synchronized audio description, or a full text transcript, to the video. You may choose to add both.",Audio description or a text transcript are required for all users to understand visually displayed information. A text transcript offers all users access to information visually presented in the video.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/audio-description-or-media-alternative-prerecorded,Audio and Video,No,No,"Blind, Low Vision, Cognitive ",,"Visual content in videos:
https://staging.userway.org/university/library/visual-content-in-videos/",,,,,,,,,
25,AA,2.0,1.2.4 Captions (live),Live video has no captions,Live video does not have synchronized captions.,"Action: Provide synchronized captions for a live broadcast or streamed video.
  
 How to fix:
 1. Plan captions before your broadcast or streamed video goes live. Used planned captions in synch with video.
 2. Or, use a live captionist to provide live synchronized captions.
 3. Or, use an automatic captioning service. This is not an ideal option.","Captions must be provided for users who cannot hear the audio content of a video. Live captions help all users understand the richness of live content, and are helpful for hearing-impaired people as well. Captions should be synchronized with video.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/captions-live,Audio and Video,No,No,"Deaf, Hard of hearing ","
Embed Multimedia Content that Supports Closed Captions:
https://staging.userway.org/university/library/embed-multimedia-content-that-supports-closed-captions/","
Video Captions:
https://staging.userway.org/university/library/video-captions/

Text Content for Videos:
https://staging.userway.org/university/library/text-content-for-videos/",,,,,,,,,
26,AA,2.0,1.2.5 Audio description (pre-recorded),Insufficient information in audio description,The audio description does not describe important information visually conveyed in the video.,"Action: Be sure that the video's audio description fully communicates important visually conveyed information.
  
 How to fix:
 1. Create or edit audio description.
 2. Make sure it includes descriptions of all important information conveyed visually in the video.
 3. Replace the existing audio description.","A clear audio description should convey visually communicated information to blind or low-vision users. If the audio description is absent, incomplete, or unclear, users may miss important information from the visual content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/audio-description-prerecorded,Audio and Video,No,No,"Blind, Low Vision, Deafblind",,"Visual content in videos:
https://staging.userway.org/university/library/visual-content-in-videos/",,,,,,,,,
27,A,2.1,1.3.1 Info and Relationships,Quotation missing <blockquote>,A quotation has no semantic markup.,"Action: Add correct semantic markup.

How to fix: Use <blockquote> for the quotation.",Elements must be marked up semantically so that assistive technologies and browsers interpret the content and functionality correctly,Moderate,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,No,"Blind, Low Vision, Cognitive, Deafblind ","
Only Use CSS to Alter Text Position Without Altering Meaning
https://university.digitala11y.com/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://university.digitala11y.com/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://university.digitala11y.com/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://university.digitala11y.com/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","Designer:
Input Labels:
https://university.digitala11y.com/input-labels/


Figure and Table Captions:
https://university.digitala11y.com/figure-and-table-captions/

Input Components:
https://university.digitala11y.com/input-components/

Text styles: 
https://university.digitala11y.com/text-styles/

Data Tables:
https://university.digitala11y.com/data-tables/

Regions:
https://university.digitala11y.com/regions/


White space:
https://university.digitala11y.com/white-space/

Form Inputs:
https://university.digitala11y.com/form-inputs/",,,,,,,,,
28,AA,2.0,1.2.5 Audio description (pre-recorded),Audio description is not available,"A video includes important visual information, but does not have audio description.","Action: Provide audio descriptions when relevant information that is visually presented is not verbally explained in a video.
  
How to fix:
1. Create audio description.
2. Make sure it includes descriptions of all important information conveyed visually in the video.
3. Synchronize description audio such that it avoids conflicting with the video's existing audio content, if any.","When important information is visually shown but not verbally described, audio description is an accessibility requirement. Important visual information that cannot be observed by a blind or vision-impaired user must be given an audio description, or the information will be missed.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/audio-description-prerecorded,Audio and Video,No,No,"Blind, Low Vision",,"Visual content in videos:
https://staging.userway.org/university/library/visual-content-in-videos/",,,,,,,,,
29,A,2.0,1.3.1 Info and Relationships,Semantic markup used incorrectly,Element uses semantic markup incorrectly.,"Action: Make sure to use correct semantic markup.

How to fix: As per HTML5 specifications, a page can contain only one <head> element. Remove this markup.",Adding semantic markup in unwanted/unnecessary places is confusing for screen reader and assistive tech users.,Moderate,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,Yes,Yes,"Blind, Low Vision, Cognitive, Deafblind","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
30,A,2.0,1.3.3 Sensory characteristics,Instructions presented using sound,Instructions provided using a sound cue: no alternative text method is provided.,"Action: Instructions provided in sound cues must also be available in text.
  
How to fix:
For each auditory cue, also provide a visible cue.","Users who are deaf or have low hearing cannot access content if only audible cues are offered. Accompanying text must be provided.

Audible cues conveying information should be accessibly communicated to deaf and low hearing users, or the content's meaning may remain unclear.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/sensory-characteristics,Content,No,No,"Deaf, Hard of Hearing ",,"Do Not Use Color or Sensory Characteristics as the Unique Source of Information:
https://staging.userway.org/university/library/do-not-use-color-or-sensory-characteristics-as-the-unique-source-of-information/",,,,,,,,,
31,A,2.0,1.3.1 Info and Relationships,Text inappropriately marked as heading,Text that is not intended as a heading should not be marked up with heading tags.,"Action: Text that is not contextually a heading must not be marked as a heading.
  
 How to fix:
  
 1. Remove heading tag <h1>-<h6> from the text.
 2. Use <p>, and style content to provide visual representation.
 3. Use role=presentation on heading tag to remove semantic markup, so that assistive tech will perceive the content as regular text.","Heading elements compose the framework of a document. They should be set in a logical hierarchy, not used to create visual design. Screen reader and assistive tech users should be able to understand the page structure by skimming quickly using headings.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,Yes,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
32,A,2.0,1.3.1 Info and Relationships,Data table marked as layout table,"Tabular data is displayed using CSS to present the appearance of a table, but the proper HTML markup has not been used.","Action: Proper HTML markup should be used for content within the table. HTML tables are appropriate for presenting data in two dimensions.
  
 How to fix:
  
 Use the <table> element to represent table content. Be sure to use all proper HTML table markup.","Table accessibility requires clear markup indicating header cells and tabular columns, and defining their relationship. Correct markup presents a table accessibly, in the way it is intended to be read.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
33,A,2.0,1.3.1 Info and Relationships,Form fields not programmatically associated,"Form fields have labels, but they are not properly associated with their corresponding fields.","Action: Labels in form fields must be associated with their related fields.
  
How to fix:
1. Use the label element and an explicit association using ""for"" and ""id"", or,
2. Use aria-label, or,
3. Use aria-labelledby and refer to content id, or,
4. Use the title attribute","Screen readers cannot access visual cues, labels and prompts for form fields. To offer equal access, these prompts must be clearly associated with form fields in HTML. Without proper associations, screen reader and assistive tech users will not be offered these cues, and will not perceive data relationships.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
34,A,2.0,1.3.1 Info and Relationships,Headings skip hierarchy,"Headings use proper HTML markup, but do not accurately represent the hierarchy of content on the page.","Action: HTML markup for heading structure must not skip heading levels.
  
How to fix:
Check carefully: make sure that all headings follow a logical hierarchical order, e.g., h1, h2, h3, and not h1, h6, etc.","The heading hierarchy represents the page structure. Heading hierarchy must follow a logical order, and should mirror the visual order on the page using proper HTML markup. Skipping heading elements can be confusing for the reader as vital information could be missed.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,Yes,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
35,A,2.0,1.3.1 Info and Relationships,Table headers are not programmatically associated,The relationship between <td> elements and their associated <th> elements is not defined.,"Action: Mark table headers correctly as <th>. Associate them programmatically with their respective data <td> elements.
  
How to fix:
1. Mark table headers correctly: differentiate between <td> and <th> elements.
2. Programatically associate the table data cells with their respective table headers.","Markup must clearly define roles and relationships for all table parts, e.g., column headers and row headers.

Screen readers and assistive tech use correct table markup to define and announce data relationships. Non-sighted or low vision users cannot easily understand the different rows and headers if the markup is incorrect.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
36,A,2.0,1.3.1 Info and Relationships,Caption element is unavailable,Caption element is not defined for the table element.,"Action: Add table captions so that users can understand a given data cell along with its row and column headers, and compare it with other data cells.

How to fix:
Use <caption> element.","Table captions are appropriate markup table identifiers.

Caption elements function as a table heading when there are multiple tables.",Minor,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
37,A,2.0,1.3.1 Info and Relationships,Legend element unavailable,The fieldset does not contain a legend element for the group of form controls.,"Action: Provide all fieldsets with a legend element with a field group description.
  
How to fix:
1. Use <legend> attribute inside the fieldset, and
2. Make sure the group label is descriptive.","For groups of related fields (e.g., radio buttons or checkboxes), each form field must have a label. However, without an accessible group label, that is insufficient.

To understand the relationship of form fields, their individual labels, and their group label, relationships must be expressed semantically with <fieldset> <legend> or ARIA role=""group"" properties. Absence of group label association might affect screen reader users' comprehension of individual items in relative context.",Minor,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive ","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
38,A,2.0,1.3.1 Info and Relationships,Option group is unavailable,"The selection list contains groups of related options, but the options are not grouped programmatically.","Action: Group selection list with option group (""optgroup"").
  
How to fix:
Use <optgroup> in the <select> element to provide the necessary programmatic association.","Selection lists should be grouped with their option group.

Forms typically have labels or prompts based on visual cues that are apparent to sighted users. For low vision or blind users to have equal access, labels and prompts must be clearly programmatically associated with form fields.",Minor,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
39,A,2.0,1.3.1 Info and Relationships,Fieldset is unavailable,"Radio or checkbox inputs use the same name attribute, signifying they are part of a group, but with no fieldset marking them as such.","Action: Contain all radio buttons or checkboxes with the same name attribute within a fieldset element.
  
How to fix:
Use <fieldset> element to bind the group of form controls.","For groups of related fields (e.g., radio buttons or checkboxes), each form field must have a label. However, without an accessible group label, that is insufficient.

To understand the relationship of form fields, their individual labels, and their group label, relationships must be expressed semantically with <fieldset> <legend> or ARIA role=""group"" properties. Absence of group label association might affect screen reader users' comprehension of individual items in relative context.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
40,A,2.0,1.3.1 Info and Relationships,Unordered list markup unavailable,Content has the visual appearance of a bulleted list but is not marked as such.,"Action: Markup unordered lists as bulleted lists if the visual appearance of the content is that of a bulleted list.
  
How to fix:
Use <ul> and <li> to provide semantic information.","Visual order markings must be conveyed via labels and markup, to provide equally accessible information for screen reader and assistive tech users.

For list content, use list markup: ol, ul, dl.

Examples:
Related content sections, elements in a grid-like visual layout, or sibling items.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive ","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
41,A,2.0,1.3.1 Info and Relationships,Ordered list markup unavailable,"Content has the visual appearance of a numbered list, but is not marked as such.","Action: Mark this content up using an <ol> element, if it is intended as a numbered list.
  
How to fix:
Use <ol> and <li> to provide semantic information.","Visual order markings must be conveyed via labels and markup, to provide equally accessible information for screen reader and assistive tech users.

For list content, use list markup: ol, ul, dl.

Examples:
Related content sections, elements in a grid-like visual layout, or sibling items.

Visual cues depicting content structure and relationships should be accessibly communicated to blind and low-vision users, or the content's structure and relationships may remain unclear.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive ","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
42,A,2.0,1.3.1 Info and Relationships,CSS :before and :after pseudo-elements insert non-decorative content ,The CSS :before and :after pseudo-elements are used to add non-decorative content before and after an element's content in the document tree.,"Action: Ensure that CSS :before and :after pseudo-elements are not employed for inserting non-decorative content.
 How to fix:
1. Use informative content directly in html (OR)
2. If it is a informative image use alt text in the content itself like  content: url(./img/star.png) / ""New!"";
3. If it is decorative image use empty alt like content: ""\02795"" / """";","CSS :before and :after pseudo-elements specify the location of content before and after an element's document tree content. The content property, in conjunction with these pseudo-elements, specifies what is inserted.

Users who need to customize style information to view content according to their needs may not be able to access information inserted via CSS.

It is an accessibility failure to use these properties to insert non-decorative content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive ","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
43,A,2.0,1.3.1 Info and Relationships,List markup unavailable,Content has the visual appearance of a list but is not marked as such.,"Action: Mark this content up using an ol or ul element, if it is intended as a list.
  
How to fix:
Use either <ul> or <ol> and <li> to provide semantic information","Visual order markings must be alternatively conveyed via labels and markup, to provide equally accessible information for screen reader and assistive tech users.

For list content, use list markup: ol, ul, dl.

Examples:
Related content sections, elements in a grid-like visual layout, or sibling items.

Visual cues depicting content structure and relationships should be accessibly communicated to blind and low-vision users, or the content's structure and relationships may remain unclear.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
44,A,2.0,1.3.1 Info and Relationships,First row of table data acts as caption,The first row of the table acts as a caption rather than an actual row header.,"Action: Use a real caption, and remove the ""caption"" row.
  
 How to fix:
 Do all of the following:
 1. Remove the spanned row from the table markup.
 2. Use <caption> element before the table to display the caption.","Make sure to mark all content appropriately so that assistive tech and screen reader users can access it.

Table segments are sorted into header, footer and body sections that must be accessibly identified. If a caption is inserted into the first row, it is likely to be misidentified as a header row, and communicated incorrectly to screen reader and assistive tech users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
45,A,2.0,1.3.1 Info and Relationships,Form controls are not grouped,"The form controls signify that they are part of a group, but they are not marked as such programmatically.","Action: Contain all form controls with the same name attribute within a fieldset element.
  
How to fix:
1. Use <fieldset> element to bind the group of form controls.
2. Use <legend> to provide an accessible label and name for the group of form controls.","Make sure to mark all content appropriately so that assistive tech and screen reader users can access it.

Related form controls must be grouped together. This grouping is part of their information identification.

For screen reader and assistive tech users, correct programmatic markup is required so that information will be properly conveyed.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
46,A,2.0,1.3.1 Info and Relationships,More than one table element is used to present the content,"The data table is broken into more than one table. As a result, the relationship between the table headers and data cells is not communicated to assistive technologies.","Action: Make sure content is presented in a single <table> element.
  
How to fix:
1. Place all data into a correctly marked up single separate table.
2. Remove split tables.
3. Replace split tables with single table.","Keep all necessary information contained in one table.

Blind and visually impaired users will find it difficult to access the data if the information is broken into several tables. Screen readers and assistive tech cannot properly discern and communicate data relationships and order, and users will not receive correct or understandable information.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
47,A,2.0,1.3.1 Info and Relationships,Content not marked as heading,Content that appears and functions as a heading is not marked as such.,"Action: Make sure that content is marked appropriately with semantic heading structure.
  
How to fix:
1. Use <h1>-<h6> tags.
2. Use role=heading along with aria-level.","Make sure headings and heading order are properly marked. Appropriately marked headings correctly convey the sequence of information.

Without semantic markup, screen readers and assistive tech cannot properly discern and communicate data relationships and order, and users will not receive correct or understandable information.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
48,A,2.0,1.3.1 Info and Relationships,Definition list missing,The content is missing definition list (dl/dt) markup.,"Action: Mark up content correctly using the definition list.
  
How to fix:
Use the definition list element (<dl>) to wrap one or more terms (<dt>) and associated description(s) (<dd>).","Make sure definition lists are marked appropriately using semantic markup. A definition list is a list of terms and corresponding definitions. To identify items with their correct definition, it must be marked properly.

Without correctly defined content roles and relationships, screen readers and assistive tech cannot properly discern and communicate data relationships and order, and users will not receive correct or understandable information.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Code Headings According to Specifications
https://staging.userway.org/university/library/code-headings-according-to-specifications/


Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/","
Input Labels:
https://staging.userway.org/university/library/input-labels/


Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

Input Components:
https://staging.userway.org/university/library/input-components/

Text styles: 
https://staging.userway.org/university/library/text-styles/

Data Tables:
https://staging.userway.org/university/library/data-tables/

Regions:
https://staging.userway.org/university/library/regions/


White space:
https://staging.userway.org/university/library/white-space/

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
49,A,2.0,1.3.2 Meaningful sequence,Reading order is not logical and intuitive,"The DOM order does not match the visual order, because CSS properties such as flexbox and grid-layout have been used to alter the visual presentation.","Action: When linearized, such as when style sheets are disabled, check that content is ordered in a meaningful sequence.
  
How to fix:
Reading order should be programmatically determined to maintain a meaningful sequence. Make the DOM (document object model) order match the visual order.","Accessible navigation through a website page or app screen should match its visual nav and controls order.

Keyboard and screen reader users expect to move left to right, top to bottom, in logical sequence, through all focusable page elements. Users who cannot view the visual order expect accessible alternatives to mirror it.

When reading order is not correctly sequenced, content order may be unclear or not understandable to blind or low-vision users.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

",Reading Order: https://staging.userway.org/university/library/reading-order/,,,,,,,,,
50,A,2.0,1.3.2 Meaningful sequence,Dialog/menu is not next in reading order,Dialogs or menus are not adjacent to their trigger control in the sequential navigation order.,"Action: Make sure the content order in the DOM is logical.
  
How to fix:
When a dialog or menu is triggered, make sure it is next in the DOM, adjacent to the triggered element.","Accessible navigation through a website page or app screen should match its visual nav and controls order.

Keyboard and screen reader users expect to move left to right, top to bottom, in logical sequence, through all focusable page elements. Users who cannot view the visual order expect accessible alternatives to mirror it.

When reading order is not correctly sequenced, content order may be unclear or not understandable to blind or low-vision users.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/
",Reading Order: https://staging.userway.org/university/library/reading-order/,,,,,,,,,
51,A,2.0,1.3.2 Meaningful sequence,Cookie alert reading order is not logical,"An ‘agree to cookies' dialog is positioned last in the DOM but appears at the top of the screen, without being implemented as a modal (with the inert attribute).","Action: Make sure the content order in the DOM is logical.
  
How to fix:
Set the cookie notice as a modal, or make sure it is properly positioned in the DOM order to match the visual reading order.","Accessible navigation through a website page or app screen should match its visual nav and controls order.

Keyboard and screen reader users expect to move left to right, top to bottom, in logical sequence, through all focusable page elements. Users who cannot view the visual order expect accessible alternatives to mirror it.

When reading order is not correctly sequenced, content order may be unclear or not understandable to blind or low-vision users.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

",Reading Order: https://staging.userway.org/university/library/reading-order/,,,,,,,,,
52,A,2.0,1.3.2 Meaningful sequence,CSS-modified content layout changes sequence or meaning,CSS is used to modify visual layout. It changes content sequence or meaning.,"Action: Use structural markup rather than CSS. Make sure the content order in the DOM is logical.
  
How to fix:
Reset content's visual layout using structural markup rather than CSS.","Structural markup should be used to modify content's visual layout.

When CSS positioning properties are used instead, elements may appear out of their original order when CSS styles are disabled for accessibility purposes.

Screen reader and assistive tech users will not receive information in logical sequence, and may not understand the meaning of the content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence,Structure,No,No,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/

","
Reading Order:
https://staging.userway.org/university/library/reading-order/",,,,,,,,,
53,AA,2.1,1.3.4 Orientation,Device orientation is unavailable,"Device orientation is locked to either portrait or landscape, and does not adapt.","Action: Check that content does not restrict its view and operation to a single display orientation, such as portrait or landscape, unless a specific display orientation is essential.
  
How to fix:
1. Using CSS media queries grids or Flexbox, adjust content according to device orientation.
2. Using JavaScript, identify the change in device orientation, and display content accordingly.","Most devices have the option to lock orientation so it doesn't change, even when the user rotates the device. Applications must honor this setting and display in the selected orientation.

This is especially important for users who have the device permanently fixed in one orientation. If the device is not locked and the user changes the orientation, the application must adapt to the new orientation.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/orientation,Structure,No,No,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/
",,,,,,,,,,
54,A,2.0,1.3.2 Meaningful sequence,Hidden content is exposed,Content intended to be hidden for all users is announced by assistive tech.,"Action: Make sure visually hidden content is not exposed to screen readers and assistive tech.
  
How to fix:
Corrected: Utilize `display: none` or `aria-hidden=""true""` in combination with `tabindex=""-1""` for focusable elements to conceal content from assistive technologies, such as screen readers.
","Visually displayed content and content intended for accessibility users should closely mirror each other; avoid inconsistency between them.

Screen reader and assistive tech users should not encounter content that was not intended for presentation; it is disorienting and confusing.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/
",,,,,,,,,,
55,A,2.0,1.3.2 Meaningful sequence,Content is not exposed to screen readers,Screen reader does not announce static content in browse mode.,"Action: All content visually presented must also be exposed to assistive tech, e.g., screen readers. Make sure content will be announced when screen readers access static content in browse mode.
  
How to fix:
1. Present the content in HTML headings, paragraphs, and lists.
2. Make sure there are no JavaScript or ARIA attributes hiding the content from assistive technologies.","Screen reader users access static content in browse mode (e.g., headings, paragraphs, tables, lists, etc.). When this content is not exposed to them, screen readers users cannot access and act on important information.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/
",,,,,,,,,,
56,A,2.0,1.3.2 Meaningful sequence,Layout table reading order not in meaningful sequence,Layout table reading order is not logical and intuitive.,"Action: Although not considered an accessibility failure, the use of layout tables is inadvisable.
  
How to fix:
1. CSS-based layouts should be used when possible.
2. Be sure to indicate any row and/or column headers, and use correct table markup.
3. Check that tables are not cut off on zoom, or on small screens.","Table reading order should follow a logical, sequential order.

Keyboard and screen reader users expect to move left to right, top to bottom, in logical sequence, through all focusable page elements.

When table reading order is not correctly sequenced, content order may be unclear, not understandable, or difficult to follow for blind or low-vision users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence,Structure,No,No,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/
",,,,,,,,,,
57,A,2.0,1.3.2 Meaningful sequence,CSS used to present content,Content presented using CSS disappears when CSS is disabled on the page.,"Action: For content that must be perceived by users, enable the CSS 'content property'.

How to fix:
Present the content in HTML inside the <p> tag, so that the content will flow in a logical order.","Content must be set in a logical, sequential order.

Keyboard and screen reader users expect to move left to right, top to bottom, in logical sequence, through all focusable page elements. Enable the CSS 'content property' to facilitate logical flow.

When reading order is not correctly sequenced, content order may be unclear or not understandable to blind or low-vision users, or to users with cognitive disabilities.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/
",,,,,,,,,,
58,A,2.0,1.3.2 Meaningful sequence,Screen reader accesses parent page content,"In screen reader browse mode, it is possible for the screen reader to access the parent page content while a modal dialog is active.","Action: Screen readers must not expose the parent page content when a modal dialog is active.
  
How to fix:
1. Use aria-hidden=true on the <body> of the parent page.
2. Use role=dialog along with aria-modal on the modal dialog. This disables parent page content for screen readers.","The purpose of a modal dialog is to constrain user input (temporarily) to controls within the dialog.

Screen reader users must not be able to access the parent page content in browse mode, as it disorients users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Only Use CSS to Alter Text Position Without Altering Meaning
https://staging.userway.org/university/library/only-use-css-to-alter-text-position-without-altering-meaning/
",,,,,,,,,,
59,A,2.0,1.3.3 Sensory characteristics,"Instructions presented using shape, size or location","Instructions presented using a shape, size or location do not offer an alternative text method to understand them.","Action: Instructions provided using shape, size or location must also be available in text.
  
How to fix:
Rewrite instructions so they mention the accessible name of the interface component (in addition to its sensory characteristics).","Users who are blind or have low vision cannot access content if shape, size, location or other visual cues are the only information offered. Accompanying text must be provided.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/sensory-characteristics,Content,No,yes,"Blind, Low Vision, Cognitive ",,"Do Not Use Color or Sensory Characteristics as the Unique Source of Information:
https://staging.userway.org/university/library/do-not-use-color-or-sensory-characteristics-as-the-unique-source-of-information/",,,,,,,,,
60,A,2.0,1.4.1 Use of color,Color is used to convey information,"Color is used as the sole method to convey information, which is not available in text or via other visual cues.","Action: Information conveyed via color alone must also be made available in text or through visual cues.
  
How to fix:
Add text or other visual characteristics to supplement the use of color.","Users with low vision or blindness cannot access information conveyed via color only: accompanying text or visual cues must be provided.

Visual cues conveying information should be accessibly communicated to blind and low-vision users, or the content's meaning may remain unclear.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/use-of-color,Color,No,No,"Blind, Low Vision, Cognitive ",,"Link Text Contrast:
https://staging.userway.org/university/library/link-text-contrast/

Legends:
https://staging.userway.org/university/library/legends/

Tooltips and Overlays:
https://staging.userway.org/university/library/tooltips-and-overlays/

Data Visualization:
https://staging.userway.org/university/library/data-visualization/

Icons:
https://staging.userway.org/university/library/icons/

Visual Sates:
https://staging.userway.org/university/library/visual-states/

Component Contrast:
https://staging.userway.org/university/library/component-contrast/



",,,,,,,,,
61,A,2.0,1.4.1 Use of color,Required field identified with color,Form uses color only to indicate a required field.,"Action: In forms, a required field must not be identified through color alone. Accompanying text or visual cues must be available.
  
How to fix:
Add text or other visual characteristics to supplement the use of color.","Users with low vision or blindness cannot fill out a form if the required field is identified by color only.

Accompanying text or visual cues must be provided, indicating required user actions for blind and low-vision users, or these users will not receive instructions on how to proceed.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/use-of-color,Color,No,Yes,"Blind, Low Vision, Cognitive ",,"Link Text Contrast:
https://staging.userway.org/university/library/link-text-contrast/

Legends:
https://staging.userway.org/university/library/legends/

Tooltips and Overlays:
https://staging.userway.org/university/library/tooltips-and-overlays/

Data Visualization:
https://staging.userway.org/university/library/data-visualization/

Icons:
https://staging.userway.org/university/library/icons/

Visual Sates:
https://staging.userway.org/university/library/visual-states/

Component Contrast:
https://staging.userway.org/university/library/component-contrast/



",,,,,,,,,
62,A,2.0,1.4.1 Use of color,Links identified by color only,"Links are distinguished from plain text by color alone, and the color does not vary sufficiently from the main body text.","Action: Be sure to distinguish links by methods other than color alone.
  
How to fix:
1. Add an additional visual cue on hover, such as an underline, or a change in font style.
2. Or, increase font size for links.","Link text surrounded by text cannot be identified by color alone.

Such link text must have additional visual cues on hover, for example, an underline, or a change in font style, e.g., bold or italics. Or, increase font size for links where color alone is used to identify them.

If a user has low vision, or is partly or wholly color blind, the color will not be accessible for them, and the link will not be identifiable as such.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/use-of-color,Color,No,Yes,"Blind, Low Vision, Cognitive ",,"Link Text Contrast:
https://staging.userway.org/university/library/link-text-contrast/

Legends:
https://staging.userway.org/university/library/legends/

Tooltips and Overlays:
https://staging.userway.org/university/library/tooltips-and-overlays/

Data Visualization:
https://staging.userway.org/university/library/data-visualization/

Icons:
https://staging.userway.org/university/library/icons/

Visual Sates:
https://staging.userway.org/university/library/visual-states/

Component Contrast:
https://staging.userway.org/university/library/component-contrast/



",,,,,,,,,
63,A,2.0,1.4.1 Use of color,Error identified by color only,The error state of an input field is only identified by changing the color of its border.,"Action: When an error occurs, provide an accessible error text.
  
How to fix:
1. When an error occurs, be sure to provide an accessible error text.
2. Other visual characteristics may be added to supplement the use of color.","When an error occurs, and it is identified by color alone, people with visual disabilities will not be able to identify it.

An accessible error text must be provided.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/use-of-color,Color,No,Yes,"Blind, Low vision, Cognitive ",,"Link Text Contrast:
https://staging.userway.org/university/library/link-text-contrast/

Legends:
https://staging.userway.org/university/library/legends/

Tooltips and Overlays:
https://staging.userway.org/university/library/tooltips-and-overlays/

Data Visualization:
https://staging.userway.org/university/library/data-visualization/

Icons:
https://staging.userway.org/university/library/icons/

Visual Sates:
https://staging.userway.org/university/library/visual-states/

Component Contrast:
https://staging.userway.org/university/library/component-contrast/



",,,,,,,,,
64,A,2.0,1.4.2 Audio control,Audio/video plays automatically,"Audio or video plays automatically for more than three seconds, but cannot be paused or stopped by the user.","Action: For audio that starts playing automatically and lasts more than three seconds, an accessible mechanism to stop, pause, mute, or adjust the volume of the audio must be present.
  
How to fix:
Implement one of the following:
1. Good: Provide a mechanism for users to pause, stop, or mute the audio content without affecting the overall system volume, or
2. Better: Make the audio stop automatically after three seconds, or
3. Best: Play the audio only on user request.
  
The first two solutions are preferred, as audio content that plays automatically can make it difficult for a screen reader user to find a mechanism for controlling the audio.","Users who are blind or have low vision find it difficult to hear the screen reader's speech output if an automatic audio is played at the same time.

An accessible mechanism must be provided to stop, pause, mute or adjust the volume of the audio.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/audio-control,Audio and Video,Yes,No,"Blind, Low Vision",,"Autoplaying Content
https://staging.userway.org/university/library/autoplaying-content/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
65,AA,2.0,1.4.4 Resize text,Page cannot be zoomed to 200%,Page is not scalable to 200%.,"Action: Make sure text can be resized up to 200%, without assistive technology, and without loss of content or functionality.
  
  
 How to fix:
 1. Make sure text is scalable, and
 2. Make sure container:
 a. Good: Provides a scrollbar as needed, or
 b. Better: Is large enough to display all text at 200%, or
 c. Best: Scales to display the enlarged text without scrolling","Users with low vision, or any vision difficulties, may zoom content to make it easier to read. Even people with average or good vision may use zoom to enlarge small text or ease eye-strain.

Content must be scalable up to 200% without loss of content or functionality, and without requiring assistive technology.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/resize-text,"Font size, Structure",No,No,"Blind, Low Vision",,"Relative Text Size and Responsive Design:
https://staging.userway.org/university/library/relative-text-size-and-responsive-design/",,,,,,,,,
66,AA,2.0,1.4.4 Resize text,Loss of functionality when zoomed,Functionality is lost when page is scaled to 200%.,"Action: Make sure text does not lose functionality when resized up to 200%.
  
 How to fix:
 1. Make sure text is scalable, and
 2. Make sure container:
 a. Good: Provides a scrollbar as needed, or
 b. Better: Is large enough to display all text at 200%, or
 c. Best: Scales to display the enlarged text without scrolling","Users with low vision, or any vision difficulties, may zoom content to make it easier to read. Even people with average or good vision may use zoom to enlarge small text or ease eye-strain.

Content must be scalable up to 200% without loss of content or functionality, and without requiring assistive technology.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/resize-text,"Font size, Structure",No,No,"Blind, Low Vision",,"Relative Text Size and Responsive Design:
https://staging.userway.org/university/library/relative-text-size-and-responsive-design/",,,,,,,,,
67,AA,2.0,1.4.4 Resize text,Content/text overlaps when zoomed,"When page is scaled to 200%, content/texts overlap.","Action: Make sure text and content can be resized up to 200%, without assistive technology, and without overlap or loss of content, or loss of functionality.

 How to fix:
 1. Make sure text is scalable, and
 2. Make sure container:
 a. Good: Provides a scrollbar as needed, or
 b. Better: Is large enough to display all text at 200%, or
 c. Best: Scales to display the enlarged text without scrolling","When zoomed to 200%, content must not overlap. Overlapping content is not readable or usable, and can cause confusion or loss of functionality for users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/resize-text,"Font size, Structure",No,Yes,"Blind, Low Vision",,"Relative Text Size and Responsive Design:
https://staging.userway.org/university/library/relative-text-size-and-responsive-design/",,,,,,,,,
68,AA,2.0,1.4.4 Resize text,Content not usable when zoomed,"When page is scaled to 200%, content/text is not usable.","Action: Make sure text can be resized up to 200%, without assistive technology, and without loss of content or functionality.
  
 How to fix:
 1. Make sure text is scalable, and
 2. Make sure container:
 a. Good: Provides a scrollbar as needed, or
 b. Better: Is large enough to display all text at 200%, or
 c. Best: Scales to display the enlarged text without scrolling","Users with low vision, or any vision difficulties, may zoom content to make it easier to read. Even people with average or good vision may use zoom to enlarge small text or ease eye-strain.

Content must be scalable up to 200% without loss of content or functionality, and without requiring assistive technology.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/resize-text,"Font size, Structure",No,Yes,"Blind, Low Vision",,"Relative Text Size and Responsive Design:
https://staging.userway.org/university/library/relative-text-size-and-responsive-design/",,,,,,,,,
69,AA,2.0,1.4.4 Resize text,Loss of content functionality when zoomed,"When page is scaled to 200%, content/text loses functionality.","Action: Make sure text can be resized up to 200%, without assistive technology, and without loss of content or functionality.
  
 How to fix:
 1. Make sure text is scalable, and
 2. Make sure container:
 a. Good: Provides a scrollbar as needed, or
 b. Better: Is large enough to display all text at 200%, or
 c. Best: Scales to display the enlarged text without scrolling","Users with low vision, or any vision difficulties, may zoom content to make it easier to read. Even people with average or good vision may use zoom to enlarge small text or ease eye-strain.

Content must be scalable up to 200% without loss of content or functionality, and without requiring assistive technology.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/resize-text,"Font size, Structure",No,No,"Blind, Low Vision",,"Relative Text Size and Responsive Design:
https://staging.userway.org/university/library/relative-text-size-and-responsive-design/",,,,,,,,,
70,AA,2.0,1.4.4 Resize text,Loss of content when zoomed,"When page is scaled to 200%, there is a loss of information.","Action: Make sure that there is no loss of information when the page is zoomed to 200%.
  
 How to fix:
 1. Make sure text is scalable, and
 2. Make sure container:
 a. Good: Provides a scrollbar as needed, or
 b. Better: Is large enough to display all text at 200%, or
 c. Best: Scales to display the enlarged text without scrolling","Users with low vision, or any vision difficulties, may zoom content to make it easier to read. Even people with average or good vision may use zoom to enlarge small text or ease eye-strain.

Content must be scalable up to 200% without loss of content or functionality, and without requiring assistive technology.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/resize-text,"Font size, Structure",No,No,"Blind, Low Vision",,"Relative Text Size and Responsive Design:
https://staging.userway.org/university/library/relative-text-size-and-responsive-design/",,,,,,,,,
71,AA,2.0,1.4.5 Images of text,Image of text is used,Text is set as an image of text.,"Action: Text must be set as real text and not an image of text.
  
 How to fix:
 Use one of the following methods to make text adjustable:
 1. Good: Provide functionality allowing users to adjust the way text is displayed in images of text, including the font size, font family, foreground/background colors, line spacing, and alignment; or
 2. Better: Use actual text.",Users with low vision cannot read image text when zoomed. Text must be set as real text rather than embedded in an image.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/images-of-text,Content,No,No,"Blind, Low vision, Cognitive ",,"Images of text:
https://staging.userway.org/university/library/images-of-text/

Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/",,,,,,,,,
72,AA,2.1,1.4.10 Reflow,Page scrolls in two dimensions,"An element has """"position: fixed"""". This requires scrolling in two dimensions.","Action: Make sure the page is viewable horizontally, except for parts that require two-dimensional layout for usage or meaning.
  
 How to fix:
 Use responsive web design to make sure page content reflows to fit in the window whenever the viewport narrows or the text size changes.
  
 Use these techniques:
 1. Reflow content using CSS Flexbox 
 2. Use CSS width, max-width and Flexbox to fit labels and inputs
 3. Within the content, provide options for the user to switch to a layout that does not require horizontal scroll to read a line of text.","Pages should not require scrolling in two dimensions. This causes difficulty for many users, as well as disorientation and accessibility issues for screen reader and assistive tech users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/reflow,Structure,No,No,"Blind, Low vision, Cognitive ",,"Responsive Reflow:
https://staging.userway.org/university/library/responsive-reflow/",,,,,,,,,
73,AA,2.1,1.4.10 Reflow,Text format requires scrolling in two dimensions,Preformatted text may require scrolling in two dimensions.,"Action: Make sure text is viewable horizontally, except for parts that require two-dimensional layout for usage or meaning.
  
 How to fix:
  
 Use responsive web design to make sure page content reflows to fit in the window whenever the viewport narrows or the text size changes.
  
 Use these techniques:
 1. Reflow content using CSS Flexbox 
 2. Use CSS width, max-width and Flexbox to fit labels and inputs
 3. Within the content, provide options for the user to switch to a layout that does not require horizontal scroll to read a line of text.","Text should not require scrolling in two dimensions. This causes difficulty for many users, as well as disorientation and accessibility issues for screen reader and assistive tech users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/reflow,Structure,No,No,"Blind, Low vision, Cognitive ",,"Responsive Reflow:
https://staging.userway.org/university/library/responsive-reflow/",,,,,,,,,
74,AA,2.1,1.4.10 Reflow,Loss of content/functionality on page reflow,Page reflow causes loss of information or functionality.,"Action: Make sure that when the page is zoomed for readability, and when the page reflows, there is no loss of information or functionality. Page reflow must not cause text to be hidden.
  
 How to fix:
 Use responsive web design to make sure page content reflows to fit in the window whenever the viewport narrows or the text size changes.
  
 Use these techniques:
 1. Reflow content using CSS Flexbox 
 2. Use CSS width, max-width and Flexbox to fit labels and inputs
 3. Within the content, provide options for the user to switch to a layout that does not require horizontal scroll to read a line of text.","Users with low vision, or any vision difficulties, may zoom content to make it easier to read. Even people with average or good vision may use zoom to enlarge small text or ease eye-strain.

Content must be scalable up to 200% without loss of content or functionality, and without requiring assistive technology.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/reflow,Structure,No,No,"Blind, Low vision, Cognitive ",,"Responsive Reflow:
https://staging.userway.org/university/library/responsive-reflow/",,,,,,,,,
75,AA,2.1,1.4.10 Reflow,Content overlaps,Content overlaps at 320px.,"Action: Make sure the content does not overlap at 320 px: this obstructs reading.
  
 How to fix:
  
 Use responsive web design to make sure page content reflows to fit in the window whenever the viewport narrows or the text size changes.
  
 Use these techniques:
 1. Reflow content using CSS Flexbox 
 2. Use CSS width, max-width and Flexbox to fit labels and inputs
 3. Within the content, provide options for the user to switch to a layout that does not require horizontal scroll to read a line of text.","When content overlaps, users with low vision or visual disabilities cannot access the content. Overlap will cause difficulty in readability.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/reflow,Structure,No,No,"Blind, Low vision, Cognitive ",,"Responsive Reflow:
https://staging.userway.org/university/library/responsive-reflow/",,,,,,,,,
76,AA,2.1,1.4.10 Reflow,Content does not reflow,Content does not reflow to a single column when zoomed.,"Action: Make sure that content reflows into a single column to avoid reading difficulty.
  
How to fix:
Use responsive web design to make sure page content reflows to fit in the window whenever the viewport narrows or the text size changes.
  
 Use these techniques:
 1. Reflow content using CSS Flexbox 
 2. Use CSS width, max-width and Flexbox to fit labels and inputs
 3. Within the content, provide options for the user to switch to a layout that does not require horizontal scroll to read a line of text.","Users with low vision or visual disabilities should be able to zoom content up to 400%. Content that is hidden, or splits into two columns, makes reading difficult. Content should flow into a single column for ease of readability.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/reflow,Structure,No,No,"Blind, Low vision, Cognitive ",,"Responsive Reflow:
https://staging.userway.org/university/library/responsive-reflow/",,,,,,,,,
77,AA,2.1,1.4.10 Reflow,Content scrolls in two directions on zoom,"When content is zoomed, horizontal scrolling appears in both directions at some low resolutions.","Action: Make sure content appears at a high enough resolution, and that content does not scroll in two directions, when the content is zoomed.
  
How to fix:
Use responsive web design to make sure page content reflows to fit in the window whenever the viewport narrows or the text size changes.
  
 Use these techniques:
 1. Reflow content using CSS Flexbox 
 2. Use CSS width, max-width and Flexbox to fit labels and inputs
 3. Within the content, provide options for the user to switch to a layout that does not require horizontal scroll to read a line of text.","Users with low vision or visual disabilities should be able to zoom content up to 400%. Content that is low resolution is difficult to read, and content that scrolls in two directions can cause disorientation and confusion for assistive tech users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/reflow,Structure,No,No,"Low vision, Blind, Cognitive ",,"Responsive Reflow:
https://staging.userway.org/university/library/responsive-reflow/",,,,,,,,,
78,AA,2.1,1.4.12 Text spacing,Text spacing causes loss of functionality,"When text spacing is applied, there is a loss of functionality.","Action: Make sure there is no loss of functionality when text spacing is increased for readability. Use relative units of font size, line height, and spacing between characters, words, lines and paragraphs.
  
How to fix:
Make sure text fits within its container without being cut off or overlapping other text when the text spacing bookmarklet is run.
  
Use either of the following techniques:
 1. The container resizes automatically when text spacing is modified.
 2. The container is large enough for the expanded text.",Users who apply a change in text spacing to better view content should not lose functionality.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/text-spacing,Structure,No,No,"Low vision, Blind, Cognitive ",,"Allow Text Spacing:
https://staging.userway.org/university/library/allow-text-spacing/

Responsive Reflow:
https://staging.userway.org/university/library/responsive-reflow/",,,,,,,,,
79,AA,2.1,1.4.12 Text spacing,Text spacing causes loss of content,"When text spacing is applied, there is a loss of content.","Action: Make sure there is no loss of content when the text spacing is increased for readability.
  
 How to fix:
 Make sure text fits within its container without being cut off or overlapping other text when the text spacing bookmarklet is run.
  
 Use either of the following techniques:
 1. The container resizes automatically when text spacing is modified.
 2. The container is large enough for the expanded text.","When users increase text spacing for better readability, the text shifts to the edge of the screen; this will hamper readability. Users who apply a change in text spacing to better view content should not lose content or functionality.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/text-spacing,Structure,No,No,"Low vision, Blind, Cognitive ",,"Allow Text Spacing:
https://staging.userway.org/university/library/allow-text-spacing/

Responsive Reflow:
https://staging.userway.org/university/library/responsive-reflow/",,,,,,,,,
80,AA,2.1,1.4.12 Text spacing,Text spacing causes loss of content due to overlap,Content overlaps when text spacing is applied.,"Action: Make sure that there is no content overlap when text spacing is increased for readability.
  
How to fix:
Make sure text fits within its container without being cut off or overlapping other text when the text spacing bookmarklet is run.
  
 Use either of the following techniques:
 1. The container resizes automatically when text spacing is modified.
 2. The container is large enough for the expanded text.",Users who apply a change in text spacing to better view content should not lose content or functionality. Overlapping causes loss of content.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/text-spacing,Structure,No,No,"Low vision, Blind, Cognitive ",,"Allow Text Spacing:
https://staging.userway.org/university/library/allow-text-spacing/

Responsive Reflow:
https://staging.userway.org/university/library/responsive-reflow/",,,,,,,,,
81,AA,2.1,1.4.12 Text spacing,Text spacing cannot be applied,Users are restricted from applying text spacing on the page.,"Action: Provide adjustments in height and width on the page for flexibility in increasing text spacing.
  
How to fix:
Make sure text fits within its container without being cut off or overlapping other text when the text spacing bookmarklet is run.
  
 Use either of the following techniques:
 1. The container resizes automatically when text spacing is modified.
 2. The container is large enough for the expanded text.",Users who cannot read the content without changing text spacing find it difficult to access the text when it is restricted. Flexibility must be provided for readability.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/text-spacing,Structure,No,Yes,"Low vision, Blind, Cognitive ",,"Allow Text Spacing:
https://staging.userway.org/university/library/allow-text-spacing/

Responsive Reflow:
https://staging.userway.org/university/library/responsive-reflow/",,,,,,,,,
82,A,2.0,2.2.1 Timing adjustable,Screen reader users cannot access elements,The controls provided to extend the time limit are not screen reader accessible.,"Action: Make sure controls provided to extend the time limit are screen reader accessible.
  
How to fix:
1. Move keyboard focus to the element that extends the time limit, and
2. Make sure that screen readers can perceive the element along with a timeout alert message, dialog or alert. To achieve this, dialog design pattern can be used. ","Users with low vision or other visual or cognitive disabilities may require more time to read content or perform functions.

Controls to extend the time limit must be provided. These controls must also be available to screen reader and assistive tech users.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable,Dynamic content,No,Yes,"Low vision, Blind, Cognitive ",,"Time Limits:
https://staging.userway.org/university/library/time-limits-2/",,,,,,,,,
83,AA,2.1,1.4.13 Content on hover or focus,Content is not dismissible,The user can't dismiss content without moving cursor hover or keyboard focus.,"Action: Make sure content can be dismissed with a keyboard without moving the mouse, hovering, or changing keyboard focus.
  
 How to fix:
 Make sure any content that appears on focus or hover is:
 1. Dismissible: The user can make additional content disappear without moving focus or the mouse
 2. Hoverable: The additional content remains visible when the mouse moves from the trigger element onto the additional content
 3. Persistent: The additional content remains visible until:
 a. The user removes focus or hover from the trigger element and the additional content
 b. The user explicitly dismisses it, or
 c. The information in it becomes invalid.",Users with low vision who wish to dismiss content should be able to do so via keyboard without moving the mouse.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus,"Dynamic content, Keyboard",No,Yes,"Low vision, Blind, Cognitive "," 
Ensure Esc Dismisses New Content
https://staging.userway.org/university/library/ensure-esc-dismisses-new-content/


If Content Appears on Hover, the New Content needs to Remain Visible Until Dismissed
https://staging.userway.org/university/library/if-content-appears-on-hover-the-new-content-needs-to-remain-visible-until-dismissed/","
Hover Content:
https://staging.userway.org/university/library/hover-content/

Feedback and Notifications:
https://staging.userway.org/university/library/feedback-and-notifications/",,,,,,,,,
84,AA,2.1,1.4.13 Content on hover or focus,Content is not hoverable,Content shown on hover is not hoverable.,"Action: Make sure content on hover can be dismissed via keyboard without moving the mouse or changing keyboard focus.
  
 How to fix:
 Make sure any content that appears on focus or hover is:
 1. Dismissible: The user can make additional content disappear without moving focus or the mouse
 2. Hoverable: The additional content remains visible when the mouse moves from the trigger element onto the additional content
 3. Persistent: The additional content remains visible until:
 a. The user removes focus or hover from the trigger element and the additional content
 b. The user explicitly dismisses it, or
 c. The information in it becomes invalid.",Users with low vision who wish to dismiss content on hover without it disappearing should be able to do so via keyboard without moving the mouse.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus,"Dynamic content, Keyboard",No,Yes,"Low vision, Blind, Cognitive "," 
Ensure Esc Dismisses New Content
https://staging.userway.org/university/library/ensure-esc-dismisses-new-content/


If Content Appears on Hover, the New Content needs to Remain Visible Until Dismissed
https://staging.userway.org/university/library/if-content-appears-on-hover-the-new-content-needs-to-remain-visible-until-dismissed/","
Hover Content:
https://staging.userway.org/university/library/hover-content/

Feedback and Notifications:
https://staging.userway.org/university/library/feedback-and-notifications/",,,,,,,,,
85,AA,2.1,1.4.13 Content on hover or focus,Content is not persistent,Content shown on mouse hover or keyboard focus does not stay visible until dismissed or invalid.,"Action: Make sure the content stays visible until dismissed.
  
  
 How to fix:
 Make sure any content that appears on focus or hover is:
 1. Dismissible: The user can make additional content disappear without moving focus or the mouse
 2. Hoverable: The additional content remains visible when the mouse moves from the trigger element onto the additional content
 3. Persistent: The additional content remains visible until:
 a. The user removes focus or hover from the trigger element and the additional content
 b. The user explicitly dismisses it, or
 c. The information in it becomes invalid.","Users with readability issues need the content to remain visible for a longer period. Content should be visible until the user dismisses it, or its information is no longer valid.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus,"Dynamic content, Keyboard",No,Yes,"Low vision, Blind, Cognitive "," 
Ensure Esc Dismisses New Content
https://staging.userway.org/university/library/ensure-esc-dismisses-new-content/


If Content Appears on Hover, the New Content needs to Remain Visible Until Dismissed
https://staging.userway.org/university/library/if-content-appears-on-hover-the-new-content-needs-to-remain-visible-until-dismissed/

Use Caution where Interactive Controls Appear in the Hover Text
https://staging.userway.org/university/library/use-caution-where-interactive-controls-appear-in-the-hover-text/

Discuss Alternatives to Hover Text:
https://staging.userway.org/university/library/discuss-alternatives-to-hover-text/


Ensure Custom Tooltips and Similar Hover Text can be Triggered by Keyboard
https://staging.userway.org/university/library/ensure-custom-tooltips-and-similar-hover-text-can-be-triggered-by-keyboard/


Moving the Pointer away from the Trigger should not be the Action that Dismisses the New Content
https://staging.userway.org/university/library/moving-the-pointer-away-from-the-trigger-should-not-be-the-action-that-dismisses-the-new-content/","
Hover Content:
https://staging.userway.org/university/library/hover-content/

Feedback and Notifications:
https://staging.userway.org/university/library/feedback-and-notifications/",,,,,,,,,
86,A,2.0,2.1.1 Keyboard,Element is not keyboard operable,No mechanism is provided to perform the action via keyboard.,"Action: Make sure users are able to perform actions such as activating buttons, links and form controls via keyboard.
  
 How to fix:
 Make sure the component can be used via keyboard.","Users need to perform various actions via keyboard , e.g., activating buttons, link and form controls. It is important to provide users with a mechanism to perform these actions.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/keyboard,"Custom Controls, Forms and UI, Keyboard",No,Yes,"Low vision, Blind, Cognitive ","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/

Use Standard HTML Elements where Possible, Using CSS to Alter Appearance not Behavior:
https://staging.userway.org/university/library/use-standard-html-elements-where-possible-using-css-to-alter-appearance-not-behavior/

Be familiar with Established Keyboard Conventions
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Implement Keyboard Operation for Custom Elements
https://staging.userway.org/university/library/implement-keyboard-operation-for-custom-elements/","
Tab order:
https://staging.userway.org/university/library/tab-order/

Keyboard interaction:
https://staging.userway.org/university/library/keyboard-interaction-2/

Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
87,A,2.0,2.1.1 Keyboard,Modal lacks keyboard exit.,There is no mechanism to close the modal dialog via keyboard.,"Action: Make sure that users are able to close the modal dialog using a close button or the Escape key.
  
How to fix:
Make sure the modal dialog has a close button, and that the close button is operable via keyboard, mouse and touch events.","Keyboard navigation and assistive tech users must be able to close out of modal dialogs in an expected manner, using keyboard only. If these mechanisms are not provided, users will be trapped within the modal.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/keyboard,"Custom Controls, Forms and UI, Keyboard",No,Yes,"Low vision, Blind, Cognitive ","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/

Use Standard HTML Elements where Possible, Using CSS to Alter Appearance not Behavior:
https://staging.userway.org/university/library/use-standard-html-elements-where-possible-using-css-to-alter-appearance-not-behavior/

Be familiar with Established Keyboard Conventions
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Implement Keyboard Operation for Custom Elements
https://staging.userway.org/university/library/implement-keyboard-operation-for-custom-elements/","
Tab order:
https://staging.userway.org/university/library/tab-order/

Keyboard interaction:
https://staging.userway.org/university/library/keyboard-interaction-2/

Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
88,A,2.0,2.1.1 Keyboard,"Persistent modal, form submission required.",Modal dialog cannot be closed until form is submitted.,"Action: Make sure users are able to close the modal dialog at any time, using a close button or the Escape key, regardless of form submission status.
  
How to fix:
Make sure the modal dialog has a close button, and the close button is operable via keyboard, mouse and touch events.","Keyboard navigation and assistive tech users must be able to close out of modal dialogs in an expected manner, using keyboard only, at any point, and regardless of whether a form has been submitted. If the dialog cannot be closed in this way until the form is submitted, users will be trapped within the modal.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/keyboard,"Custom Controls, Forms and UI, Keyboard",No,Yes,"Low vision, Blind, Cognitive ","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/

Use Standard HTML Elements where Possible, Using CSS to Alter Appearance not Behavior:
https://staging.userway.org/university/library/use-standard-html-elements-where-possible-using-css-to-alter-appearance-not-behavior/

Be familiar with Established Keyboard Conventions
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Implement Keyboard Operation for Custom Elements
https://staging.userway.org/university/library/implement-keyboard-operation-for-custom-elements/","
Tab order:
https://staging.userway.org/university/library/tab-order/

Keyboard interaction:
https://staging.userway.org/university/library/keyboard-interaction-2/

Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
89,A,2.0,2.1.1 Keyboard,Elements use device dependent handlers,Elements are not keyboard navigable due to usage of device dependent handlers.,"Action: Make sure all elements on the page (buttons, links, form controls etc.) are reachable via Tab key.
  
 How to fix:
 To ensure accessibility, use:
 1. Either a device-independent event handler (one that works with both mouse and keyboard)
 2. Or, use both mouse- and keyboard-dependent event handlers.","Whenever possible, content should be operable via keyboard or keyboard interface such as emulators. This benefits users who are blind, low vision, or have a physical disability or hand tremors.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/keyboard,"Custom Controls, Forms and UI, Keyboard",No,Yes,"Blind, Low Vision, Cognitive","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/

Use Standard HTML Elements where Possible, Using CSS to Alter Appearance not Behavior:
https://staging.userway.org/university/library/use-standard-html-elements-where-possible-using-css-to-alter-appearance-not-behavior/

Be familiar with Established Keyboard Conventions
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Implement Keyboard Operation for Custom Elements
https://staging.userway.org/university/library/implement-keyboard-operation-for-custom-elements/","
Tab order:
https://staging.userway.org/university/library/tab-order/

Keyboard interaction:
https://staging.userway.org/university/library/keyboard-interaction-2/

Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
90,A,2.0,2.1.1 Keyboard,Drag and drop widget not keyboard operable,The drag and drop widget functionality is not keyboard accessible.,"Action: Make sure all elements on the page (buttons, links, form controls etc.) are reachable via Tab key.
  
How to fix:
Ensure that all drag and drop functions can also be completed using keyboard only.","Whenever possible, content should be operable via keyboard or keyboard interface such as emulators. This benefits users who are blind, low vision, or have a physical disability or hand tremors.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/keyboard,"Custom Controls, Forms and UI, Keyboard",No,Yes,"Blind, Low Vision, Cognitive","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/

Use Standard HTML Elements where Possible, Using CSS to Alter Appearance not Behavior:
https://staging.userway.org/university/library/use-standard-html-elements-where-possible-using-css-to-alter-appearance-not-behavior/

Be familiar with Established Keyboard Conventions
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Implement Keyboard Operation for Custom Elements
https://staging.userway.org/university/library/implement-keyboard-operation-for-custom-elements/","
Tab order:
https://staging.userway.org/university/library/tab-order/

Keyboard interaction:
https://staging.userway.org/university/library/keyboard-interaction-2/

Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
91,A,2.0,2.1.1 Keyboard,Shortcut keys conflict with assistive tech shortcuts,The specified shortcut key on the page or application conflicts with screen reader or browser shortcut keys.,"Action: Make sure access keys do not override screen reader or browser shortcut keys.
  
How to fix:
1. As a best practice, make each access key unique, and
2. Don't override browser, assistive technology, or operating system shortcuts.",Shortcut keys that conflict with commonly used and assistive tech or screen reader shortcuts may make content difficult or impossible to access for users.,Critical,https://www.w3.org/WAI/WCAG21/Understanding/keyboard,"Custom Controls, Forms and UI, Keyboard",No,Yes,"Blind, Low Vision, Cognitive","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/

Use Standard HTML Elements where Possible, Using CSS to Alter Appearance not Behavior:
https://staging.userway.org/university/library/use-standard-html-elements-where-possible-using-css-to-alter-appearance-not-behavior/

Be familiar with Established Keyboard Conventions
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Implement Keyboard Operation for Custom Elements
https://staging.userway.org/university/library/implement-keyboard-operation-for-custom-elements/","
Tab order:
https://staging.userway.org/university/library/tab-order/

Keyboard interaction:
https://staging.userway.org/university/library/keyboard-interaction-2/

Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
92,A,2.0,2.1.1 Keyboard,Duplicate access key value,Access key attribute value is not unique.,"Action: Make sure access key attribute value is unique and not a duplicate.
  
How to fix:
1. As a best practice, make each access key unique.
2. If multiple buttons or links share the same function, put the access key on only one of them.","Access key attribute values must be unique. Avoid access keys whenever possible. If you do use them, make sure they do not conflict with user agent and/or shortcut keys.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/keyboard,"Custom Controls, Forms and UI, Keyboard",No,Yes,"Blind, Low Vision, Cognitive","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/

Use Standard HTML Elements where Possible, Using CSS to Alter Appearance not Behavior:
https://staging.userway.org/university/library/use-standard-html-elements-where-possible-using-css-to-alter-appearance-not-behavior/

Be familiar with Established Keyboard Conventions
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Implement Keyboard Operation for Custom Elements
https://staging.userway.org/university/library/implement-keyboard-operation-for-custom-elements/","
Tab order:
https://staging.userway.org/university/library/tab-order/

Keyboard interaction:
https://staging.userway.org/university/library/keyboard-interaction-2/

Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
93,A,2.0,2.1.1 Keyboard,Close element missing in dialog,Dialogue opens but cannot be dismissed by touch because it does not have a close button.,"Action: Make sure that the dialog has a close element.
  
How to fix:
Provide a close button in the modal dialog","When the dialog opens, the user cannot dismiss it by touch because it does not have a close element. If the dialog cannot be closed in this way, users will be trapped within the modal.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/keyboard,"Custom Controls, Forms and UI, Keyboard",No,Yes,"Blind, Low Vision, Cognitive","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/

Use Standard HTML Elements where Possible, Using CSS to Alter Appearance not Behavior:
https://staging.userway.org/university/library/use-standard-html-elements-where-possible-using-css-to-alter-appearance-not-behavior/

Be familiar with Established Keyboard Conventions
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Implement Keyboard Operation for Custom Elements
https://staging.userway.org/university/library/implement-keyboard-operation-for-custom-elements/","
Tab order:
https://staging.userway.org/university/library/tab-order/

Keyboard interaction:
https://staging.userway.org/university/library/keyboard-interaction-2/

Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
94,A,2.0,2.1.2 No keyboard trap,Keyboard trap on element,The element/widget has a keyboard trap.,"Action: Make sure users can tab to and away from all parts of the site.
  
How to fix:
Keyboard trap fixes depend on their cause:
1. In a rich text editor, the text field can become a keyboard trap if pressing the Tab key inserts a tab character. The user interface must:
a. Provide an alternate method for navigating away, and
b. Inform users about it.
2. Keyboard traps can result from scripts that use blur or keypress events to modify an element's behavior. The script must be modified so it doesn't interfere with default keypress behaviors.
3. Any text field can become a keyboard trap if scripting returns focus to the field when the user enters data incorrectly.",Make sure keyboard focus is not locked or trapped within subsections of content on a web page. Users must be able to navigate to and from all navigable page elements using keyboard only.,Blocker,https://www.w3.org/WAI/WCAG21/Understanding/no-keyboard-trap,Keyboard,No,Yes,"Blind, Low Vision, Cognitive","
Be familiar with Established Keyboard Conventions:
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Make Custom Media Player and Animation Controls Keyboard Accessible: https://staging.userway.org/university/library/make-custom-media-player-and-animation-controls-keyboard-accessible/","
Tab order:
https://staging.userway.org/university/library/tab-order/

Keyboard interaction:
https://staging.userway.org/university/library/keyboard-interaction-2/

Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
95,A,2.0,2.1.4 Character key shortcuts,Unable to turn off character key shortcut,A mechanism is not available to turn off the character key shortcut.,"Action: Make sure users can turn off character key shortcuts.
  
 How to fix:
 Use one of the following techniques:
 1. Don't use single character key shortcuts, if possible.
 2. Provide a mechanism to turn off character key shortcuts.
 3. Design all keyboard shortcuts using combinations of non-printable keys.
 4. Let the user trigger the shortcut key only when the element has keyboard focus.",A user who doesn't intend to use the character key shortcuts may find it difficult to navigate if a mechanism is not available to turn the character key shortcut off.,Critical,https://www.w3.org/WAI/WCAG21/Understanding/character-key-shortcuts,Keyboard,No,No,"Blind, Low Vision, Cognitive","
Be familiar with Established Keyboard Conventions:
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/",,,,,,,,,,
96,A,2.1,2.1.4 Character key shortcuts,Unable to remap character key shortcut,No mechanism is available to remap character key shortcuts.,"Action: Make sure that users can remap character key shortcuts. Design all keyboard shortcuts with combinations of non-printable keys.
  
How to fix:
Use one of the following techniques:
1. Don't use single character key shortcuts, if possible.
2. Provide a mechanism to turn off character key shortcuts.
3. Design all keyboard shortcuts using combinations of non-printable keys.
4. Let the user trigger the shortcut key only when the element has keyboard focus.","Keyboard shortcuts are useful for all, and especially vital for keyboard navigation and assistive tech users. However, pre-set options for an application or site can interfere with or replace other shortcuts already in use. Users must be able to remap keyboard shortcuts, so that conflicts with other applications and assistive tech can be resolved.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/character-key-shortcuts,Keyboard,No,No,"Blind, Low Vision, Cognitive","
Be familiar with Established Keyboard Conventions:
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/",,,,,,,,,,
97,A,2.1,2.1.4 Character key shortcuts,Keyboard shortcut is active,User interface component keyboard shortcut is always active.,"Action: Trigger the shortcut key only when the element has keyboard focus.
  
How to fix:
Use one of the following techniques:
1. Don't use single character key shortcuts, if possible.
2. Provide a mechanism to turn off character key shortcuts.
3. Design all keyboard shortcuts using combinations of non-printable keys.
4. Let the user trigger the shortcut key only when the element has keyboard focus.","Shortcut keys should only be available when the element has keyboard focus.

Otherwise, they can interfere with or replace other shortcuts already in use.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/character-key-shortcuts,Keyboard,No,No,"Blind, Low Vision, Cognitive","
Be familiar with Established Keyboard Conventions:
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/",,,,,,,,,,
98,A,2.0,2.2.1 Timing adjustable,Element is not keyboard operable,Controls provided to extend the time limit are not keyboard operable.,"Action: Make sure controls provided to extend the time limit are keyboard operable.
  
How to fix:
Make sure any user controls for adjusting time are keyboard accessible.","Users with low vision or other visual or cognitive disabilities may require more time to read content or perform functions.

Controls to extend the time limit must be provided. These controls must also be available to keyboard navigation and assistive tech users.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable,Dynamic content,No,Yes,"Blind, Low Vision, Cognitive","
Be familiar with Established Keyboard Conventions:
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/","
Time Limits:
https://staging.userway.org/university/library/time-limits-2/",,,,,,,,,
99,A,2.0,2.2.1 Timing adjustable,Screen reader cannot access message,The message provided to extend the time limit is not screen reader accessible.,"Action: Make sure the message provided to extend the time limit is perceivable by screen readers.
  
How to fix:
1. Move keyboard focus to the timeout message, and make sure screen reader users can perceive it, or
2. Use role=alert or aria-live region along wih appropriate ARIA attributes to inform screen reader users about the timeout message.","Users with low vision or other visual or cognitive disabilities may require more time to read content or perform functions.

Controls and notifications about options to extend the time limit must be provided. The time control extension message must also be available to screen reader and assistive tech users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable,Dynamic content,No,Yes,"Blind, Low Vision, Cognitive",,"Time Limits:
https://staging.userway.org/university/library/time-limits-2/",,,,,,,,,
100,A,2.0,2.2.1 Timing adjustable,Timeout functionality cannot be controlled,"No mechanism provided to turn off, adjust or extend the timeout functionality.","Action: Make sure that a mechanism is provided to turn off, adjust or extend the timeout functionality.
  
How to fix:
1. Provide an accessible warning of the timeout, and
2. Provide an accessible mechanism to do ONE of the following:
a. Add a control on the landing page for user to initiate a longer session time or no session timeout.
b. Add a way for the user to turn off the session time out.
c. Add a means to set the time limit to 10 times the default time limit.
d. Prompt the user with help of a pop-up or modal so that enough warning time is available for the user to reset the time limit.","Users with low vision or other visual or cognitive disabilities require a mechanism to adjust or extend timeout functionality, so they have more time to read content or perform functions.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable,Dynamic content,No,No,"Blind, Low Vision, Cognitive",,"Time Limits:
https://staging.userway.org/university/library/time-limits-2/",,,,,,,,,
101,A,2.0,2.2.1 Timing adjustable,Insufficient time extension provided.,The user is not given at least 20 seconds to extend the time limit.,"Action: Make sure that the user is given at least 20 seconds to extend the time limit.
  
 How to fix:
 1. Provide an accessible warning of the timeout, and
 2. Provide an accessible mechanism to do ONE of the following:
 a. Add a control on the landing page for user to initiate a longer session time or no session timeout.
 b. Add a way for the user to turn off the session time out.
 c. Add a means to set the time limit to 10 times the default time limit.
 d. Prompt the user with help of a pop-up or modal so that enough warning time is available for the user to reset the time limit.","Users with low vision or other difficulties with readability should be warned before time expires and given at least 20 seconds to extend the time limit with a simple action (for example, ""press the spacebar"").",Serious,https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable,Dynamic content,No,No,"Blind, Low Vision, Cognitive",,"Time Limits:
https://staging.userway.org/university/library/time-limits-2/",,,,,,,,,
102,A,2.0,2.2.1 Timing adjustable,Unextendable auto-update time limit.,Time limit for auto-updating content cannot be extended.,"Action: Make sure the user can extend the time limit for auto-updating content.
  
How to fix:
1. Provide an accessible warning of the timeout, and
2. Provide an accessible mechanism to do ONE of the following:
a. Add a control on the landing page for user to initiate a longer session time or no session timeout.
b. Add a way for the user to turn off the session time out.
c. Add a means to set the time limit to 10 times the default time limit.
d. Prompt the user with help of a pop-up or modal so that enough warning time is available for the user to reset the time limit.",Auto-updating content must be provided with a feature to extend the time limit to 10 times its default update frequency.,Critical,https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable,Dynamic content,No,No,"Blind, Low Vision, Cognitive",,"Time Limits:
https://staging.userway.org/university/library/time-limits-2/",,,,,,,,,
103,A,2.0,"2.2.2 Pause, stop, hide",No pause/stop mechanism provided,Animation or background multimedia content does not have pause or stop mechanism.,"Action: Make sure animations or background multimedia content have a mechanism in place to pause or stop the movement.
  
How to fix:
Always provide pause, stop, or hide controls for animation, moving, or blinking content.","Users with low vision or other reading issues should be able to pause moving, blinking, or scrolling content, as it interferes with their ability to read the text.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide,Dynamic content,Yes,No,"Blind, Low Vision, Cognitive",,"Autoplaying Content
https://staging.userway.org/university/library/autoplaying-content/

Media players:
https://staging.userway.org/university/library/media-players/",,,,,,,,,
104,A,2.0,2.2.1 Timing adjustable,Critical information disappears after a time interval,"Critical information, e.g., errors, warnings, or success messages, appear for short intervals, with no mechanism to control time limit or reproduce the information.","Action: Make sure critical , e.g., errors, warnings, or success messages, are always available and do not disappear.
  
How to fix:
Set critical content such as errors, warnings, or success messages to be always available. They should not disappear regardless of time interval.","Users with low vision or other readablity issues should be able to pause critical errors, warnings, or success messages, as they disappear after a short interval.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable,Dynamic content,No,No,"Blind, Low Vision, Cognitive",,"Time Limits:
https://staging.userway.org/university/library/time-limits-2/",,,,,,,,,
105,A,2.0,"2.2.2 Pause, stop, hide",No pause/stop mechanism provided,"Moving, scrolling and/or blinking content has no pause or stop mechanism.","Action: Make sure moving content has a stop or pause mechanism.
  
How to fix:
Always provide pause, stop, or hide controls for animation, moving, or blinking content.","Users with low vision or other readibality issues should be able to pause or stop the movement of moving, scrolling or blinking content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide,Dynamic content,Yes,No,"Blind, Low Vision, Cognitive",,"Media Players:
https://staging.userway.org/university/library/media-players/

Autoplaying Content:
https://staging.userway.org/university/library/autoplaying-content/",,,,,,,,,
106,A,2.0,"2.2.2 Pause, stop, hide",Carousel has no pause/stop mechanism,Carousel has no pause/stop mechanism,"Action: Make sure carousel content has a stop or pause mechanism.
  
 How to fix:
 Always provide pause, stop, or hide controls for animation, moving, or blinking content.",Users with low vision or other readability issues should be able to pause or stop the movement of carousel content.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide,Dynamic content,Yes,Yes,"Blind, Low Vision, Cognitive",,"Media Players:
https://staging.userway.org/university/library/media-players/

Autoplaying Content:
https://staging.userway.org/university/library/autoplaying-content/",,,,,,,,,
107,A,2.0,"2.2.2 Pause, stop, hide",No mechanism to pause/stop auto updating content,Auto updating content has no pause or stop mechanism.,"Action: Make sure auto updating content has a stop or pause mechanism.
  
How to fix:
1. When possible, do not start an animation or other moving content on page load, if the movement lasts for more than five seconds.
2. Always provide pause, stop, or hide controls for animation, moving, or blinking content.
3. Provide meaningful labels for user controls.
4. Allow users to resume play from the point it was paused.",Users with low vision or other readibality issues should be able to pause or stop auto updating content.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide,Dynamic content,No,No,"Blind, Low Vision, Cognitive",,"Media Players:
https://staging.userway.org/university/library/media-players/

Autoplaying Content:
https://staging.userway.org/university/library/autoplaying-content/",,,,,,,,,
108,A,2.0,2.3.1 Three flashes or below,Pages flashes,Page content flashes more than 3 times per second.,"Action: Make sure content does not flash more than three times per second.
  
How to fix:
1. Avoid using any content that flashes, flickers or rapidly changes color.
2. But, if the content is necessary, make sure it:
a. Does not flash more than three times per second.
b. Is below the general flash and red flash thresholds.","Users who have seizure disorders can be triggered by flashing content. Content should not flash more than three times per second. Ideally, avoid flashing content altogether.",Blocker,https://www.w3.org/WAI/WCAG21/Understanding/three-flashes-or-below-threshold,Dynamic content,No,No,"Cognitive, Mobility, Low vision",,"Flashing Content:
https://staging.userway.org/university/library/flashing-content/",,,,,,,,,
109,A,2.0,2.4.1 Bypass blocks,Skip link is broken,Skip link is broken; skip link activation doesn't move keyboard focus to intended target.,"Action: Make sure that when the skip link is activated, focus moves to the intended target, instead of only scrolling visually.
  
How to fix:
Properly set focus to the content area when activated.","Make sure the skip link is activated. An activated skip link will lead a blind or visually impaired user through a web page quickly, navigating only to important information. Keyboard and assistive tech users can use fewer keyboard strokes to navigate.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks,Structure,Yes,Yes,"Blind, Low Vision, Cognitive ",,"Links and Search Function:
https://staging.userway.org/university/library/links-and-search-function/

Regions: 
https://staging.userway.org/university/library/regions/",,,,,,,,,
110,A,2.0,2.4.1 Bypass blocks,Landmarks not labeled as such,Screen readers identify multiple page landmarks as regions.,"Action: Make sure all landmarks with role=region are identified with an appropriate accessible name.

How to fix:
Make sure each landmark is marked up to accurately reflect the kind of content it contains.","Users with low vision or other readibality issues cannot navigate to the main content of the webpage if the skip link is broken.

Landmark roles identify page sections, so that assistive tech users can orient themselves on the page, navigate within it, and skip items that repeat, such as a navigation menu. They also help keyboard users move through the page.

When landmarks are not identified, keyboard navigation and assistive tech users may lose track of content, or may go through repetitive and unnecessary content.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks,Structure,No,No,"Blind, Low Vision, Cognitive ",,"Links and Search Function:
https://staging.userway.org/university/library/links-and-search-function/

Regions: 
https://staging.userway.org/university/library/regions/",,,,,,,,,
111,A,2.0,2.4.1 Bypass blocks,Missing skip link/landmark/heading,"The page does not contain a heading, skip link, or landmark region.","Action: Be sure to add headings, skip links, or landmarks to the page.
  
How to fix:
Use one of the following methods.

Good
• Landmark regions
  A. Place all page content inside a landmark element.
  B. Make sure each landmark accurately reflects the kind of content it contains.

Better
• Headings: Provide hierarchical heading structures.

Best
• Skip link: Add a skip link.","Users with low vision or readability issues find it tedious to navigate through large sections of content without a skip link.

Pages should have correctly marked skip links, landmarks, and headings.

If they do not, keyboard navigation and assistive tech users may lose track of content, or may go through repetitive and unnecessary content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks,Structure,Yes,No,"Blind, Low Vision, Cognitive ",,"Links and Search Function:
https://staging.userway.org/university/library/links-and-search-function/

Regions: 
https://staging.userway.org/university/library/regions/",,,,,,,,,
112,A,2.0,2.4.1 Bypass blocks,iFrame has no title,The iFrame has no ‘title' attribute or the ‘title' attribute is empty.,"Action: For iFrames that have meaningful content, add a title using the title attribute.
  
How to fix:
Add attribute title="""" to the iFrame, and add a description of its content.","iFrames must have correctly set attributes, and text alternatives with a content description. If they do not, screen reader and assistive tech users will not understand their purpose.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks,Structure,No,No,"Blind, Low Vision, Cognitive "," 
Code Headings According to Specifications
https://staging.userway.org/university/library/code-the-element-on-every-page-according-to-specifications/","
Links and Search Function:
https://staging.userway.org/university/library/links-and-search-function/",,,,,,,,,
113,A,2.0,2.4.1 Bypass blocks,iFrame has duplicate title,The iFrame ‘title' attribute is not unique.,"Action: Add a unique title attribute to the iFrame.
  
How to fix:
For iFrames that have meaningful content, create a relevant and unique title using the title attribute. Be sure to avoid duplicate or generic title attributes, e.g., ""iFrame"".","Labeling an iFrame gives assistive tech users a way to determine which frame to enter and explore in detail. Duplicate, non-unique titles are confusing and irrelevant.

If iFrames do not have title attributes that describe their content in a unique, meaningful way, screen reader and assistive tech users will not understand their purpose.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks,Structure,No,No,"Blind, Low Vision, Cognitive "," 
Code Headings According to Specifications
https://staging.userway.org/university/library/code-the-element-on-every-page-according-to-specifications/","
Links and Search Function:
https://staging.userway.org/university/library/links-and-search-function/",,,,,,,,,
114,A,2.0,2.4.1 Bypass blocks,iFrame title is not meaningful,The iFrame ‘title' attribute is not meaningful.,"Action: Provide the iFrame with a title attribute that is descriptive, understandable, and relevant.

How to fix:
For iFrames that have meaningful content, create a relevant and unique title using the title attribute. Be sure to avoid duplicate or generic title attributes, e.g., ""iFrame"".","Labeling an iFrame gives assistive tech users a way to determine which frame to enter and explore in detail. iFrames must have title attributes that describe their content in a meaningful way. If they do not, screen reader and assistive tech users will not understand their purpose.

When an iFrame is given a meaningful title, screen reader users can pull up a list of frames and identify the content or purpose of the iFrame based on its title. Without a meaningful name, a screen reader user may just hear ""frame"", the file name, path of the iFrame, or an unhelpful name like ""JavaScript"".",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks,Structure,No,No,"Blind, Low Vision, Cognitive "," 
Code Headings According to Specifications
https://staging.userway.org/university/library/code-the-element-on-every-page-according-to-specifications/","
Links and Search Function:
https://staging.userway.org/university/library/links-and-search-function/",,,,,,,,,
115,A,2.0,2.4.3 Focus order,Positive tabindex values have broken the focus order,Focus order is not logical and intuitive due to the usage of positive tabindex values.,"Action: Make sure focus order remains logical and intuitive
  
How to fix:
Make sure tabindex values are marked as less than 1 in order to receive programmatic keyboard focus.","Focusable components should receive focus in an order that preserves meaning and operability.

Keyboard and screen reader users expect to move left to right, top to bottom, in logical sequence, through all focusable page elements.

Users who cannot view the visual order expect accessible alternatives to mirror it. When reading order is not correctly sequenced, content order may be unclear or not understandable to blind or low-vision users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/focus-order,Structure,No,Yes,"Blind, Low Vision, Cognitive ","Where Possible, Achieve the Desired Tab Order by Adjusting the DOM, rather than Overriding the Tabindex:
https://staging.userway.org/university/library/where-possible-achieve-the-desired-tab-order-by-adjusting-the-dom-rather-than-overriding-the-tabindex/","Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/

Tab Order:
https://staging.userway.org/university/library/tab-order/",,,,,,,,,
116,A,2.0,2.4.2 Page title,Missing page title,Web page has no title tag [<title> tag].,"Action: Make sure that all pages have a page title, using the title tag.
  
How to fix:
Include a meaningful, non-empty <title> element in the <head> section.

Your titles should:
1. Accurately describe the page's content and purpose
2. Be unique (no duplicate titles)
3. Keep it simple and concise
4. Use language that's familiar to the user (no jargon)
5. Include the unique name first, overall site name last","All pages require a page title. Images cannot be used as a substitute for title elements for screen readers.

Screen readers announce the page title first: this offers assistive tech users a way to rapidly navigate content. The most useful page title is descriptive and meaningful, giving a quick overview of the page's content or purpose.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/page-titled,Structure,No,Yes,"Blind, Low Vision, Cognitive ", Code Headings According to Specifications https://staging.userway.org/university/library/code-the-element-on-every-page-according-to-specifications/,"


Page Titles:
https://staging.userway.org/university/library/page-titles/",,,,,,,,,
117,A,2.0,2.4.2 Page title,Page contains multiple page <title> tags,Web page has multiple title tags [<title>].,"Action: Remove extra title tags in the code.
  
How to fix:
Include only ONE <title> element in the <head> section.

Your titles should:
1. Accurately describe the page's content and purpose
2. Be unique (no duplicate titles)
3. Keep it simple and concise
4. Use language that's familiar to the user (no jargon)
5. Include the unique name first, overall site name last","All pages require a page title.

Screen readers announce the page title first: this offers assistive tech users a way to rapidly navigate content. The most useful page title is descriptive and meaningful, giving a quick overview of the page's content or purpose.

Multiple page titles are confusing and irrelevant.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/page-titled,Structure,No,Yes,"Blind, Low Vision, Cognitive ", Code Headings According to Specifications https://staging.userway.org/university/library/code-the-element-on-every-page-according-to-specifications/,"


Page Titles:
https://staging.userway.org/university/library/page-titles/",,,,,,,,,
118,A,2.0,2.4.2 Page title,Page title is not unique,Web page title tag <title> is not unique.,"Action: Provide a unique title for the page, using the title tag.
  
How to fix:
Include a unique, meaningful <title> element in the <head> section.

Your titles should:
1. Accurately describe the page's content and purpose
2. Be unique (no duplicate titles)
3. Keep it simple and concise
4. Use language that's familiar to the user (no jargon)
5. Include the unique name first, overall site name last","All pages require a page title.

Screen readers announce the page title first: this offers assistive tech users a way to rapidly navigate content. The most useful page title is descriptive and meaningful, giving a quick overview of the page's content or purpose.

Duplicate page titles are confusing and irrelevant.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/page-titled,Structure,Yes,No,"Blind, Low Vision, Cognitive ", Code Headings According to Specifications https://staging.userway.org/university/library/code-the-element-on-every-page-according-to-specifications/,"


Page Titles:
https://staging.userway.org/university/library/page-titles/",,,,,,,,,
119,A,2.0,2.4.2 Page title,Page title is not descriptive,Page purpose or context cannot be determined from title <title>.,"Action: Make sure the title describes the purpose of the page.
  
How to fix:
Include a meaningful, non-empty <title> element in the <head> section.

Your titles should:
1. Accurately describe the page's content and purpose
2. Be unique (no duplicate titles)
3. Keep it simple and concise
4. Use language that's familiar to the user (no jargon)
5. Include the unique name first, overall site name last","All pages require a page title.

Screen readers announce the page title first: this offers assistive tech users a way to rapidly navigate content. The most useful page title is descriptive and meaningful, giving a quick overview of the page's content or purpose.

If the page's purpose or context cannot be determined from the title, it is not helpful to anyone, especially assistive tech and screen reader users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/page-titled,Structure,No,Yes,"Blind, Low Vision, Cognitive ", Code Headings According to Specifications https://staging.userway.org/university/library/code-the-element-on-every-page-according-to-specifications/,"


Page Titles:
https://staging.userway.org/university/library/page-titles/",,,,,,,,,
120,A,2.0,2.4.2 Page title,The page title remains unchanged in single-page applications.,"In single-page applications, the page title remains static and doesn't update when changes occur in the main page content.","Action: Make sure the page title updates when the page updates, and the context of the page changes.
  
How to fix:
For single page applications, make sure the page title updates dynamically when the page updates, and the context of the page changes.","All pages require a page title. 

Screen readers announce the page title first: this offers assistive tech users a way to rapidly navigate content. The most useful page title is descriptive and meaningful, giving a quick overview of the page's content or purpose.

A page title that remains the same when the content has changed is confusing and irrelevant, especially for assistive tech users.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/page-titled,Structure,No,Yes,"Blind, Low Vision, Cognitive ", Code Headings According to Specifications https://staging.userway.org/university/library/code-the-element-on-every-page-according-to-specifications/,"


Page Titles:
https://staging.userway.org/university/library/page-titles/",,,,,,,,,
121,A,2.0,2.4.3 Focus order,Hidden element receives keyboard focus,Hidden element in tab order also lacks visible keyboard focus indicator.,"Action: Make sure the hidden element is removed from the tab order for all users.
  
How to fix:
Focusable elements should be removed from the tab order. To remove an item from the tab order, set the tabindex to ""-1"".","A visually-hidden CSS class hides everything under it. However, the content is still there, and it can be bumped into.

1. Content hidden this way is not visible, but will still be announced by screen readers.
2. If focusable elements like links are hidden using this method, keyboard navigators will land on the links, but will not be able to see what the links are.
3. Content hidden using aria-hidden will be visible, but will not be announced by screen readers.
4. If focusable elements are hidden using this method, screen reader users will still land on them, but will not hear what the element is.

This method causes unnecessary confusion for many users, and should be avoided whenever possible.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/focus-order,Structure,No,Yes,"Blind, Low Vision, Cognitive ","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/

Where Possible, Achieve the Desired Tab Order by Adjusting the DOM, rather than Overriding the Tabindex: 
https://staging.userway.org/university/library/where-possible-achieve-the-desired-tab-order-by-adjusting-the-dom-rather-than-overriding-the-tabindex/","
Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/",,,,,,,,,
122,A,2.0,2.4.3 Focus order,Keyboard focus does not move to updated content,Focus is either lost or does not move to updated content when user performs an action.,"Action: Make sure that focus moves to updated content or to the next element in the DOM when element is removed from DOM.
  
How to fix:
Make sure that the focus path continues to remain logical and sequential after the appearance or disappearance of content.","Focus determines where keyboard events go on a page at any given moment. It is important to correctly manage focus, programmatically moving a user's focus elsewhere on the page in response to an event or action.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/focus-order,Structure,Yes,Yes,"Blind, Low Vision, Cognitive, Mobility ","Where Possible, Achieve the Desired Tab Order by Adjusting the DOM, rather than Overriding the Tabindex:
https://staging.userway.org/university/library/where-possible-achieve-the-desired-tab-order-by-adjusting-the-dom-rather-than-overriding-the-tabindex/","Tab Order:
https://staging.userway.org/university/library/tab-order/",,,,,,,,,
123,A,2.0,2.4.3 Focus order,Keyboard focus does not move to modal dialog,The focus is not set on the modal (first element).,"Action: When a modal opens, set the keyboard focus on the first element in the modal.
  
How to fix:
When the user reveals previously hidden content, move input focus into the newly revealed content:
1. In most cases, focus should move to the first focusable element in the dialog.
2. However, if the revealed content is a dialog, move focus to a different element if the following situations occur:
a. IF focusing the first interactive element in a dialog causes the beginning of the dialog to scroll out of view: THEN add tabindex=""-1"" to a static element at the top of the dialog (e.g., the dialog's title) and use scripting to move focus to that element.
b. IF a dialog allows the user to complete a process that is not easily reversible: THEN consider setting focus on a button that simply dismisses the dialog (such as 'Cancel').
c. IF a dialog is intended to allow users to review their own input before committing to an action: THEN consider setting focus on the dialog's commit button (such as 'Save' or 'Delete').","Focusable components should receive focus in an order that preserves meaning and operability.

Keyboard and screen reader users expect to move left to right, top to bottom, in logical sequence, through all focusable page elements.

Users who cannot view the visual order expect accessible alternatives to mirror it. When reading order is not correctly sequenced, content order may be unclear or not understandable to blind or low-vision users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/focus-order,Structure,Yes,Yes,"Blind, Low Vision, Cognitive, Mobility ","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/


Be familiar with Established Keyboard Conventions:
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/","
Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/",,,,,,,,,
124,A,2.0,2.4.3 Focus order,Keyboard focus is not trapped in modal dialog,Focus is not trapped within the modal; it is possible to tab out of the modal.,"Action: Trap focus within the modal, cycling through elements inside the modal.
  
 How to fix:
 1. If a modal dialog contains a single focusable element (e.g., an 'OK' button), simply prevent any behavior from occurring when the user presses the Tab key.
 2. If a modal dialog contains multiple focusable elements, force focus to cycle through those elements until the dialog is dismissed by the user.","Keeping focus within a modal presents a single task to be executed by the user (e.g., filling out a form). This keeps users moving through the task at hand, without accidentally going to another element on the page.

Moving focus out of the modal unexpectedly will confuse and disorient blind, low-vision, and keyboard-only users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/focus-order,Structure,Yes,Yes,"Blind, Low Vision, Cognitive, Mobility ","
Be familiar with Established Keyboard Conventions:
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/","
Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/",,,,,,,,,
125,A,2.0,2.4.3 Focus order,Keyboard focus is not returned to triggering element,The focus is not returned to the element that triggered the modal.,"Action: Return focus to the modal's triggering element.
  
How to fix:
1. Good: Ensure that the revealed content appears in the DOM immediately after the trigger component. When the user closes the revealed content, no element will have focus, but pressing Shift+Tab will move focus back to the trigger component.
2. Better: When the user dismisses revealed content, move focus to the original trigger component. This is the ideal experience when the user cancels a dialog (dismisses it without taking any action).
3. Best: When the user dismisses revealed content, move focus to the control that makes the most sense given the user's workflow.","Focusable components should receive focus in an order that preserves meaning and operability. When a modal is closed, focus should return to its triggering element. This is the logical and expected behavior.

Moving focus to another element unexpectedly will confuse and disorient blind, low-vision, and keyboard-only users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/focus-order,Structure,Yes,Yes,"Blind, Low Vision, Cognitive, Mobility ","
Be familiar with Established Keyboard Conventions:
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions//","Mouse operable components:
https://staging.userway.org/university/library/mouse-operable-components/",,,,,,,,,
126,A,2.0,2.4.3 Focus order,Missing programmatic focus on skip links,"The skip links presented lack programmatic focus, and just scroll to element visually.","Action:
Make sure jump links are given programmatic focus, so assistive tech users can perceive the element that receives visual focus.
  
How to fix:
Properly set focus to the content area when activated.","When users navigate through a web page, they expect to encounter controls and other content in an order that makes sense and makes it easy to use the page's functionality.

Poor focus order can be disorienting to people who use screen readers or screen magnifiers and to people with reading disorders. Poor focus order can also make it difficult or even painful for people who use keyboards because of mobility impairments.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/focus-order,Structure,No,Yes,"Blind, Low Vision, Cognitive, Mobility","
Be familiar with Established Keyboard Conventions:
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions//","Mouse operable components:https://university.digitala11y.com/mouse-operable-components//",,,,,,,,,
127,A,2.0,2.4.3 Focus order,Keyboard focus does not move to updated content,Focus is either lost or does not move to updated content when user performs an action.,"Action: Make sure that focus moves to updated content or to the next element in the DOM when element is removed from DOM.
  
How to fix:
Make sure that the focus path continues to remain logical and sequential after the appearance or disappearance of content.","Focus determines where keyboard events go on a page at any given moment. It is important to correctly manage focus, programmatically moving a user's focus elsewhere on the page in response to an event or action.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/focus-order,Structure,No,Yes,"Blind, Low Vision, Cognitive, Mobility",,"Mouse operable components:
https://university.digitala11y.com/mouse-operable-components//",,,,,,,,,
128,AA,2.0,2.4.5 Multiple ways,Missing multiple ways to find pages,Multiple ways are not available to find other web pages on the site.,"Action: Make sure at least two methods are available to find other pages, e.g., a list of related pages, table of contents, site map, site search, or list of all available web pages.
  
How to fix:
1. Good: Provide two or more methods for users to find and navigate to pages in a website.
2. Better: Make site search one of the methods.","All users benefit when they can find content in a way convenient to them.

A person using a screen reader or magnifier might find it easier to locate a page using search rather than a navigation menu. A person with a reading disability might prefer a site map or a table of contents.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/multiple-ways,Content,No,No,"Blind, Low Vision, Cognitive, Mobility",,"Table of Content and Site Maps:
https://staging.userway.org/university/library/table-of-content-and-site-maps/

Links and Search Function:
https://staging.userway.org/university/library/links-and-search-function/",,,,,,,,,
129,A,2.0,2.4.3 Focus order,Focus order is not logical and intuitive,"The navigation order of link, form elements and interactive components is not meaningful.","Action: 
Ensure interactive components receive focus in a logical, usable order.
  
How to fix:
Align focus order with the reading order as much as possible, to maintain logical and intuitive content navigation.","When users navigate through a web page, they expect to encounter controls and other content in an order that makes sense and makes it easy to use the page's functionality.

Poor focus order can be disorienting to people who use screen readers or screen magnifiers and to people with reading disorders. Poor focus order can also make it difficult or even painful for people who use keyboards because of mobility impairments.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/focus-order,Structure,No,Yes,"Blind, Low Vision, Cognitive, Mobility","
Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/",,,,,,,,,,
130,A,2.0,2.4.4 Link purpose (in context),Link purpose not clear,Link purpose is not understandable solely from displayed text.,"Action: Make sure the purpose of the link is clearly explained by the link text alone.
  
How to fix:
Describe the purpose of the link using any of the following:
1. Good: Programmatically related context, or
2. Better: Accessible name and/or accessible description, or
3. Best: Link text
  
Programmatically related context includes:
· Text in the same sentence, paragraph, list item, or table cell as the link
· Text in a parent list item
· Text in a table header cell associated with the cell that contains the link
  
Writing tips:
· If a link's destination is a document or web application, the name of the document or application is sufficient.
· Links with different destinations should have different descriptions; links with the same destination should have the same description.
· Programmatically related context is easier to understand when it precedes the link.","Link text should be unique within a page, should be meaningful when read out of context, and should help users know something about their destination if they click on it.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context,"Content, Link",Yes,Yes,"Blind, Low Vision, Cognitive","
Programmatically Associate Inputs with Labels: https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Add Additional Context to Generic Link Names:
https://staging.userway.org/university/library/add-additional-context-to-generic-link-names/","
Link Text:
https://staging.userway.org/university/library/link-text/",,,,,,,,,
131,A,2.0,2.4.4 Link purpose (in context),Link purpose not programmatically set,The link's purpose is not conveyed due to lack of programmatic association.,"Action: Make sure that the the link's purpose is clearly and correctly identified via:
1. Link text, plus
2. The link's programmatically determined context
3. Or the link's title attribute
  
How to fix:
Describe the purpose of the link using any of the following:
1. Good: Programmatically related context, or
2. Better: Accessible name and/or accessible description, or
3. Best: Link text
  
Programmatically related context includes:
· Text in the same sentence, paragraph, list item, or table cell as the link
· Text in a parent list item
· Text in a table header cell associated with the cell that contains the link
  
Writing tips:
· If a link's destination is a document or web application, the name of the document or application is sufficient.
· Links with different destinations should have different descriptions; links with the same destination should have the same description.
· Programmatically related context is easier to understand when it precedes the link.","Link text should be unique within a page, should be meaningful when read out of context, and should help users know something about their destination if they click on it.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context,"Content, Link",Yes,Yes,"Blind, Low Vision, Cognitive, Deaf, Hard of Hearing, ","
Programmatically Associate Inputs with Labels: https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Add Additional Context to Generic Link Names:
https://staging.userway.org/university/library/add-additional-context-to-generic-link-names/","
Link Text:
https://staging.userway.org/university/library/link-text/",,,,,,,,,
132,A,2.0,2.4.4 Link purpose (in context),Image map link purpose not clear,"The purpose of each image map hotspot cannot be determined from the link text alone, or from the link text and its context.","Action: Make sure link is given a unique accessible name. 
  
 How to fix:
 Describe the purpose of the link using any of the following:
 1. Good: Programmatically related context, or
 2. Better: Accessible name and/or accessible description, or
 3. Best: Link text
  
 Programmatically related context includes:
 · Text in the same sentence, paragraph, list item, or table cell as the link
 · Text in a parent list item
 · Text in a table header cell associated with the cell that contains the link
  
 Writing tips:
 · If a link's destination is a document or web application, the name of the document or application is sufficient.
 · Links with different destinations should have different descriptions; links with the same destination should have the same description.
 · Programmatically related context is easier to understand when it precedes the link.","Link text should be unique within a page, should be meaningful when read out of context, and should help users to know something about their destination if they click on it.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context,"Content, Link",No,No,"Blind, Low Vision, Cognitive, Deaf, Hard of Hearing, ","
Programmatically Associate Inputs with Labels: https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Add Additional Context to Generic Link Names:
https://staging.userway.org/university/library/add-additional-context-to-generic-link-names/","
Link Text:
https://staging.userway.org/university/library/link-text/",,,,,,,,,
133,A,2.0,2.4.4 Link purpose (in context),Links/buttons destination not identifiable by programmatic name,Links (or form image buttons) with the same text that go to different locations are not readily distinguishable.,"Action: Make sure that links (or form image buttons) with the same text that go to different locations are provided with unique accessible names.
  
 How to fix:
 Describe the purpose of the link using any of the following:
 1. Good: Programmatically related context, or
 2. Better: Accessible name and/or accessible description, or
 3. Best: Link text
  
 Programmatically related context includes:
 · Text in the same sentence, paragraph, list item, or table cell as the link
 · Text in a parent list item
 · Text in a table header cell associated with the cell that contains the link
  
 Writing tips:
 · If a link's destination is a document or web application, the name of the document or application is sufficient.
 · Links with different destinations should have different descriptions; links with the same destination should have the same description.
 · Programmatically related context is easier to understand when it precedes the link.","Link text should be unique within a page, should be meaningful when read out of context, and should help users to know something about their destination if they click on it.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context,"Content, Link",Yes,Yes,"Blind, Low Vision, Cognitive","
Programmatically Associate Inputs with Labels: https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/

Add Additional Context to Generic Link Names:
https://staging.userway.org/university/library/add-additional-context-to-generic-link-names/","
Link Text:
https://staging.userway.org/university/library/link-text/",,,,,,,,,
134,AA,2.0,2.4.6 Headings and labels,Heading unrelated or not descriptive,Heading does not indicate the purpose or topic of the content that follows.,"Action: Make sure headings are clear, concise and descriptive.
  
How to fix:
Provide section headings that are short, clear and that meaningfully describe the content.","Descriptive headings identify sections of the content in relation both to the web page as a whole and to other sections of the same web page.

Descriptive headings help users find specific content and orient themselves within the web page.",Serious,w3.org/WAI/WCAG21/Understanding/headings-and-labels,"Custom Controls, Forms and UI",Yes,Yes,"Blind, Low Vision, Cognitive",,"Headings:
https://staging.userway.org/university/library/headings/",,,,,,,,,
135,AA,2.0,2.4.6 Headings and labels,Labels are not descriptive,A label does not indicate the purpose of the field or input component it relates to.,"Action: Make sure labels are descriptive enough so that users can take necessary actions.
  
How to fix:
Make sure labels for any element within the webpage or application make the section's purpose clear.","Descriptive means clear, concise, relevant, and easily understood content.

Users with low vision, motor impairments, or cognitive disabilities will benefit most when headings and labels are descriptive.",Serious,w3.org/WAI/WCAG21/Understanding/headings-and-labels,Structure,Yes,Yes,"Blind, Low Vision, Cognitive",,"Headings:
https://staging.userway.org/university/library/headings/",,,,,,,,,
136,AA,2.0,2.4.6 Headings and labels,Headings are not descriptive,Heading does not indicate the purpose or topic of the content that follows.,"Action: Make sure headings are clear, concise and descriptive.
  
How to fix:
Provide section headings that are short, clear and that meaningfully describe the content.","Descriptive headings identify sections of the content in relation both to the web page as a whole and to other sections of the same web page.

Descriptive headings help users find specific content and orient themselves within the web page.",Serious,w3.org/WAI/WCAG21/Understanding/headings-and-labels,Structure,Yes,Yes,"Blind, Low Vision, Cognitive",,"Headings:
https://staging.userway.org/university/library/headings/",,,,,,,,,
137,AA,2.0,2.4.7 Focus visible,Unclear keyboard focus indication.,"It is not visually apparent which page element has current keyboard focus: as users tab through the page, they cannot see where they are.","Action: Provide highly visible keyboard focus styles, and make sure that a visible element has focus at all times when using a keyboard. Do not rely on browser default focus styles.
  
 How to fix:
 Determine the cause to find the correct fix:
 1. If styling hides the focus indicator, remove the styling so the browser's default focus indicator is visible.
 2. If styling makes the focus indicator difficult to see, modify the styling so the focus rectangle has a contrast ratio at least as high as the default browser focus indicator.
 3. If scripting removes focus from an element after it is received, modify the script so the element retains focus until the user moves it.","Some computer users are physically unable to use a mouse. Others prefer using keyboard because it is often more efficient. Computers in general, and web browsers specifically, can be operated via keyboard alone.

In web browsers, users can use the tab key to jump between focusable elements (e.g., links, form fields, and any other content that has been added to the tab order with the HTML tabindex attribute).

However, it is often difficult for keyboard users to tell where they are on the page. Designers and content authors must make sure it is easy to tell which item on the page currently has keyboard focus.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/focus-visible,"Custom Controls, Forms and UI",Yes,Yes,"Blind, Low Vision, Cognitive","
Programmatically Associate Inputs with Labels
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/


When Overriding the Default Focus Indicator, Confirm Focus is Highly Visible:
https://staging.userway.org/university/library/when-overriding-the-default-focus-indicator-confirm-focus-is-highly-visible/","
Media players:

https://staging.userway.org/university/library/media-players/

Visual states:
https://staging.userway.org/university/library/visual-states/",,,,,,,,,
138,A,2.1,2.5.1 Pointer gestures,Complex gesture has no single-point alternative action,Path-based multi-point functionality cannot be operated with single-point actions.,"Action: Provide single tap or double tap/click as alternatives.
  
How to fix:
For any function that can be operated using multipoint or path-based gestures, provide an alternative method that:
1. Requires only a single pointer, and
2. Doesn't depend on the path of the pointer's movement.","Multipoint and path-based gestures can be difficult or impossible to execute for people who have limited fine motor control or who use head tracking, gaze tracking, or speech commands to control their mouse pointer.

In fact, many users might not be aware that such gestures are supported, especially if they have cognitive or learning disabilities.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/pointer-gestures,Custom Controls,No,No,"Blind, Low Vision, Mobility, Cognitive",,"Pointer Operation: 
https://staging.userway.org/university/library/pointer-operation/",,,,,,,,,
139,A,2.1,2.5.2 Pointer cancellation,Down event executes functionality,Functionality operated by a single mouse click uses the down event.,"Action: Make sure down event alone does not execute any functionality.
  
How to fix:
For any function that can be operated using a single pointer, make sure at least one of the following is true:
1. The down event doesn't trigger any part of the function, or
2. The down event initiates the function, which is completed ONLY on the up event, AND users can abort or undo the function, or
3. The down event completes the function, and the up event reverses the outcome of the preceding down event.","Everyone benefits when it is easy to recover from hitting the wrong mouse button or touch target. People with motor, visual, or cognitive disabilities are more likely to inadvertently initiate mouse or touch events.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/pointer-cancellation,Custom controls,No,Yes,"Blind, Mobility, Cognitive","
Provide Accessible Ways of Cancelling Pointer Interaction
https://staging.userway.org/university/library/provide-accessible-ways-of-cancelling-pointer-interaction/","
Pointer Interaction:
https://staging.userway.org/university/library/pointer-interaction/",,,,,,,,,
140,A,2.1,2.5.2 Pointer cancellation,Up event undo missing,"After user has selected a user interface component, there is no way to dismiss the selection or undo the function.","Action: Make sure users can cancel functions that can be operated using a single pointer.
  
How to fix:
For any function that can be operated using a single pointer, make sure at least one of the following is true:
1. The down event doesn't trigger any part of the function, or
2. The down event initiates the function, which is completed ONLY on the up event, AND users can abort or undo the function, or
3. The down event completes the function, and the up event reverses the outcome of the preceding down event.","Everyone benefits when it is easy to recover from hitting the wrong mouse button or touch target. People with motor, visual, or cognitive disabilities are more likely to inadvertently initiate mouse or touch events.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/pointer-cancellation,Custom controls,No,Yes,"Blind, Low Vision, Mobility, Cognitive","
Provide Accessible Ways of Cancelling Pointer Interaction
https://staging.userway.org/university/library/provide-accessible-ways-of-cancelling-pointer-interaction/","
Pointer Interaction:
https://staging.userway.org/university/library/pointer-interaction/",,,,,,,,,
141,A,2.1,2.5.3 Label in name,Accessible name does not contain text from visible label,UI controls that include a visible label do not have a matching full (or partial) accessible name.,"Action: Make sure accessible names, e.g., aria-label and alt attribute, contain an exact or partial match of the visible label.
  
How to fix:
1. Good: Make sure the element's accessible name contains its visible text.
2. Better: Make sure the element's accessible name begins with its visible text.
3. Best: Make sure the element's accessible name exactly matches its visible label.","Anyone who uses speech-based interaction benefits when UI components' accessible names match their visible text.

Sighted people who cannot use a mouse or keyboard might use speech input. When a UI component's accessible name matches its visible text, speech input users can activate them by speaking their visible text.

People with low vision might use text-to-speech when they visit a new page to get an overview of the content. Such users might be confused if the accessible names they hear don't match the text they see on the screen.

People with cognitive challenges might find it especially difficult to remember speech commands that are different from what's visible on the screen.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/label-in-name,"Custom Controls, Forms and UI",Yes,Yes,"Blind, Low vision, Mobility, Cognitive"," 
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/

Match the Accessible Name to the Visible Label: 
https://staging.userway.org/university/library/match-the-accessible-name-to-the-visible-label/

Include the Text of the Label in the Accessible Name:
https://staging.userway.org/university/library/include-the-text-of-the-label-in-the-accessible-name/",,,,,,,,,,
142,A,2.1,2.5.4 Motion actuation,Cannot turn off motion gestures,Functionality triggered by user motion or gestures cannot be turned off.,"Action: Allow system settings to deactivate motion detection.
  
How to fix:
For any function that can be operated through motion, make sure that the user can:
1. Operate the function through user interface components, and
2. Disable motion operation.","Many devices have sensors that can act as inputs, and allow users to operate functions by tilting, shaking, or reorienting the device.

People cannot use motion operation if they use a mounted device, they are unable to perform the triggering movement, or their hands are otherwise occupied.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/motion-actuation,Structure,No,No,"Blind, Low vision,Mobility, Cognitive",,"Device motion:
https://staging.userway.org/university/library/device-motion/",,,,,,,,,
143,A,2.1,2.5.4 Motion actuation,Alternate method for motion gesture is missing,Functionality cannot be operated without device motion or user gestures.,"Action: Provide alternatives where motion activation is used.
  
How to fix:
For any function that can be operated through motion, make sure that the user can:
1. Operate the function through user interface components, and
2. Disable motion operation.","Many devices have sensors that can act as inputs, and allow users to operate functions by tilting, shaking, or reorienting the device.

People cannot use motion operation if they use a mounted device, they are unable to perform the triggering movement, or their hands are otherwise occupied.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/motion-actuation,Structure,No,No,"Blind, Low vision,Mobility, Cognitive",,"Device motion:
https://staging.userway.org/university/library/device-motion/",,,,,,,,,
144,A,2.0,3.1.1 Language of page,Page language not specified,"Page does not have a lang attribute ""lang="".","Action: Use a language code in the lang attribute of the <html> element.
  
How to fix:
Make sure the page's <html> tag has the correct primary lang attribute defined.","Many screen reader applications support multiple languages, and can switch on-the-fly between supported languages, using the appropriate voice and rule set for the current language.

However, currently screen readers are unable to determine what language a document is written in, or if the language changes within that document.

For this reason, it is important for authors to define the language of the document or web page, and to identify the language of any blocks of text that deviate from that default language. Identifying the language of the entire web page or document, as well as its individual parts, helps to ensure that screen readers will correctly pronounce the content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/language-of-page,Structure,No,Yes,"Blind, Low vision,Mobility","
Set the Language for Each Page:
https://staging.userway.org/university/library/set-the-language-for-each-page/


Use the Lang Attribute for Foreign Words and Phrases
https://staging.userway.org/university/library/use-the-lang-attribute-for-foreign-words-and-phrases/",,,,,,,,,,
145,A,2.0,3.1.1 Language of page,Incorrect page language,Page lang attribute is incorrect: the lang attribute provided is different from that of the displayed language.,"Action: Use a correct language code in the lang attribute of the <html> element.
  
How to fix:
Make sure the page's <html> tag has the correct lang attribute.","Many screen reader applications support multiple languages, and can switch on-the-fly between supported languages, using the appropriate voice and rule set for the current language.

However, currently screen readers are unable to determine what language a document is written in, or if the language changes within that document.

For this reason, it is important for authors to define the language of the document or web page, and to identify the language of any blocks of text that deviate from that default language. Identifying the language of the entire web page or document, as well as its individual parts, helps to ensure that screen readers will correctly pronounce the content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/language-of-page,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Set the Language for Each Page:
https://staging.userway.org/university/library/set-the-language-for-each-page/


Use the Lang Attribute for Foreign Words and Phrases
https://staging.userway.org/university/library/use-the-lang-attribute-for-foreign-words-and-phrases/",,,,,,,,,,
146,A,2.0,3.1.1 Language of page,Invalid page language,Page lang attribute is invalid: the lang attribute provided does not exist.,"Action: Use a valid language code in the lang attribute of the <html> element.
  
 How to fix:
 Make sure the page's <html> tag has the correct lang attribute.","Many screen reader applications support multiple languages, and can switch on-the-fly between supported languages, using the appropriate voice and rule set for the current language.

However, currently screen readers are unable to determine what language a document is written in, or if the language changes within that document.

For this reason, it is important for authors to define the language of the document or web page, and to identify the language of any blocks of text that deviate from that default language. Identifying the language of the entire web page or document, as well as its individual parts, helps to ensure that screen readers will correctly pronounce the content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/language-of-page,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Set the Language for Each Page:
https://staging.userway.org/university/library/set-the-language-for-each-page/


Use the Lang Attribute for Foreign Words and Phrases
https://staging.userway.org/university/library/use-the-lang-attribute-for-foreign-words-and-phrases/",,,,,,,,,,
147,AA,2.0,3.1.2 Language of parts,Content language not specified,Content in a different language than the page default is not identified using the lang attribute.,"Action: Add the correct lang attribute to the element that contains the passage.
  
 How to fix:
 Use a language code in the lang attribute of the html tag containing the content. Embed the lang attribute in other tags, e.g., <p>, <td>, <span>, <div>, etc.","Many screen reader applications support multiple languages, and can switch on-the-fly between supported languages, using the appropriate voice and rule set for the current language.

However, currently screen readers are unable to determine what language a document is written in, or if the language changes within that document.

For this reason, it is important for authors to define the language of the document or web page, and to identify the language of any blocks of text that deviate from that default language. Identifying the language of the entire web page or document, as well as its individual parts, helps to ensure that screen readers will correctly pronounce the content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/language-of-parts,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Set the Language for Each Page:
https://staging.userway.org/university/library/set-the-language-for-each-page/


Use the Lang Attribute for Foreign Words and Phrases
https://staging.userway.org/university/library/use-the-lang-attribute-for-foreign-words-and-phrases/","
Foreign Language:
https://staging.userway.org/university/library/foreign-language/",,,,,,,,,
148,AA,2.0,3.1.2 Language of parts,Incorrect content language provided,"Incorrect lang attribute provided for the content, in a different language than the page default .","Action: Add the correct lang attribute to the element that contains the passage.
  
How to fix:
Use the correct language code in the lang attribute of the html tag containing the content. Embed the lang attribute in other tags, e.g., <p>, <td>, <span>, <div>, etc.","Many screen reader applications support multiple languages, and can switch on-the-fly between supported languages, using the appropriate voice and rule set for the current language.

However, currently screen readers are unable to determine what language a document is written in, or if the language changes within that document.

For this reason, it is important for authors to define the language of the document or web page, and to identify the language of any blocks of text that deviate from that default language. Identifying the language of the entire web page or document, as well as its individual parts, helps to ensure that screen readers will correctly pronounce the content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/language-of-parts,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Set the Language for Each Page:
https://staging.userway.org/university/library/set-the-language-for-each-page/


Use the Lang Attribute for Foreign Words and Phrases
https://staging.userway.org/university/library/use-the-lang-attribute-for-foreign-words-and-phrases/","
Foreign Language:
https://staging.userway.org/university/library/foreign-language/",,,,,,,,,
149,AA,2.0,3.1.2 Language of parts,Invalid content language provided,"Invalid lang attribute is provided for the content, in a different language than the page default .","Action: Add a valid, correct lang attribute to the element that contains the passage.
  
How to fix:
Add a valid, correct language code in the lang attribute of the html tag containing the content. Embed the lang attribute in other tags, e.g., <p>, <td>, <span>, <div>, etc.","Many screen reader applications support multiple languages, and can switch on-the-fly between supported languages, using the appropriate voice and rule set for the current language.

However, currently screen readers are unable to determine what language a document is written in, or if the language changes within that document.

For this reason, it is important for authors to define the language of the document or web page, and to identify the language of any blocks of text that deviate from that default language. Identifying the language of the entire web page or document, as well as its individual parts, helps to ensure that screen readers will correctly pronounce the content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/language-of-parts,Structure,No,Yes,"Blind, Low Vision, Cognitive","
Set the Language for Each Page:
https://staging.userway.org/university/library/set-the-language-for-each-page/


Use the Lang Attribute for Foreign Words and Phrases
https://staging.userway.org/university/library/use-the-lang-attribute-for-foreign-words-and-phrases/","
Foreign Language:
https://staging.userway.org/university/library/foreign-language/",,,,,,,,,
150,A,2.0,3.2.1 On focus,Page/dialog opens on focus,Interactive elements open new page or window when focused with mouse or keyboard.,"Action: Make sure that when the focus changes, the page does not spawn a new browser window.
  
 How to fix:
 Use a different trigger to initiate a change of context. For example, instead of initiating a change of context when an interface component receives focus, wait until the component is activated by the user.","Web users have certain expectations about what will happen when they tab onto a button, click in a form field, or select an item from a combo box.

These behaviors are historically one step in a process in which the user first gives focus to the item (e.g., they enter a form field), then they make a selection, then exit the form field, and ultimately submit the form after they've made their selections.

If any of these steps prematurely triggers a change of context such as opening a new window, moving focus to a different component, going to a new page, or significantly re-arranging the content of the page, this can be very disorienting for users, especially screen reader users, screen magnification users, and other users with disabilities.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/on-focus,Forms and UI,No,No,"Blind, Low Vision, Cognitive",,"Designer:
Data Format for Inputs:
https://university.digitala11y.com/data-format-for-inputs/


Predictable Patterns: Function:https://university.digitala11y.com/predictable-patterns/",,,,,,,,,
151,A,2.0,3.2.1 On focus,Form submits on keyboard focus,Forms submit automatically when a form field receives keyboard focus.,"Action: Make sure that when the focus changes, the page does not submit a form.
  
How to fix:
Use a different trigger to initiate a change of context. For example, instead of initiating a change of context when an interface component receives focus, wait until the component is activated by the user.","Web users have certain expectations about what will happen when they tab onto a button, click in a form field, or select an item from a combo box.

These behaviors are historically one step in a process in which the user first gives focus to the item (e.g., they enter a form field), then they make a selection, then exit the form field, and ultimately submit the form after they've made their selections.

If any of these steps prematurely triggers a change of context such as opening a new window, moving focus to a different component, going to a new page, or significantly re-arranging the content of the page, this can be very disorienting for users, especially screen reader users, screen magnification users, and other users with disabilities.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/on-focus,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive","
Use ""Activate"" rather than ""Focus"" as a Trigger:
https://staging.userway.org/university/library/use-activate-rather-than-focus-as-a-trigger/","
Data Format for Inputs:
https://staging.userway.org/university/library/data-format-for-inputs/


Predictable Patterns: Function:https://staging.userway.org/university/library/predictable-patterns/",,,,,,,,,
152,A,2.0,3.2.1 On focus,Popup/dialog opens on page load,"Pop-ups or modal windows open on page load or on element focus, disorienting the user.","Action: Make sure modal dialogs/pop-ups do not open on page load.
  
 How to fix:
 When focus changes, make sure the page:
 1. Does not cause any modals or pop-ups to appear.
 2. Does not cause focus to move to elements that might cause any other change.","Web users have certain expectations about what will happen when they tab onto a button, click in a form field, or select an item from a combo box.

These behaviors are historically one step in a process in which the user first gives focus to the item (e.g., they enter a form field), then they make a selection, then exit the form field, and ultimately submit the form after they've made their selections.

If any of these steps prematurely triggers a change of context such as opening a new window, moving focus to a different component, going to a new page, or significantly re-arranging the content of the page, this can be very disorienting for users, especially screen reader users, screen magnification users, and other users with disabilities.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/on-focus,Forms and UI,No,No,"Blind, Low Vision, Cognitive","
Use ""Activate"" rather than ""Focus"" as a Trigger:
https://staging.userway.org/university/library/use-activate-rather-than-focus-as-a-trigger/","
Data Format for Inputs:
https://staging.userway.org/university/library/data-format-for-inputs/


Predictable Patterns: Function:https://staging.userway.org/university/library/predictable-patterns/",,,,,,,,,
153,A,2.0,3.2.1 On focus,Keyboard focus jumps to another element,"When an element receives keyboard focus, focus moves automatically to another element, disorienting the user.","Action: Make sure that when the focus changes, the page does not cause any other change, as this is disorienting to the user.
  
 How to fix:
 Use a different trigger to initiate a change of focus. For example, instead of initiating a change of focus when an interface component receives focus, wait until the component is activated by the user.","Web users have certain expectations about what will happen when they tab onto a button, click in a form field, or select an item from a combo box.

These behaviors are historically one step in a process in which the user first gives focus to the item (e.g., they enter a form field), then they make a selection, then exit the form field, and ultimately submit the form after they've made their selections.

If any of these steps prematurely triggers a change of context such as opening a new window, moving focus to a different component, going to a new page, or significantly re-arranging the content of the page, this can be very disorienting for users, especially screen reader users, screen magnification users, and other users with disabilities.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/on-focus,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive","
Use ""Activate"" rather than ""Focus"" as a Trigger:
https://staging.userway.org/university/library/use-activate-rather-than-focus-as-a-trigger/","
Data Format for Inputs:
https://staging.userway.org/university/library/data-format-for-inputs/


Predictable Patterns: Function:https://staging.userway.org/university/library/predictable-patterns/",,,,,,,,,
154,A,2.0,3.2.1 On focus,Content updates on keyboard focus,"When an element receives keyboard focus, a significant content update above the focused element might disorient users.","Action: Make sure that when the focus changes, the page does not cause a change in page content, as this is disorienting to the user.
  
How to fix:
Use a different trigger to initiate a change of focus. For example, instead of initiating a change of focus when an interface component receives focus, wait until the component is activated by the user.","Web users have certain expectations about what will happen when they tab onto a button, click in a form field, or select an item from a combo box.

These behaviors are historically one step in a process in which the user first gives focus to the item (e.g., they enter a form field), then they make a selection, then exit the form field, and ultimately submit the form after they've made their selections.

If any of these steps prematurely triggers a change of context such as opening a new window, moving focus to a different component, going to a new page, or significantly re-arranging the content of the page, this can be very disorienting for users, especially screen reader users, screen magnification users, and other users with disabilities.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/on-focus,Forms and UI,No,No,"Blind, Low Vision, Cognitive","
Use ""Activate"" rather than ""Focus"" as a Trigger:
https://staging.userway.org/university/library/use-activate-rather-than-focus-as-a-trigger/","
Data Format for Inputs:
https://staging.userway.org/university/library/data-format-for-inputs/


Predictable Patterns: Function:https://staging.userway.org/university/library/predictable-patterns/",,,,,,,,,
155,A,2.0,3.2.2 On input,Form input triggers a dialog/page,"User-initiated interaction with a form control opens a dialog, new tab or new browser window.","Action: Make sure that when a user inputs information or interacts with a control, the page does not spawn a new browser window. If an input causes such a change, the user must be informed ahead of time. Otherwise, this is disorienting to the user.
  
How to fix:
Use a different trigger to initiate a change of focus. For example, instead of initiating a change of context when a radio button is selected, provide a separate command button that triggers the change.","Web users have certain expectations about what will happen when they tab onto a button, click in a form field, or select an item from a combo box.

These behaviors are historically one step in a process in which the user first gives focus to the item (e.g., they enter a form field), then they make a selection, then exit the form field, and ultimately submit the form after they've made their selections.

If any of these steps prematurely triggers a change of context such as opening a new window, moving focus to a different component, going to a new page, or significantly re-arranging the content of the page, this can be very disorienting for users, especially screen reader users, screen magnification users, and other users with disabilities.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/on-input,Forms and UI,No,No,"Blind, Low Vision, Cognitive","
Use an onchange Event without Disorienting the User:
https://staging.userway.org/university/library/use-an-onchange-event-without-disorienting-the-user/","
Data Format for Inputs:
https://staging.userway.org/university/library/data-format-for-inputs/


Predictable Patterns: Function:https://staging.userway.org/university/library/predictable-patterns/",,,,,,,,,
156,A,2.0,3.2.2 On input,Form input triggers keyboard focus jump,User-initiated interaction with a form control causes keyboard focus to move to a different component on the web page.,"Action: Make sure that when a user inputs information or interacts with a control, the page does not cause a change in page content, spawn a new browser window, submit a form, cause further change in focus, or cause any other change that disorients the user. If an input causes such a change, the user must be informed ahead of time. Otherwise, this is disorienting to the user.
  
How to fix:
Make sure user focus is predictable, logical and intuitive while interacting with form controls.","Web users have certain expectations about what will happen when they tab onto a button, click in a form field, or select an item from a combo box.

These behaviors are historically one step in a process in which the user first gives focus to the item (e.g., they enter a form field), then they make a selection, then exit the form field, and ultimately submit the form after they've made their selections.

If any of these steps prematurely triggers a change of context such as opening a new window, moving focus to a different component, going to a new page, or significantly re-arranging the content of the page, this can be very disorienting for users, especially screen reader users, screen magnification users, and other users with disabilities.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/on-input,Forms and UI,No,No,"Blind, Low Vision, Cognitive","
Use an onchange Event without Disorienting the User:
https://staging.userway.org/university/library/use-an-onchange-event-without-disorienting-the-user/","
Data Format for Inputs:
https://staging.userway.org/university/library/data-format-for-inputs/


Predictable Patterns: Function:https://staging.userway.org/university/library/predictable-patterns/",,,,,,,,,
157,A,2.0,3.2.2 On input,Form input triggers submission,User-initiated interaction with a form control causes form submission.,"Action: Make sure that when a user inputs information or interacts with a control, the page does not submit a form. If an input causes such a change, the user must be informed ahead of time.
  
How to fix:
Use a different trigger to initiate a change of context. For example, instead of initiating the change of context when a radio button is selected, provide a separate command button that triggers the change.","Web users have certain expectations about what will happen when they tab onto a button, click in a form field, or select an item from a combo box.

These behaviors are historically one step in a process in which the user first gives focus to the item (e.g., they enter a form field), then they make a selection, then exit the form field, and ultimately submit the form after they've made their selections.

If any of these steps prematurely triggers a change of context such as opening a new window, moving focus to a different component, going to a new page, or significantly re-arranging the content of the page, this can be very disorienting for users, especially screen reader users, screen magnification users, and other users with disabilities.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/on-input,Forms and UI,No,No,"Blind, Low Vision, Cognitive","
Use an onchange Event without Disorienting the User:
https://staging.userway.org/university/library/use-an-onchange-event-without-disorienting-the-user/","
Data Format for Inputs:
https://staging.userway.org/university/library/data-format-for-inputs/


Predictable Patterns: Function:https://staging.userway.org/university/library/predictable-patterns/",,,,,,,,,
158,AA,2.0,3.2.3 Consistent navigation,Navigation is not consistent across pages,Repeated navigation patterns are not applied in the same relative order across multiple pages.,"Action: Provide blocks with navigation mechanisms that repeat on multiple pages on the website, and appear in the same relative order on all the pages on which they are present.
  
How to fix:
Arrange navigational mechanisms that repeat across pages so they always appear in the same relative order.
  
Note: it is not necessary for page-specific links to appear in the same exact order.","Web users, especially users with disabilities, depend on web pages being predictable.

If navigation is consistent from page to page within a website, this makes it much easier for screen reader users, screen magnification users, and others to find particular items within the navigation.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/consistent-navigation,Structure,No,No,"Blind, Low Vision, Cognitive",,"Reading Order:
https://staging.userway.org/university/library/reading-order/",,,,,,,,,
159,AA,2.0,3.2.4 Consistent identification,Icons/images are not identified consistently across pages,Icons and images used repeatedly that provide the same function are not given the same alternative text.,"Action: Make sure that non-decorative icons repeated throughout are given the same alternative text.
  
How to fix:
For any functional component that repeats across pages or screens, it is required to use a consistent label, icon, and/or text alternative every time it appears.","Web users, especially users with disabilities, depend on web pages being predictable.

If identification of elements [accessible name and label] is consistent from page to page within a website, this makes it much easier for screen reader users, screen magnification users, and others to find particular items within the navigation.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/consistent-identification,Structure,No,Yes,"Blind, Low Vision, Cognitive",,"Input Labels:
https://staging.userway.org/university/library/input-labels/",,,,,,,,,
160,AA,2.0,3.2.4 Consistent identification,Form elements are not identified consistently across pages,Form elements with identical functions are not named and labeled consistently.,"Action: Make sure items with identical functions, such as buttons, have the same label.
  
How to fix:
For any functional component that repeats across pages, it is required to use a consistent label, icon, and/or text alternative every time it appears.","Web users, especially users with disabilities, depend on web pages being predictable.

If identification of elements [accessible name and label] is consistent from page to page within a website, this makes it much easier for screen reader users, screen magnification users, and others to find particular items within the navigation.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/consistent-identification,Structure,No,Yes,"Blind, Low Vision, Cognitive",,"Input Labels:
https://staging.userway.org/university/library/input-labels/Form Inputs:

Form Inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
161,A,2.0,1.4.1 Use of color,Color used to identify error,Color or visual cue is the only provided method to identify errors.,"Action: Use an additional method to point out form errors.
  
How to fix:
Use an additional method that is not based on color or visual cues, such as an error message text, to point out form errors.","Color is a powerful visual means of presenting or distinguishing information, but when you use color to identify or distinguish information, make sure that this information is still available in another format for people who can't perceive color.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/use-of-color,Color,No,No,"Blind, Low Vision, Cognitive",,"Link Text Contrast:
https://staging.userway.org/university/library/link-text-contrast/

Legends:
https://staging.userway.org/university/library/legends/

Tooltips and Overlays:
https://staging.userway.org/university/library/tooltips-and-overlays/

Data Visualization:
https://staging.userway.org/university/library/data-visualization/

Icons:
https://staging.userway.org/university/library/icons/

Visual Sates:
https://staging.userway.org/university/library/visual-states/

Component Contrast:
https://staging.userway.org/university/library/component-contrast/



",,,,,,,,,
162,A,2.0,3.3.1 Error identification,Error is not programmatically associated,"An error is described with text, but it is not programmatically associated with its related field.","Action: Programmatically associate form fields with their respective errors.
  
How to fix:
Use aria-errormessage to programmatically bind the form control with the related error.","Make it easy to locate the problem: programmatically associate each error message with its corresponding form control using the aria-describedby attribute.

If there's a list of errors, move focus to the container of the list once it is generated, so that screen reader users can find it.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/error-identification,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive"," 
Include the Text of the Label in the Accessible Name
https://staging.userway.org/university/library/include-the-text-of-the-label-in-the-accessible-name/


Use Accessible Methods to Implement Error Messages:
https://staging.userway.org/university/library/use-accessible-methods-to-implement-error-messages/

Implement Validation and Notification to Minimize Interruptions:
https://staging.userway.org/university/library/implement-validation-and-notification-to-minimize-interruptions/","
Error Messages
https://staging.userway.org/university/library/error-messages/

Surfacing Error Messages:
https://staging.userway.org/university/library/surfacing-error-messages/

Feedback and Notifications:
https://staging.userway.org/university/library/feedback-and-notifications/",,,,,,,,,
163,A,2.0,3.3.1 Error identification,Icon is used to identify error,An error is only indicated by an icon adjacent to the field.,"Action: Make sure to add a text label.
  
How to fix:
Add a text label alongside the icon to clarify its meaning in that context.","An ""input error"" occurs when: 
 • The user omits information that's expected by a web page, or 
 • The user provides information outside the allowed values, or 
 • The user provides information in an unexpected format. 

Identifying and describing input errors in text allows people who use assistive technologies to learn what went wrong. It also helps people with cognitive disabilities who have difficulty understanding the meaning of icons and other visual cues.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/error-identification,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive"," 
Include the Text of the Label in the Accessible Name
https://staging.userway.org/university/library/include-the-text-of-the-label-in-the-accessible-name/


Use Accessible Methods to Implement Error Messages:
https://staging.userway.org/university/library/use-accessible-methods-to-implement-error-messages/

Implement Validation and Notification to Minimize Interruptions:
https://staging.userway.org/university/library/implement-validation-and-notification-to-minimize-interruptions/","
Error Messages
https://staging.userway.org/university/library/error-messages/

Surfacing Error Messages:
https://staging.userway.org/university/library/surfacing-error-messages/

Feedback and Notifications:
https://staging.userway.org/university/library/feedback-and-notifications/",,,,,,,,,
164,A,2.0,3.3.2 Labels or instructions,Missing visible label for form control,A visible text label (not necessarily a label element) is not provided for form fields,"Action: Always provide visible labels to all form fields and controls.
  
How to fix:
Make sure every form input element has a visible label.","Provide an accessible label for every control. Preferably, give each control a visible text label that explains its purpose. This is best done with an HTML label element that's programmatically associated with the control.

For a text input field, its accessible label would be a short description of the data the field collects.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions,Forms and UI,Yes,Yes,"Blind, Low Vision, Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Labels:
https://staging.userway.org/university/library/input-labels/

Form inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
165,A,2.0,3.3.2 Labels or instructions,Visible group label missing,A visible group label is not provided for form fields.,"Action: Always provide visible group labels to all form fields and controls that are part of a group.
  
How to fix:
Make sure the group of form elements has a visible label.","Provide an accessible label for every control. Preferably, give each control a visible text label that explains its purpose. This is best done with an HTML label element that's programmatically associated with the control.

For a control that is a group of options, such as a drop-down menu or list of radio buttons or checkboxes, the group should have a label that describes the relationship of the options.

Each label should have a short description that indicates the value associated with each option.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Labels:
https://staging.userway.org/university/library/input-labels/

Form inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
166,A,2.0,3.3.2 Labels or instructions,Placeholder used as visible label,The placeholder attribute is used as a visible label for the form controls.,"Action: Do not use the placeholder attribute as a visible label for form controls: they disappear once the form field is filled with data.
  
How to fix:
Make sure the form field has a visible label that is always visible.","Make sure the label remains visible when the control has focus. Wherever possible, avoid relying on placeholder text to label an input field.

There are several usability issues relating to placeholder text because it disappears when the user starts to type into the field. It is much better to have an external label that remains visible at all times.

If space is limited, such as when designing responsively for small screens, media queries could be used to change how label text is displayed.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions,Forms and UI,Yes,Yes,"Blind, Low Vision, Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Labels:
https://staging.userway.org/university/library/input-labels/

Form inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
167,A,2.0,3.3.2 Labels or instructions,Required instructions are not provided,"Additional information / instruction is required to interact with the control, but is not provided.","Action: Make sure full information is provided, so that users can understand how to interact with the control.
  
How to fix:
Provide instructions where the form fields require specific data or format.","Users make mistakes. They may inadvertently skip required fields, or enter invalid information.

A well-designed online form provides helpful and timely feedback to users so they can easily correct errors and resubmit the form.

When providing feedback to users, it's important to ensure that feedback is accessible to screen reader users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Labels:
https://staging.userway.org/university/library/input-labels/

Form inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
168,A,2.0,3.3.2 Labels or instructions,Instructions are not accessible,"Additional information/ instruction is required to interact with the control, but is not accessible to assistive technology users.","Action: Make sure the instruction/additional information is accessible to all user groups.
  
 How to fix: Provide an alternative, accessible method to access the information.","Users make mistakes. They may inadvertently skip required fields, or enter invalid information.

A well-designed online form provides helpful and timely feedback to users so they can easily correct errors and resubmit the form.

When providing feedback to users, it's important to ensure that feedback is accessible to screen reader users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Labels:
https://staging.userway.org/university/library/input-labels/

Form inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
169,A,2.0,3.3.2 Labels or instructions,Instructions are not programmatically associated,"Instructions have been provided, but they are not associated with the relevant field.","Action: Programatically associate the instructions with their respective form fields.
  
How to fix:
Use aria-describedby to programatically associate the instructions with form fields.","Users make mistakes. They may inadvertently skip required fields, or enter invalid information.

A well-designed online form provides helpful and timely feedback to users so they can easily correct errors and resubmit the form.

When providing feedback to users, it's important to ensure that feedback is accessible to screen reader users.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Labels:
https://staging.userway.org/university/library/input-labels/

Form inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
170,A,2.0,3.3.2 Labels or instructions,Required form element not identified,"Form element is required but is not identified as such using label, instruction or error message","Action: Provide a text label (not necessarily a label element), instructions or error message for required form fields.
  
How to fix:
1. Put the word ""required"" in the <label>. <input id=""firstname"" name=""firstname"" type=""text"">
2. Put instructions above the form, use an asterisk in the <label>, and use the aria-required=""true"" attribute.","Users make mistakes. They may inadvertently skip required fields, or enter invalid information.

A well-designed online form provides helpful and timely feedback to users so they can easily correct errors and resubmit the form.

When providing feedback to users, it's important to ensure that feedback is accessible to screen reader users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Labels:
https://staging.userway.org/university/library/input-labels/

Form inputs:
https://staging.userway.org/university/library/form-inputs/",,,,,,,,,
171,AA,2.0,3.3.3 Error suggestion,"Form fields require a specific format, but it is not provided","Form fields require a specific format, but it is not explained in the error message.","Action: Make sure all forms identify input errors and supply correction suggestions. Suggestions on error corrections should be specific but concise.
  
How to fix:
If a specific format is necessary for the user to successfully submit the form, errors presented in text must contain the specific format.","Users make mistakes. They may inadvertently skip required fields, or enter invalid information.

A well-designed online form provides helpful and timely feedback to users so they can easily correct errors and resubmit the form.

When providing feedback to users, it's important to ensure that feedback is accessible to screen reader users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/error-suggestion,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive","
Use Accessible Methods to Implement Error Messages:
https://staging.userway.org/university/library/use-accessible-methods-to-implement-error-messages/

Implement Validation and Notification to Minimize Interruptions:
https://staging.userway.org/university/library/implement-validation-and-notification-to-minimize-interruptions/","
Error Messages
https://staging.userway.org/university/library/error-messages/

Surfacing Error Messages:
https://staging.userway.org/university/library/surfacing-error-messages/",,,,,,,,,
172,AA,2.0,3.3.3 Error suggestion,"Form fields require a specific data range, but is not provided",Form fields require a specific data range or format but is not provided.,"Action: Make sure all forms identify input errors and supply correction suggestions. Suggestions on error corrections should be specific but concise.
  
How to fix:
If a specific data range or format is necessary for the user to successfully submit the form, errors presented in text must contain the specific data range or format.","Users make mistakes. They may inadvertently skip required fields, or enter invalid information.

A well-designed online form provides helpful and timely feedback to users so they can easily correct errors and resubmit the form.

When providing feedback to users, it's important to ensure that feedback is accessible to screen reader users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/error-suggestion,Forms and UI,No,No,"Blind, Low Vision, Cognitive","
Use Accessible Methods to Implement Error Messages:
https://staging.userway.org/university/library/use-accessible-methods-to-implement-error-messages/

Implement Validation and Notification to Minimize Interruptions:
https://staging.userway.org/university/library/implement-validation-and-notification-to-minimize-interruptions/","
Error Messages
https://staging.userway.org/university/library/error-messages/

Surfacing Error Messages:
https://staging.userway.org/university/library/surfacing-error-messages/",,,,,,,,,
173,AA,2.0,3.3.3 Error suggestion,Form control errors lack correction information,Errors identified for form controls do not provide enough information on how to correct them.,"Action: Make sure all forms identify input errors and supply correction suggestions.
  
How to fix:
Provide suggestions for correcting input errors, including allowed values and expected format.","Users make mistakes. They may inadvertently skip required fields, or enter invalid information.

A well-designed online form provides helpful and timely feedback to users so they can easily correct errors and resubmit the form.

When providing feedback to users, it's important to ensure that feedback is accessible to screen reader users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/error-suggestion,Forms and UI,No,No,"Blind, Low Vision, Cognitive","
Use Accessible Methods to Implement Error Messages:
https://staging.userway.org/university/library/use-accessible-methods-to-implement-error-messages/

Implement Validation and Notification to Minimize Interruptions:
https://staging.userway.org/university/library/implement-validation-and-notification-to-minimize-interruptions/","
Error Messages
https://staging.userway.org/university/library/error-messages/

Surfacing Error Messages:
https://staging.userway.org/university/library/surfacing-error-messages/",,,,,,,,,
174,AA,2.0,"3.3.4 Error prevention (legal, financial, data)",Cannot reverse data submission,"No mechanism provided to review input and reverse submissions of legal commitments, financial transactions, or user-controlled data before they are submitted.","Action: Allow navigation that enables users to review all steps included in the data entry process and make changes within those steps.
  
How to fix:
Make sure at least one of the following is true:
1. Submissions are reversible.
2. User input is checked for errors, and users have an opportunity to make corrections.
3. Users can review, correct, and confirm their input before finalizing a submission.","Users make mistakes. They may inadvertently skip required fields, or enter invalid information.

A well-designed online form provides helpful and timely feedback to users so they can easily correct errors and resubmit the form.

When providing feedback to users, it's important to ensure that feedback is accessible to screen reader users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/error-prevention-legal-financial-data,Structure,No,No,"Blind, Low Vision, Cognitive",,"Transactions:
https://staging.userway.org/university/library/transactions/

Reverse and undo:
https://staging.userway.org/university/library/reverse-and-undo/",,,,,,,,,
175,AA,2.0,"3.3.4 Error prevention (legal, financial, data)",Cannot confirm data deletion,"No mechanism provided to confirm the deletion of legal commitments, financial transactions, or user-controlled data before they are submitted.","Action: Allow users to cancel or reverse submission.
  
How to fix:
Make sure at least one of the following is true:
1. Submissions are reversible.
2. User input is checked for errors, and users have an opportunity to make corrections.
3. Users can review, correct, and confirm their input before finalizing a submission.","Users make mistakes. They may inadvertently skip required fields, or enter invalid information.

A well-designed online form provides helpful and timely feedback to users so they can easily correct errors and resubmit the form.

When providing feedback to users, it's important to ensure that feedback is accessible to screen reader users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/error-prevention-legal-financial-data,Structure,No,No,"Blind, Low Vision, Cognitive",,"Transactions:
https://staging.userway.org/university/library/transactions/

Reverse and undo:
https://staging.userway.org/university/library/reverse-and-undo/",,,,,,,,,
176,AA,2.0,"3.3.4 Error prevention (legal, financial, data)",Cannot review/edit data before submission,"No mechanism provided to review and edit the data of legal commitments, financial transactions, or user-controlled data before they are submitted.","Action: Provide a summary so that users can verify all data and make changes if needed.
  
How to fix:
Make sure at least one of the following is true:
1. Submissions are reversible.
2. User input is checked for errors, and users have an opportunity to make corrections.
3. Users can review, correct, and confirm their input before finalizing a submission.","Users make mistakes. They may inadvertently skip required fields, or enter invalid information.

A well-designed online form provides helpful and timely feedback to users so they can easily correct errors and resubmit the form.

When providing feedback to users, it's important to ensure that feedback is accessible to screen reader users.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/error-prevention-legal-financial-data,Structure,No,No,"Blind, Low Vision, Cognitive",,"Transactions:
https://staging.userway.org/university/library/transactions/

Reverse and undo:
https://staging.userway.org/university/library/reverse-and-undo/",,,,,,,,,
177,A,2.0,4.1.1 Parsing,Duplicate ID attributes,Page contains duplicate ID attribute values.,"Action: Required: Make sure all ID attributes are unique within a web page, and DO NOT include duplicates.
  
How to fix:
1. Use unique ID attribute values.
2. Do not include duplicate attributes within each HTML, CSS and ARIA used on the web page.","Duplicate ID values are a common, easily fixed validation error that can cause both scripting (such as JavaScript) and assistive technologies to behave unexpectedly. Duplicate ID values can degrade both functionality and accessibility.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/parsing,Structure,No,No,"Blind, Low Vision, Cognitive",,,,,,,,,,,
178,A,2.0,4.1.1 Parsing,Tags missing critical character,HTML elements are not well formed (opened and closed properly).,"Action: Check all HTML elements, and adjust or add all opening and closing tags as necessary.
  
How to fix:
1. Check for missing, incorrect, or invalid HTML opening and closing elements.
2. Remove code/tag errors.
3. Add any missing code/tags.","Using standards-compliant HTML increases the likelihood that all web browsers and assistive technologies will correctly handle your content.

If your code contains errors or tags that are not part of the HTML specification, screen readers and other assistive technologies might fail when trying to render the content for users. Even pages that seem to look fine in a web browser could have unseen problems for assistive technology users.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/parsing,Structure,No,No,"Blind, Low Vision, Cognitive",,,,,,,,,,,
179,A,2.0,4.1.1 Parsing,Duplicate HTML attributes,HTML elements include duplicate attributes.,"Action: Required: Make sure all elements DO NOT contain duplicate attributes.
  
How to fix:
1. Check elements for duplicate attributes.
2. Remove any duplicates.
3. Replace with unique attributes.",Avoid duplicating attributes on the same element. This is one of the key errors that are known to cause problems for assistive technologies when they are trying to parse content.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/parsing,Structure,No,No,"Blind, Low Vision, Mobility, Deaf, Hard of Hearing Cognitive",,,,,,,,,,,
180,A,2.0,4.1.1 Parsing,Invalid ARIA attributes,ARIA attributes are invalid.,"Action: Examine and correct all ARIA attributes.
  
How to fix:
1. Check your code against valid code examples: find errors and invalid code.
2. Replace or remove any invalid code.","Using standards-compliant HTML increases the likelihood that all web browsers and assistive technologies will correctly handle your content.

If your code contains errors or tags that are not part of the HTML specification, screen readers and other assistive technologies might fail when trying to render the content for users. Even pages that seem to look fine in a web browser could have unseen problems for assistive technology users.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/parsing,Structure,No,Yes,"Blind, Low Vision, Mobility, Cognitive",,,,,,,,,,,
181,A,2.0,"4.1.2 Name, Role, Value",Pagination missing required markup,The pagination is missing required programmatic markup.,"Action: Ensure that pagination is provided with required markup.

How to fix:
1. Apply role=""region"" and aria-label=""navigation"" attributes.
2. Ensure that links within the navigation region are enclosed within a list element, such as <ul>.
3. Include aria-current=""page"" on the <a> element responsible for displaying the current/active page.
4. Follow the design pattern https://design-system.w3.org/components/pagination.html
",Assistive tech users expect audio announcements of pagination regions and currently active pages.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
182,A,2.1,"4.1.2 Name, Role, Value",Missing selected state,The custom element lacks a programmatically selected state.,"Action: Add a programatically selected state.

How to fix: Use aria-selected on the active element.",Assistive tech users expect audio announcement of the selected state for the elements.,Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",Yes,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/

If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
183,A,2.0,"4.1.2 Name, Role, Value", The element is missing a role attribute for a button.,The custom button element does not have a role specified.,"Action: Make sure all custom elements are built with appropriate aria roles, states and properties specified in the ARIA authoring practice.
  
How to fix:
Use ONE of the following techniques:
1. Use a native HTML <button> element.
<button>Close</button>
2. Add role=""button"" to the custom button container.
<span role=""button"" class=""close-btn"" aria-label=""Close""></span>
3. Add tabIndex=""0"" and keyboard handlers so that a button can be activated with spacebar
4. Follow the Aria design pattern for button:
https://www.w3.org/WAI/ARIA/apg/patterns/button/","Making a custom widget involves modifying the role and/or function of one or more of the native HTML elements used as its building blocks.

Take the time to input the additional coding required to make sure that the widget provides the right information to browsers and assistive technologies.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/

If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
184,A,2.0,"4.1.2 Name, Role, Value",Button element lacks accessible name.,The custom button element does not have an accessible name.,"Action: Add an accessible name to the custom button element.
  
How to fix:
Add text content to the button element, or alternatively, utilize either the aria-label or aria-labelledby attribute to furnish an accessible name.","Making a custom widget involves modifying the role and/or function of one or more of the native HTML elements used as its building blocks.

Take the time to input the additional coding required to make sure that the widget provides the right information to browsers and assistive technologies.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",Yes,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
185,A,2.0,"4.1.2 Name, Role, Value",Missing aria-pressed on button,The button element does not have an ARIA pressed state.,"Action: Required: Make sure all custom elements are built with appropriate ARIA roles, states and properties specified in the ARIA authoring practice.
  
 How to fix:
 1. Use aria-pressed=true/false to toggle the pressed state.
 2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/button/","Users need to know whether a widget is disabled or read-only, so they know whether they can interact with it. They need to know whether it is required, so they can decide whether to skip it.

To make users of assistive technology equally aware of these states, cues must be provided programmatically, and not just visually.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
186,A,2.0,"4.1.2 Name, Role, Value",Missing aria-disabled on button,The button element does not have a disabled state.,"Action: Required: Make sure all custom elements are built with appropriate ARIA roles, states and properties specified in the ARIA authoring practice.
  
How to fix:
Use aria-disabled=""true"" on the button element.","Users need to know whether a widget is disabled or read-only, so they know whether they can interact with it. They need to know whether it is required, so they can decide whether to skip it.

To make users of assistive technology equally aware of these states, cues must be provided programmatically, and not just visually.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
187,A,2.0,"4.1.2 Name, Role, Value",Missing role=checkbox and aria-checked on element,"The custom element functions like a checkbox but is not marked with roles, states, and properties. ","Action: Required: Make sure all custom elements are built with appropriate ARIA roles, states and properties specified in the ARIA authoring practice.
  
How to fix:
1. Use role=checkbox and toggle the select state using the aria-checked=true/false.
2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
188,A,2.0,"4.1.2 Name, Role, Value",Missing role=radio and aria-checked on element,"The custom element functions like a radio button but is not marked with roles, states, and properties.","Action: Required: Make sure all custom elements are built with appropriate ARIA roles, states and properties specified in the ARIA authoring practice.
  
 How to fix:
 1. Use role=radio and toggle the select state using the aria-checked=true/false.
 2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/radio/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
189,A,2.0,"4.1.2 Name, Role, Value",Missing role=link on element,The custom link element has no role.,"Action: Required: Make sure custom widgets are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
How to fix:
1. Use a native <a> element or
2. Provide the following for the custom link role=link so that assistive technologies can expose the element as a link.
3. Set tabindex=0 so that element is focusable via keyboard only.","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
190,A,2.0,"4.1.2 Name, Role, Value",Link missing HREF value,The link element has no HREF value.,"Action: Required: Make sure links have an HREF attribute.
  
 How to fix:
 Provide an HREF value for the link, even if JavaScript event handlers are used.","A valid link must have an HREF attribute: that is, the location of the anchor, page or resource the link goes to.

If an HREF attribute is present, pressing the Enter key while focused on the <a> element will activate it. This is critical for accessibility.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
191,A,2.0,"4.1.2 Name, Role, Value",Combobox widget not marked up,"The custom element functions like a <select> but is not marked with roles, states, and properties.","Action: Required: Make sure custom widgets are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
How to fix:
1. Use the combobox to identify an element as an input that controls another element (e.g., a listbox or grid), that can dynamically pop up to help the user set the value of that input.
2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/combobox/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
192,A,2.0,"4.1.2 Name, Role, Value",Listbox widget not marked up,"The custom element functions like a <listbox> but is not marked with roles, states, and properties.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
 1. Use the listbox to indicate lists from which a user may select one or more items which are static and, unlike HTML <select> elements, may contain images.
 2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/listbox/","A listbox presents users with a list of options. Screenreader users may not be able to access the list, as the screen reader may announce the name, state, and position of each option in the list without any semantic information such as role and state. Make sure the listbox widget is properly marked up to avoid this accessibility obstacle.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
193,A,2.0,"4.1.2 Name, Role, Value",Multiselect not defined,"Users have the ability to choose multiple list items in a listbox, but this is not programatically defined. As a result, the functionality is not exposed to assistive tech users.","Action: Required: Make sure the name, role, value, states, and properties of user interface components are programmatically determinable by assistive technologies.
  
How to fix:
1. Use the aria-multiselectable attribute to indicate that the user may select more than one item from the current selectable descendants. Adding the aria-multiselectable attribute will expose the multiselect state to assistive technologies.
2. Follow the ARIA Design Pattern: 
https://www.w3.org/WAI/ARIA/apg/patterns/listbox/examples/listbox-rearrangeable/","Users need to know whether a widget is disabled or read-only, so they know whether they can interact with it. They need to know whether it is required, so they can decide whether to skip it.

To make users of assistive technology equally aware of these states, cues must be provided programmatically, and not just visually.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
194,A,2.0,"4.1.2 Name, Role, Value",Tab panel widget not marked up,"The custom element functions like a tab panel widget but is not marked with roles, states, and properties.","Action: Required: Make sure custom widgets are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
 1. Use the ARIA tab pattern to indicate an interactive element inside a tablist that, when activated, displays its associated tabpanel.
 2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/tabs/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
195,A,2.0,"4.1.2 Name, Role, Value",Mega menu widget not marked up,"The custom element functions like a mega-menu widget but is not marked with appropriate roles, states, and properties.","Action: Required: Make sure custom widgets are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
How to fix:
1. Include all appropriate ARIA roles, states, and properties. 

2. Follow the ARIA design pattern:https://www.w3.org/WAI/ARIA/apg/patterns/menubar/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",Yes,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
196,A,2.0,"4.1.2 Name, Role, Value",Expand/collapse state not exposed,"The ARIA-expanded=true/false state is either not provided, or used incorrectly or not being updated.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
 1. Use the aria-expanded attribute: set it on an element to indicate if a control is expanded or collapsed, and whether its child elements are displayed or hidden.
 2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/disclosure/","Users need to know whether a widget is disabled or read-only, so they know whether they can interact with it. They need to know whether it is required, so they can decide whether to skip it.

To make users of assistive technology equally aware of these states, cues must be provided programmatically, and not just visually.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
197,A,2.0,"4.1.2 Name, Role, Value",Table sorting not exposed,"The ARIA-sort=ascending/descending state is either not provided, or is provided incorrectly on a table element or is not being updated for the table element.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
How to fix:
1. Set sort attribute correctly: If a grid or table provides sort functionality, the aria-sort attribute should be set to either ascending or descending (or other) on the header cell element for the sorted column.
2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/table/","Users need to know whether a widget is disabled or read-only, so they know whether they can interact with it. They need to know whether it is required, so they can decide whether to skip it.

To make users of assistive technology equally aware of these states, cues must be provided programmatically, and not just visually.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
198,A,2.0,"4.1.2 Name, Role, Value",Missing title on iFrame,The iFrame element is missing a title attribute.,"Action: Add an accessible name to the iFrame.
  
 How to fix:
 To add the iFrame's accessible name:
 1. Use the HTML title attribute, or
 2. Use aria-label or aria-labelledby","When an iFrame is given a meaningful title, screen reader users can pull up a list of frames and identify the content or purpose of the iFrame based on its title.

Without a meaningful name, a screen reader user may just hear ""frame"", the file name, path of the iFrame, or an unhelpful name like ""JavaScript"".",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",Yes,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
199,A,2.0,"4.1.2 Name, Role, Value",Tree widget not marked up as such,"The custom element functions like a tree widget but is not marked with applicable roles, states, and properties.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
 1. Mark the custom element as a tree widget. A tree is a widget that allows the user to select one or more items from a hierarchically organized collection.
 2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/treeview/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
200,A,2.0,"4.1.2 Name, Role, Value",Tooltip widget not marked up as such,"The custom element functions like a tooltip, but is not marked with applicable roles, states, and properties.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
  
 1. Mark the custom element as a tooltip. A tooltip is a contextual text bubble that displays a description for an element that appears on pointer hover or keyboard focus.
 2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/tooltip/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
201,A,2.0,"4.1.2 Name, Role, Value",Toolbar widget not marked up as such,"The custom element functions like a toolbar widget, but is not marked with applicable roles, states, and properties.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
 1. Mark the custom element as a toolbar widget. The toolbar role defines the containing element as a collection of commonly used function buttons or controls represented in a compact visual form.
 2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/toolbar/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
202,A,2.0,"4.1.2 Name, Role, Value",Slider widget not marked up as such,"The custom element functions like a slider widget, but is not marked with applicable roles, states, and properties.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
 1. Mark the custom element as a slider widget. The slider role is for range input widgets where the user selects a value from within given minimum and maximum values.
 2. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/slider/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
203,A,2.0,"4.1.2 Name, Role, Value",Progress bar widget not marked up as such,"The custom element functions like a progress bar widget, but is not marked with applicable roles, states, and properties.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
 1. Mark the custom element as a progress bar widget. The progressbar role defines an element that displays the progress status for tasks that take a long time.
2. Follow the Aria design pattern:
https://codepen.io/smashingmag/pen/KKxVVwG
","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
204,A,2.0,"4.1.2 Name, Role, Value",Grid widget not marked up,"The custom element functions like a grid widget, but is not marked with applicable roles, states, and properties.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
How to fix:
Determine the purpose of the grid-like element.
1. If the table is not focusable using two-dimensional navigation methods, such as directional arrow keys, then use a native HTML <table> element along with all necessary markup to achieve semantic structure.
2. If the table functions like a grid table, then follow the ARIA grid design pattern : https://www.w3.org/WAI/ARIA/apg/patterns/grid/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
• <button> 
• <input> 
• <select> 
• <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
205,A,2.0,"4.1.2 Name, Role, Value",Custom table semantics is broken,"The custom table element is not marked up with all applicable roles. As a result, element semantics are not completely exposed to assistive technologies.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
How to fix:
1. Wherever possible, use the native HTML table element <table>, as it provides necessary semantics to assistive technologies.
2. To code a custom table, the following ARIA roles are required:
• role=table
• role=cell
• role=columnheader
• role=rowheader
• and more
Refer to the table pattern: https://www.w3.org/WAI/ARIA/apg/patterns/table/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
206,A,2.0,"4.1.2 Name, Role, Value",Inappropriate use of role=application,Content is not exposed to assistive technologies due to inappropriate use of role=application.,"Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
How to fix:
Remove role=application: it is not appropriate.","The application role indicates to assistive technologies that an element and all of its children should be treated as if it is a desktop application, and no traditional HTML interpretation techniques should be used.

This role should only be used to define very dynamic and desktop-like web applications. Most mobile and desktop web apps are not considered applications for this purpose.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
207,A,2.0,"4.1.2 Name, Role, Value",Modal dialog not marked up as such,"The custom element functions like a modal dialog widget, but is not marked with applicable roles, states, and properties.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.

How to fix:
Make sure all custom widgets follow the ARIA design pattern:
1. Use necessary ARIA roles and states to construct all custom widgets.
2. Use role=dialog along with aria-modal=true. Role=dialog exposes the dialog to assistive tech users, and aria-modal hides the parent page content from assistive tech users accessing the parent page content.
3. aria-hidden or HTML inert attribute can also be used to hide <body> from assistive tech
4.. Refer to the dialog pattern: https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",Yes,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
208,A,2.0,"4.1.2 Name, Role, Value",Accordion not marked up as such,"The custom element functions like an accordion widget, but is not marked with applicable roles, states, and properties. ","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.

How to fix:
Make sure all custom widgets follow the ARIA design pattern:
1. Use necessary ARIA roles and states to construct all custom widgets.
2. Use role=button and aria-expanded=true/false along with other ARIA attributes and necessary JavaScript.
3. Refer to accordian design pattern:  https://www.w3.org/WAI/ARIA/apg/patterns/accordion/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
209,A,2.0,"4.1.2 Name, Role, Value",Current carousel slide state not marked up,The currently active state of the carousel slide is not programmatically marked up.,"Action: Make sure the state of the currently active carousel slide is exposed to assistive technologies.
  
How to fix:
1, Use the aria-current attribute on the element that visually represents which slide is currently active  Also represent the current element in different shapes for color blind users.
2. Please follow Carousel design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/carousel/","The aria-current attribute indicates the element that represents the current item within a container or set of related elements.

The current element is usually highlighted by a visual effect. To relay this highlighting to screen reader and assistive tech users, it is essential to mark the element at code level using the aria-current ARIA attribute.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
210,A,2.0,"4.1.2 Name, Role, Value",Number of carousel slides not exposed,The number of slides in a carousel is visually present; no alternative method identifies the number for assistive technology.,"Action: Make sure the carousel slide number is exposed to assistive tech in an alternative format.
  
How to fix:
1. Add text, e.g., ""slide 1, slide 2, 3, etc."", for each slide visible to all users  (or)
2. Give the carousel screen-reader-only text that conveys the number of slides.
3. Please follow Carousel design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/carousel/","When the number of carousel slides is visually represented and is not programatically defined and announced, users with blindness, low vision and cognitive disabilities will find the experience disorienting.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",Yes,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
211,AA,2.1,4.1.3 Status messages,Status message not exposed,The status change in the page is not exposed to assistive technology.,"Action: Make sure the status change message is exposed to assistive technology.
  
How to fix:
Make sure any status message displayed as visible text has the appropriate ARIA role:
1. If the status message contains important, time-sensitive information that should be communicated to users immediately (potentially clearing the speech queue of previous updates), use role=""alert"", which has an implicit aria-live value of assertive.
2. Otherwise, use a role with an implicit aria-live value of polite:
 a. Use role=""status"" for a simple status message that's not urgent enough to justify interrupting the current task.
 b. Use role=""log"" if new information is added to the status message in meaningful order, and old information might disappear (such as a chat log, game log, error log, or messaging history).
 c. Use role=""progressbar"" if the message conveys the status of a long-running process.","All client-side updated success or action outcome messages must be exposed to assistive technologies.

Sometimes it's important for a website or web app to provide a status message without interrupting the user's work.

People who have good vision can be expected to notice when a status message is added to the viewport, but people who are blind or have low vision can't. Instead, assistive technologies must be able to programmatically determine when a status message is provided.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/status-messages,"Custom controls, Dynamic content",No,Yes,"Blind, Low Vision, Cognitive"," 
Use role=status to Advise on the Success or Results of an Action:
https://staging.userway.org/university/library/use-rolestatus-to-advise-on-the-success-or-results-of-an-action/

Use role=alert or an ARIA Live Region to Convey a Suggestion or Warning: fhttps://staging.userway.org/university/library/use-rolealert-or-an-aria-live-region-to-convey-a-suggestion-or-warning/","
Feedback and Notifications:
https://staging.userway.org/university/library/feedback-and-notifications/",,,,,,,,,
212,AA,2.0,1.4.3  Contrast (Minimum),Regular text color contrast is insufficient,Regular text does not meet minimum contrast requirements against its background color.,"Action: Regular text (text below 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 4.5:1 against its background.
  
How to fix:
Make sure regular text contrast ratio meets or exceeds 4.5:1.
1. Use a higher contrast, compliant color for text and/or background.
2. Always test and verify your color choices and contrast ratios with a contrast checker, such as the one at https://userway.org/contrast.","Text that does not meet minimum contrast requirements may be difficult for some users to read and interpret.

Most people find it easier to read text when it has a sufficiently high contrast against its background. People with mild visual disabilities, low vision, age-related presbyopia, or limited color perception are likely to find text unreadable when contrast is too low.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum,"Font Size, Structure, and Color",Yes,No,"Blind, Low Vision, Cognitive",,"Text Color Contrast:
https://staging.userway.org/university/library/text-color-contrast/",,,,,,,,,
213,AA,2.0,1.4.3  Contrast (Minimum),Large text color contrast is insufficient,Large text does not meet minimum contrast requirements against its background color.,"Action: Large text (text above 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 3:1 against its background.
  
How to fix:
Make sure large text contrast ratio meets or exceeds 3:1.
1. Use a higher contrast, compliant color for text and/or background.
2. Always test and verify your color choices and contrast ratios with a contrast checker, such as the one at https://userway.org/contrast.","Text that does not meet minimum contrast requirements may be difficult for some users to read and interpret.

Most people find it easier to read text when it has a sufficiently high contrast against its background. People with mild visual disabilities, low vision, age-related presbyopia, or limited color perception are likely to find text unreadable when contrast is too low.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum,"Font Size, Structure, and Color",Yes,No,"Blind, Low Vision, Cognitive",,"Text Color Contrast:
https://staging.userway.org/university/library/text-color-contrast/",,,,,,,,,
214,AA,2.0,1.4.3  Contrast (Minimum),Regular placeholder text contrast is insufficient,Regular placeholder text does not meet minimum contrast requirements against its background.,"Action: Regular text (text below 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 4.5:1 against its background.
  
How to fix:
Make sure regular text contrast ratio meets or exceeds 4.5:1.
1. Use a higher contrast, compliant color for text and/or background.
2. Always test and verify your color choices and contrast ratios with a contrast checker, such as the one at https://userway.org/contrast.","Placeholder text must meet a color contrast requirement of at least a 4.5:1 contrast ratio, or a 3:1 contrast ratio if text is larger than 18pt or 14pt + bold.

Per the WCAG, minimum contrast success criterion 1.4.3 applies to text in the page, including placeholder text.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum,"Font Size, Structure, and Color",Yes,Yes,"Blind, Low Vision, Deaf, Hard of hearing, Cognitive",,"Placeholder Text:
https://staging.userway.org/university/library/placeholder-text/",,,,,,,,,
215,AA,2.0,1.4.3  Contrast (Minimum),Large placeholder text contrast is insufficient,Large placeholder text does not meet minimum contrast requirements against its background.,"Action: Large text (text above 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 3:1 against its background.
  
How to fix:
Make sure large text contrast ratio meets or exceeds 3:1.
1. Use a higher contrast, compliant color for text and/or background.
2. Always test and verify your color choices and contrast ratios with a contrast checker, such as the one at https://userway.org/contrast.","Placeholder text must meet a color contrast requirement of at least a 4.5:1 contrast ratio, or a 3:1 contrast ratio if text is larger than 18pt or 14pt + bold.

Per the WCAG, minimum contrast success criterion 1.4.3 applies to text in the page, including placeholder text.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum,"Font Size, Structure, and Color",Yes,Yes,"Blind, Low Vision, Deaf, Hard of hearing, Cognitive",,"Placeholder Text:
https://staging.userway.org/university/library/placeholder-text/",,,,,,,,,
216,AA,2.1,1.4.11 Non-text Contrast,Color contrast across borders of interactive elements is insufficient,"Interactive elements (e.g., inputs and buttons) do not have a distinct and clear border between them and the page.","Action: Make sure interactive elements (e.g., inputs and buttons) have a border with a contrast ratio of at least 3:1 or greater.
  
How to fix:
Make sure interactive element border contrast ratio meets or exceeds 3:1.
1. Use a higher contrast, compliant color for element border and/or page background.
2. Always test and verify your color choices and contrast ratios with a contrast checker, such as the one at https://userway.org/contrast.","For people with low vision or color blindness, all controls that they need to interact with must have high enough contrast so they can see and use them. 

Graphical objects must likewise have high contrast, because if users cannot see them, they will not be able to understand your content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast,"Color, Forms and UI",No,No,"Blind, Low Vision, Deaf, Hard of hearing, Cognitive",,"Component Contrast:
https://staging.userway.org/university/library/component-contrast/",,,,,,,,,
217,AA,2.1,1.4.11 Non-text Contrast,Color contrast on UI elements is insufficient,"User interface elements (e.g., icons) do not meet minimum contrast requirements.","Action: Make sure UI elements (e.g., icons) have a contrast ratio of at least 3:1 with their background.
  
How to fix:
Make sure UI icon border contrast ratio meets or exceeds 3:1.
1. Use a higher contrast, compliant color for icon border and/or page background.
2. Always test and verify your color choices and contrast ratios with a contrast checker, such as the one at https://userway.org/contrast.","For people with low vision or color blindness, all controls that they need to interact with must have high enough contrast so they can see and use them. 

Graphical objects must likewise have high contrast, because if users cannot see them, they will not be able to understand your content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast,"Color, Forms and UI",Yes,Yes,"Blind, Low Vision, Deaf, Hard of hearing, Cognitive",,"Icons:
https://staging.userway.org/university/library/icons/",,,,,,,,,
218,AA,2.1,1.4.11 Non-text Contrast,Focus indicator lacks sufficient contrast on active component,The focus indicator outline for an active component does not meet minimum contrast requirements.,"Action: Required: Make sure that when an active component receives keyboard focus, there is a clear, visible focus indicator, with a minimum contrast ratio of 3:1 against the background color.
  
 Note: there is no requirement for the focus indicator color to contrast with the active component color, only with its background.
  
How to fix:
Make sure that for the focus state for interactive components, the contrast ratio meets or exceeds 3:1.
1. Use a higher contrast, compliant color for component focus indicator outline and/or page background.
2. Always test and verify your color choices and contrast ratios with a contrast checker, such as the one at https://userway.org/contrast.","For people with low vision or color blindness, all controls that they need to interact with must have high enough contrast so they can see and use them. 

Graphical objects must likewise have high contrast, because if users cannot see them, they will not be able to understand your content.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast,"Color, Forms and UI",Yes,Yes,"Blind, Low Vision, Deaf, Hard of hearing, Cognitive",,"Visual States:
https://staging.userway.org/university/library/visual-states/",,,,,,,,,
219,A,2.0,"4.1.2 Name, Role, Value",Progress or step information is not marked up correctly,Progress information or the number of steps required is not available or made clear to assistive tech users.,"Action: Progress information and step icons visually show how far along a process the user is. Make sure information about the current step, tab or page is conveyed to assistive technology.
  
How to fix:
Where visual progress indicators are used to indicate a current selected step, tab or page link, make sure the same information is equally conveyed to assistive technology, using accessible markup, so that progress can be followed in an equivalent way by screen reader users.","Visual information, e.g., a progress bar, or a current step or tab, that is observable by sighted users should be equally communicated to screen reader and assistive tech users.

When data is only presented visually, users with blindness, low vision, color blindness, and other disabilities will not receive necessary information. This is an accessibility failure.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/

If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/",,,,,,,,,,
220,A,2.0,"4.1.2 Name, Role, Value",Insufficient menu markup hinders accessibility,Lack of proper markup in the mobile menu affects accessibility for assistive technology users.,"Action: Make sure that when a button expands or opens a menu dynamically, its role, state, and relationships are conveyed to assistive technology.
  
How to fix:
Make sure menus correctly convey their role, state, and relationships to assistive technology.

Refer to the Menu /Menubar pattern: https://www.w3.org/WAI/ARIA/apg/patterns/menubar/","Visually present dynamic elements such as mobile menus must correctly convey their role, state, and relationships to assistive technology, so that users with blindness, low vision, color blindness, and other disabilities are informed how and when to interact with these elements.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,No,"Blind, Low Vision, Cognitive","On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/

If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/",,,,,,,,,,
221,A,2.0,1.1.1 Non-text content,Decorative SVG is not hidden,Decorative-only SVG element is not marked as such; it is exposed to screen readers.,"Action: Make sure decorative-only SVG images are hidden from assistive technology.
  
How to fix:
Decorative-only images do not include any useful information, and should not include accessible title and description elements.","Decorative-only images and graphic elements do not convey information that is required to understand the content or website's overall meaning. They should not be communicated to screen reader and assistive tech users, as they are a waste of time and confusing.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,No,Yes,"Blind, Low Vision, Cognitive","Give Decorative Images an ALT Attribute with an Empty String (alt=""""):
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/",,,,,,,,,,
222,A,2.0,1.3.1 Info and Relationships,Missing: Headers attribute for complex header associations,"The table lacks header associations or IDs, which prevents assistive technology users from identifying the relationship between table headers and their corresponding data.","Action: For data tables that have two or more logical levels of row or column headers, use markup to associate data cells and header cells.

How to fix:
Include ID attributes in <th> cells and headers attributes in the associated <td> cells","Markup must clearly define roles and relationships for all table parts, e.g., column headers and row headers.

Table data and data relationships are defined by correct table markup. Screen readers and assistive tech can then announce table data in logical order.

Non-sighted or low vision users cannot understand the information in the table if the markup is incorrect.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Audio and Video,No,Yes,"Blind, Low Vision, Cognitive","Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/

","Data Tables:
https://staging.userway.org/university/library/data-tables/

Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

White space:
https://staging.userway.org/university/library/white-space/

Form Inputs: 
https://staging.userway.org/university/library/form-inputs/

Regions:
https://staging.userway.org/university/library/regions/",,,,,,,,,
223,A,2.0,1.3.1 Info and Relationships,Data table semantics not exposed ,Data table semantics are not exposed to assistive technology due to the use of role=presentation.,"Action: Make sure all important data table content is exposed to screen readers. 

How to fix:
1. If this table is a data table, remove role='presentation'.
","Markup must clearly define roles and relationships for all table parts, e.g., column headers and row headers.

No important data content should be hidden from or unavailable to assistive technology.

Table data and data relationships are defined by correct table markup. Screen readers and assistive tech can then announce table data in logical order.

Non-sighted or low vision users cannot understand the information in the table if the markup is incorrect, or if information is hidden.

Example:
Column headers must be defined and announced as related to cells within that column.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/

","Data Tables:
https://staging.userway.org/university/library/data-tables/

Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

White space:
https://staging.userway.org/university/library/white-space/

Form Inputs: 
https://staging.userway.org/university/library/form-inputs/

Regions:
https://staging.userway.org/university/library/regions/",,,,,,,,,
224,A,2.0,1.3.1 Info and Relationships,Table contains nested table,"This page includes nested tables, which cannot be announced in a logical way by a screen reader.","Action: Make sure table will be announced clearly and in the correct data sequence by screen readers and assistive technology.

How to fix:
1. If the inner table is intended for layout purposes, add role='presentation'.
2. If the inner table is intended to function as a table, modify the main table to present the same data without using nesting tables.","No important data content should be hidden from or unavailable to assistive technology. Nested tables and layout tables can cause accessibility blockers: avoid them. Use another way to present table data.

Table data and data relationships are defined by correct table markup. Screen readers and assistive tech can then announce table data in logical order.

Non-sighted or low vision users cannot understand the information in the table if the markup is incorrect, or if information is hidden.

Example:
Column headers must be defined and announced as related to cells within that column.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision, Cognitive","Consider Adding Regions and Other ARIA Roles to Distinguish Text Groupings:
https://staging.userway.org/university/library/consider-adding-regions-and-other-aria-roles-to-distinguish-text-groupings/

","Data Tables:
https://staging.userway.org/university/library/data-tables/

Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/

White space:
https://staging.userway.org/university/library/white-space/

Form Inputs: 
https://staging.userway.org/university/library/form-inputs/

Regions:
https://staging.userway.org/university/library/regions/",,,,,,,,,
225,AA,2.1,1.3.5 Identify Input Purpose,Invalid value: Autocomplete,The autocomplete attribute has an invalid value.,"Action: Use valid values for autocomplete attributes.

How to fix:
Use only allowed values for input fields. This lets the browser offer auto-fill suggestions.","The autocomplete attribute describes allowed values for input fields. This allows the browser to offer auto fill suggestions (e.g., first name).

This helps people who have difficulty typing, and also offers assistive tech the option to indicate input type. This may be helpful for many people, including those with cognitive issues.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose,Forms and UI,No,Yes,"Blind, Low Vision, Cognitive","Use HTML Autocomplete Attributes, where Appropriate:
https://staging.userway.org/university/library/use-html-autocomplete-attributes-where-appropriate/",,,,,,,,,,
226,AA,2.1,1.3.5 Identify Input Purpose,Missing autocomplete: Input field,The input field that collects personal details has no autocomplete attribute.,"Action: Add an autocomplete option to the personal details field.

How to Fix:
The input field that collects personal details lacks the autocomplete attribute. The addition of an autocomplete attribute to the field can improve user experience and enhance the security of collected information. Fix this issue by using the autocomplete tokens suggested in WCAG for personally identifiable form fields.","Specifying the kind of data expected in an input field makes filling out forms easier, especially for people with cognitive disabilities.

While type=password specifies the type of input, it doesn't specify its purpose. Autocomplete values such as new-password and current-password are a well-supported way of identifying input purpose.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose,Forms and UI,No,Yes,"Blind, Low Vision,Cognitive","Use HTML Autocomplete Attributes, where Appropriate:
https://staging.userway.org/university/library/use-html-autocomplete-attributes-where-appropriate/",,,,,,,,,,
227,AA,2.0,1.4.5 Images of text,Equations missing MathML markup,Equations rendered as images are not marked up with MathML.,"Action: Make sure equations set as images are marked up with MathML.

How to fix:
1. This image appears to contain an equation: mark it up using MathML.
2. When an appropriate markup language exists, always use markup rather than images to convey information.","All equations set as images must be correctly marked up with MathML.

When an appropriate markup language exists, always use markup rather than images to convey information. This ensures that all users are able to equally access the data.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/images-of-text,Content,No,No,"Blind, Low Vision,Cognitive",,"Images of Text:
https://staging.userway.org/university/library/images-of-text/

Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/",,,,,,,,,
228,A,2.0,2.1.1 Keyboard,Scrollable element not keyboard accessible,Hidden scrollable content cannot be scrolled via keyboard.,"Action: Make sure all elements with overflow property set to ""auto"" or ""scroll"" are:
1. Either focusable themselves,
2. Or, contain a focusable element.

How to fix
1. Some scrollable elements (e.g., <input type=""text""> are natively focusable.
2. For elements that are NOT natively focusable (e.g., <div> elements), add attribute tabindex=""0"".","When a page includes content in a scrollable element, all users must be able to scroll any hidden content into view.

Mouse users can scroll such content by clicking the scrollbar associated with the scrollable element. However, it is not possible to activate a scrollbar using a keyboard, because a scrollbar cannot receive input focus.

Instead, focus must be moved either to the scrollable element itself, or to a child element within the scrollable element.

Then, content can be scrolled using the arrow keys.

Scrollable content is keyboard accessible only if the scrollable element is focusable, or contains a focusable element. An element is focusable if it can receive input focus via scripting, mousing, or keyboard tabbing.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/keyboard,"Custom Controls, Forms and UI and content",No,Yes,"Blind, Low Vision,Cognitive","Make Custom Media Player and Animation Controls Keyboard Accessible:
https://staging.userway.org/university/library/make-custom-media-player-and-animation-controls-keyboard-accessible/

Implement Keyboard Operation for Custom Elements:
https://staging.userway.org/university/library/implement-keyboard-operation-for-custom-elements/

Be familiar with Established Keyboard Conventions
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/","Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Keyboard Interaction
https://staging.userway.org/university/library/keyboard-interaction-2/

Media Players:
https://staging.userway.org/university/library/media-players/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Mouse-Operable Components:
https://staging.userway.org/university/library/mouse-operable-components/

Tab order:
https://staging.userway.org/university/library/tab-order/",,,,,,,,,
229,A,2.0,2.1.1 Keyboard,Server-side image maps are inaccessible,Server-side image maps are not keyboard or screen reader accessible.,"Action: Always use client-side image maps, rather than server-side image maps, except where the regions cannot be defined with an available geometric shape.

How to fix:
Provide a map and area elements linked to the img using the usemap attribute.","Client-side image maps provide multiple active regions through the browser, and can be made accessible relatively easily. Server-side image maps require a mouse. They transfer click data to the server for processing.

Server-side image maps present significant accessibility challenges for a variety of disabilities. Whenever possible, avoid server-side image maps.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/keyboard,"Custom Controls, Forms and UI and content",No,No,"Blind, Low Vision,Cognitive, Mobility","Make Custom Media Player and Animation Controls Keyboard Accessible:
https://staging.userway.org/university/library/make-custom-media-player-and-animation-controls-keyboard-accessible/

Implement Keyboard Operation for Custom Elements:
https://staging.userway.org/university/library/implement-keyboard-operation-for-custom-elements/

Be familiar with Established Keyboard Conventions
https://staging.userway.org/university/library/be-familiar-with-established-keyboard-conventions/

Ensure Interactive Elements are Reachable with the Keyboard:
https://staging.userway.org/university/library/ensure-interactive-elements-are-reachable-with-the-keyboard/","Custom Components Keyboard Guidance:
https://staging.userway.org/university/library/custom-components-keyboard-guidance/

Keyboard Interaction
https://staging.userway.org/university/library/keyboard-interaction-2/

Media Players:
https://staging.userway.org/university/library/media-players/

Pop-Ups and Overlays:
https://staging.userway.org/university/library/pop-ups-and-overlays/

Mouse-Operable Components:
https://staging.userway.org/university/library/mouse-operable-components/

Tab order:
https://staging.userway.org/university/library/tab-order/",,,,,,,,,
230,A,2.0,2.2.1 Timing adjustable,Timed HTTP page redirect,The Refresh HTTP header redirects the page.,"Action: Some people, including screen reader users, won't have time to read the page before it unexpectedly redirects.

How to fix:
Be sure not to use the Refresh HTTP header to redirect pages after a timed pause; this confuses users.","Users with low vision, other readablity issues, or cognitive disabilities may need more time to navigate through a page.

A page that refreshes too quickly, or without warning, is very confusing and disorienting for many users.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable,Dynamic content,No,No,"Blind, Low Vision,Cognitive, Mobility",,"Time Limits:
https://staging.userway.org/university/library/time-limits-2/",,,,,,,,,
231,AA,2.0,2.4.7 Focus visible,Hidden focus indicator: CSS outline or border,The CSS outline or border style makes it difficult or impossible to see the dotted link focus outline on this element.,"Action: Make sure the focus outline remains visible.

How to fix:
1. Do not remove the default outline style.
2. And, change or remove any add-on border styles that may be obscuring the focus outline on focusable elements.","Users with low vision or other readability issues will not perceive the focus style unless it is clearly indicated. Users should be able to easily find their way through a page using focus.

Without a noticeable focus, many users may become confused and unsure of their place on the page.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/focus-visible,Structure,No,Yes,"Blind, Low Vision,Cognitive, Mobility","When Overriding the Default Focus Indicator, Confirm Focus is Highly Visible:
https://staging.userway.org/university/library/when-overriding-the-default-focus-indicator-confirm-focus-is-highly-visible/","Media Players:
https://staging.userway.org/university/library/media-players/

Visual States:
https://staging.userway.org/university/library/visual-states/

",,,,,,,,,
232,AA,2.0,2.4.7 Focus visible,Field blurs on focus,"While navigating via Tab, when tabbing to this field, focus is removed; this makes it impossible to navigate this form via keyboard.","Action: Remove blur(): it makes the form inaccessible via keyboard.

How to fix:
Remove the call to blur() in the onfocus handler.","Users need to perform various actions via keyboard , including navigating and filling out forms. It is important to provide users with a mechanism to perform these actions.

Visual presentation options that block keyboard accessibility are considered an accessibility violation.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/focus-visible,Structure,No,Yes,"Blind, Low Vision,Cognitive, Mobility","When Overriding the Default Focus Indicator, Confirm Focus is Highly Visible:
https://staging.userway.org/university/library/when-overriding-the-default-focus-indicator-confirm-focus-is-highly-visible/","Media Players:
https://staging.userway.org/university/library/media-players/

Visual States:
https://staging.userway.org/university/library/visual-states/

",,,,,,,,,
233,A,2.0,1.1.1 Non-text content,Missing alt text: Image in link,"An img element is the link's only content, but it has no meaningful alt text. Alt text should clearly describe the purpose of the image in the link.","Action: When an image is set inside a link, and the link has an accessible name that does not fit the image, give these images an appropriate alt attribute of their own.

How to fix:
Using alt attributes, add concise, meaningful alt text for images set inside a link.","Images and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech. The absence of such tags is an accessibility violation.
  
When there is no alt attribute on an image, a screen reader may announce the image's file name and path instead. This fails to communicate the image's content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,Yes,No,"Blind, Low Vision,Cognitive","Where Relevant Text Exists in the UI, Use Aria-labelledby and aria-describedby to Reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/

Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives:
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/

Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/","Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:
https://staging.userway.org/university/library/text-content-for-videos/

Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
234,A,2.0,1.1.1 Non-text content,Missing meaningful alt text: Image,"An img element is the only content, but it has no meaningful alt text. Alt text should clearly describe the intended meaning or purpose of the image.","Action: When an image has been given an unclear or inappropriate accessible name, replace the ineffectual text with clear, meaningful alt text.

Example 1 (Unclear): Green poster with slogan
Example 2 (Clear): Recruitment poster with University of Oregon logo and slogan: ""Minds move mountains""
  
How to fix:
Using alt attributes, add concise, meaningful alt text for images.","Images and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech. The absence of such tags is an accessibility violation.
  
When there is no alt attribute on an image, a screen reader may announce the image's file name and path instead. This fails to communicate the image's content.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,Yes,Yes,"Blind, Low Vision,Cognitive","Where Relevant Text Exists in the UI, Use Aria-labelledby and aria-describedby to Reference:
https://staging.userway.org/university/library/where-relevant-text-exists-in-the-ui-use-aria-labelledby-and-aria-describedby-to-reference/

Use HTML, ARIA, or Technology-Specific Techniques to Add Short Text Alternatives:
https://staging.userway.org/university/library/use-html-aria-or-technology-specific-techniques-to-add-short-text-alternatives/

Give Decorative Images an ALT Attribute with an Empty String (alt="""")
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/

Provide an Accessible Method for Exposing Long Text Alternatives:
https://staging.userway.org/university/library/provide-an-accessible-method-for-exposing-long-text-alternatives/","Alternative Text for Visuals:
https://staging.userway.org/university/library/alternative-text-for-visuals/

Text Content for Videos:
https://staging.userway.org/university/library/text-content-for-videos/

Figure and Table Captions:
https://staging.userway.org/university/library/figure-and-table-captions/",,,,,,,,,
235,AA,2.0,1.4.3  Contrast (Minimum),Insufficient contrast ratio: Text on hover,"On hover, text contrast ratio is less than 4.5:1 against its background.","Action: Regular text (text below 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 4.5:1 against its background.
  
How to fix:
Make sure regular text contrast ratio meets or exceeds 4.5:1, including on hover and focus.
1. Use a higher contrast, compliant color for text and/or background.
2. Always test and verify your color choices and contrast ratios with a contrast checker, e.g., the one at https://userway.org/contrast.","Text that does not meet minimum contrast requirements may be difficult for some users to read and interpret.
  
Most people find it easier to read text when it has a sufficiently high contrast against its background. People with mild visual disabilities, low vision, age-related presbyopia, or limited color perception are likely to find text unreadable when contrast is too low.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum,"Font size, Structure, and Color",Yes,Yes,"Blind, Low Vision,Cognitive, Deaf, Hard of Hearing",,"Text Color Contrast:
https://staging.userway.org/university/library/text-color-contrast/

Placeholder Text: 
https://staging.userway.org/university/library/placeholder-text/",,,,,,,,,
236,AA,2.0,1.4.3  Contrast (Minimum),Insufficient contrast ratio: Text on focus,"On focus, text contrast ratio is less than 4.5:1 against its background.","Action: Regular text (text below 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 4.5:1 against its background.
  
How to fix:
Make sure regular text contrast ratio meets or exceeds 4.5:1, including on hover and focus.
1. Use a higher contrast, compliant color for text and/or background.
2. Always test and verify your color choices and contrast ratios with a contrast checker, e.g., the one at https://userway.org/contrast.","Text that does not meet minimum contrast requirements may be difficult for some users to read and interpret.
  
Most people find it easier to read text when it has a sufficiently high contrast against its background. People with mild visual disabilities, low vision, age-related presbyopia, or limited color perception are likely to find text unreadable when contrast is too low.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum,"Font size, Structure, and Color",No,Yes,"Blind, Low Vision,Cognitive, Deaf, Hard of Hearing",,"Text Color Contrast:
https://staging.userway.org/university/library/text-color-contrast/

Placeholder Text: 
https://staging.userway.org/university/library/placeholder-text/",,,,,,,,,
237,AA,2.0,1.4.3  Contrast (Minimum),Insufficient contrast ratio: Text on hover/focus,"On hover/focus, text contrast ratio is less than 4.5:1 against its background.","Action: Regular text (text below 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 4.5:1 against its background.
  
How to fix:
Make sure regular text contrast ratio meets or exceeds 4.5:1, including on hover and focus.
1. Use a higher contrast, compliant color for text and/or background.
2. Always test and verify your color choices and contrast ratios with a contrast checker, e.g., the one at https://userway.org/contrast.","Text that does not meet minimum contrast requirements may be difficult for some users to read and interpret.
  
Most people find it easier to read text when it has a sufficiently high contrast against its background. People with mild visual disabilities, low vision, age-related presbyopia, or limited color perception are likely to find text unreadable when contrast is too low.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum,"Font size, Structure, and Color",No,Yes,"Blind, Low Vision,Cognitive, Deaf, Hard of Hearing",,"Text Color Contrast:
https://staging.userway.org/university/library/text-color-contrast/

Placeholder Text: 
https://staging.userway.org/university/library/placeholder-text/",,,,,,,,,
238,A,2.0,1.3.1 Info and Relationships,Form fields missing label,"Form elements have no programmatic label. As a result, assistive tech users are not given sufficient semantic information to complete the task.","Action: In form fields, labels must be associated with their related fields.
  
How to fix:
1. Use the label element and an explicit association using ""for"" and ""id"", or,
2. Use aria-label, or,
3. Use aria-labelledby and refer to content id, or,
4. Use the title attribute","Screen readers cannot access visual cues, labels and prompts for form fields. To offer equal access, these prompts must be clearly associated with form fields in HTML. Without proper associations, screen reader and assistive tech users will not be offered these cues, and will not perceive data relationships.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,Yes,Yes,"Blind, Low Vision,Cognitive, Mobility","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Components:
https://staging.userway.org/university/library/input-components/",,,,,,,,,
239,A,2.0,1.3.1 Info and Relationships,Incorrect/unavailable markup: Nested list,Content appears and functions like a nested list but is not marked up as such.,"Action: Items appear to be part of a nested list but are not marked up as such. They should be individually marked up and grouped appropriately.

How to fix:
1. Use <ul>, <ol>, or <dl> to define items in a list.
2. For all nested items, be sure that your inner items are appropriately set within their outer tags.
3. Be sure to use appropriate opening and closing elements for the list.","Visual order markings must be alternatively conveyed via labels and markup, to provide equally accessible information for screen reader and assistive tech users.

For list content, use list markup: ol, ul, dl.

Examples:
Related content sections, elements in a grid-like visual layout, or sibling items.

Visual cues depicting content structure and relationships should be accessibly communicated to blind and low-vision users, or the content's structure and relationships may remain unclear.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision,Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Components:
https://staging.userway.org/university/library/input-components/",,,,,,,,,
240,A,2.0,1.3.1 Info and Relationships,Inappropriate list item markup,"List items should appear as parts of a single list. Instead, each item appears as if it is an individual list.","Action: Make sure that list items are not marked up as individual lists. Instead, they should be grouped together and marked up appropriately.

How to fix:
1. Use <ul>, <ol>, or <dl> to define items in a list.
2. Be sure to use appropriate opening and closing elements for the list.","Visual order markings must be alternatively conveyed via labels and markup, to provide equally accessible information for screen reader and assistive tech users.

For list content, use list markup: ol, ul, dl.

Examples:
Related content sections, elements in a grid-like visual layout, or sibling items.

Visual cues depicting content structure and relationships should be accessibly communicated to blind and low-vision users, or the content's structure and relationships may remain unclear.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision,Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Components:
https://staging.userway.org/university/library/input-components/",,,,,,,,,
241,A,2.0,1.3.1 Info and Relationships,Inappropriately marked nested list,Content appears and functions like a nested list but is not appropriately marked up as such.,"Action: Items appear to be part of a nested list but are not appropriately marked up as such. They should be individually and correctly marked up and grouped appropriately.

How to fix:
1. Use <ul>, <ol>, or <dl> to define items in a list.
2. For all nested items, be sure that all inner items are appropriately set within their outer tags.
3. Be sure to use appropriate opening and closing elements for the list.","Visual order markings must be alternatively conveyed via labels and markup, to provide equally accessible information for screen reader and assistive tech users.

For list content, use list markup: ol, ul, dl.

Examples:
Related content sections, elements in a grid-like visual layout, or sibling items.

Visual cues depicting content structure and relationships should be accessibly communicated to blind and low-vision users, or the content's structure and relationships may remain unclear.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision,Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Components:
https://staging.userway.org/university/library/input-components/",,,,,,,,,
242,A,2.0,1.3.1 Info and Relationships,Incorrect semantic markup,Element uses semantic markup incorrectly.,"Action: As per HTML5 specifications, a page can contain only one <head> element. This markup should be removed from any other section.

How to fix:
1. Examine the element.
  a. If the element is NOT a page header, the <head> markup must be removed from this section.
  b. If the element IS indeed the page header, examine other elements to determine where the <head> markup has been inappropriately placed, and remove it from there.",Adding incorrect or unnecessary semantic markup is confusing and obstructive for screen reader and assistive tech users.,Moderate,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships,Content,No,Yes,"Blind, Low Vision,Cognitive","Programmatically Associate Inputs with Labels:
https://staging.userway.org/university/library/programmatically-associate-inputs-with-labels/","Input Components:
https://staging.userway.org/university/library/input-components/",,,,,,,,,
243,A,2.0,"4.1.2 Name, Role, Value",Missing current state,The element's current state is not provided programatically.,"Action: Add current state.

How to fix: Add aria-current attribute to the currently active element.","Assistive tech users expect audio announcements of element states, where applicable.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom controls, Forms and UI",No,Yes,"Blind, Low Vision,Cognitive","On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/",,,,,,,,,,
244,A,2.0,"4.1.2 Name, Role, Value",Missing: Current state for link,The current link in page is identifiable visually but is not marked programatically.,"Action: Add a current state.

How to fix: Use aria-current on the active link.","Visual representation of links, dates, steps in a process, when marked with color, icon, or any other means to signify that they are current, also need
to be marked with a programmatic method to notify users of assistive technology.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
245,A,2.0,"4.1.2 Name, Role, Value",Switch element not marked up as such,"The custom element functions like a switch widget, but is not marked with applicable roles, states, and properties.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.

How to fix:
Make sure all custom widgets follow the ARIA design pattern:
1. Use necessary ARIA roles and states to construct all custom widgets.
2. Use role=switch and aria-checked=true/false along with other ARIA attributes and necessary JavaScript.
3. Please refer to switch pattern: https://www.w3.org/WAI/ARIA/apg/patterns/switch/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive",,,,,,,,,,,
246,A,2.0,"4.1.2 Name, Role, Value",Spin button element not marked up as such,"The custom element functions like a spin button, but is not marked with applicable roles, states, and properties.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.

How to fix:
Make sure all custom widgets follow the ARIA design pattern:
1. Use necessary ARIA roles and states to construct all custom widgets.
2. Use role=spinbutton with other ARIA attributes and necessary JavaScript.
3. Please refer to spin button https://www.w3.org/WAI/ARIA/apg/patterns/spinbutton/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive",,,,,,,,,,,
247,A,2.0,"4.1.2 Name, Role, Value",Alert dialog not marked up ,"An alert dialog is displayed on the page but it is not accessible to assistive technology, and the keyboard focus is not shifted to the dialog.","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.

How to fix:
Make sure all custom widgets follow the ARIA design pattern:
1. Use necessary ARIA roles and states to construct all custom widgets.
2. Use role=alertdialog with other ARIA attributes and necessary JavaScript.
3. Please refer to alertdialog https://www.w3.org/WAI/ARIA/apg/patterns/alertdialog/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive",,,,,,,,,,,
248,A,2.0,"4.1.2 Name, Role, Value",Alert message not marked up ,An alert message is displayed on the page but is not accessible to assistive technology.,"Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.

How to fix:
Make sure all custom widgets follow the ARIA design pattern:
1. Use necessary ARIA roles and states to construct all custom widgets.
2. Use role=alert with other ARIA attributes and necessary JavaScript.","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive",,,,,,,,,,,
249,A,2.0,"4.1.2 Name, Role, Value",Breadcrumbs not marked up,"There is a visual representation of breadcrumbs on the page, but it is not marked up programmatically.","Action: Mark breadcrumbs programmatically so that they are exposed to assistive technologies.

How to fix:
1. Use semantic HTML: Wrap the bread crumb elements with a semantic HTML element such as `<nav>` and use `<ol>` and `<li>` tags to create a list of breadcrumbs. This will help convey the semantic structure of the breadcrumbs to assistive technologies.
2. Use ARIA attributes: If you cannot change the HTML structure, you can use ARIA attributes such as `role=""navigation""`, `aria-label` or `aria-labelledby` to identify and describe the breadcrumbs to assistive technology.
3. Please refer to the breadcrumb pattern https://www.w3.org/WAI/ARIA/apg/patterns/breadcrumb/","Marking breadcrumbs programmatically using ARIA attributes or other techniques is essential for ensuring their accessibility to assistive technology. This involves adding appropriate ARIA roles, properties, and states to the HTML elements that represent the breadcrumbs. By doing so, we can provide users with disabilities the necessary information to understand the purpose and function of the breadcrumbs, as well as their hierarchical structure. This improves the ability of assistive technology to navigate and interact with the website, which is critical for promoting accessibility and compliance with accessibility standards and guidelines.",Moderate,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive",,,,,,,,,,,
250,A,2.0,"4.1.2 Name, Role, Value",Invalid/Incorrect ARIA attributes,"The page includes improper roles, states, and properties as per WAI-ARIA guidelines. Consequently, individuals dependent on assistive technology encounter difficulties in accessing essential content.
","Action: Required: Make sure custom elements are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
How to fix:
1. Remove invalid/incorrect ARIA attributes.
2. Add correct, valid ARIA attributes, as appropriate.
","ARIA is a W3C specification that stands for ""Accessible Rich Internet Applications"". It consists of markup that can be added to HTML in order to clearly communicate the roles, states, and properties of user interface elements.

This information helps screen readers and other assistive technologies to better understand the elements on a web page, and to provide a user interface that enables their users to effectively interact with those elements.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind, Low Vision, Cognitive","
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,,,,,,,,
251,A,2.0,1.3.1 Info and Relationships,Non-list content is incorrectly marked as a list,"Non-list content is being incorrectly marked up as a list using <ul>, <ol>, or <dl> elements.","Action: Eliminate the list markup from the content.
How to fix:
1. Omit the <ul>/<li> or <ol>/<li> elements surrounding the content in the HTML code. Alternatively,
2. Implement role=""presentation"" to strip the list semantics from the markup.
","Non-list elements, such as paragraphs and headings, have been erroneously designated as lists. When non-list content is inaccurately marked as a list, it creates confusion for users relying on assistive technologies. This leads to a misinterpretation of the content due to the disruption of proper semantics",Serious,https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships.html,Content,No,Yes,"Blind,Cognitive, Voice Control",,,,,,,,,,,
252,A,2.0,"4.1.2 Name, Role, Value",Accessible name is not meaningful,The accessible name of the element is not meaningful.,"Action: Ensure that element is provided with a accessible name that is meaningful.
How to fix:
Check if the accessible name for the element aria-label, title attribute, aria-labelledby or <label> is meaningful when read with assistive tech users.","The provided accessible names for elements lack meaningfulness. As a result, users relying on assistive technologies may encounter difficulty in associating the elements with their corresponding <label> assignments, impeding their ability to accurately identify said elements.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,"Blind,Cognitive, Voice Control",,,,,,,,,,,
253,A,2.0,1.3.1 Info and Relationships,Informative SVG is not exposed to assistive technologies,The SVG element that is meant to be informative-only is not appropriately marked up as such; its role and accessible name are not exposed to assistive technology.,"Action: Ensure that informative SVG elements are appropriately exposed to assistive technology users.
How to fix:
1. Apply role=""img"" to the SVG element, enabling assistive technology users to recognize the image.
2. Utilize the aria-label attribute to furnish an accessible name for the image.
",Informative images and graphic elements need to  convey information that is required to understand the content or website's overall meaning. They should  be communicated to screen reader and assistive tech users,Serious,https://www.w3.org/WAI/WCAG21/Understanding/non-text-content,Content,No,Yes,"Blind, Low Vision, Cognitive","Give Decorative Images an ALT Attribute with an Empty String (alt=""""):
https://staging.userway.org/university/library/give-decorative-images-an-alt-attribute-with-an-empty-string-alt/",,,,,,,,,,
254,A,2.0,"4.1.2 Name, Role, Value",Menu button is not marked up as such,"The custom element functions like a menu button widget, but is not marked with applicable roles, states, and properties. ","Action: Required: Make sure custom widgets are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
 1. Button that triggers the menu should be a button or an element with button role and label. It should also have aria-haspopup=menu .  Set aria-expanded=true when menu is opened. 
2. When menu is  opened, focus is placed on first menu item. When closed, button should get focus. 
3. Follow the ARIA design pattern: https://www.w3.org/WAI/ARIA/apg/patterns/menu-button/","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html,"Custom Controls, Forms and UI",No,Yes,,,,,,,,,,,,
255,A,2.0,"4.1.2 Name, Role, Value",Date Picker widget is not marked up as such,"The custom element functions like a Date Picker widget, but is not marked with applicable roles, states, and properties. ","Action: Required: Make sure custom widgets are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
 1. If it works like a combox, follow the combobox date picker ARIA design pattern https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-datepicker/
2. If it works like a dialog follow the dialog date picker ARIA design pattern https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/examples/datepicker-dialog/
","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html,"Custom Controls, Forms and UI",No,Yes,,,,,,,,,,,,
256,A,2.0,"4.1.2 Name, Role, Value",Meter widget is not marked up as such,"The custom element functions like a Meter widget, but is not marked with applicable roles, states, and properties. ","Action: Required: Make sure custom widgets are built with appropriate ARIA roles, states and properties, as specified in the ARIA authoring practice.
  
 How to fix:
 1. Element should have a role=""meter"" with label. It also should have aria properties like aria-valuenow,aria-valuemin,arira-valuemax,aria-valuetext
2. Please refer to the meter pattern https://www.w3.org/WAI/ARIA/apg/patterns/meter/
","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html,"Custom Controls, Forms and UI",No,Yes,,,,,,,,,,,,
257,A,2.0,"4.1.2 Name, Role, Value",Missing accessible name on link,The custom link element has no accessible name.,"Action: Required: Make sure the name, role, value, states, and properties of user interface components are programmatically determinable by assistive technologies.
  
 How to fix:
 Use ONE of the following techniques:
 1. Use link text contained between the opening <div> and closing </div> elements. Link text can be: visible text, CSS clipped text, or alternative text on an <img> element.
 2. Use an aria-label attribute or an aria-labelledby attribute to name a link.","Widgets are interactive interface components, such as links, buttons, and combo boxes. 

Native widgets include the following simple, interactive HTML elements: 
 • <button> 
 • <input> 
 • <select> 
 • <textarea> 

Custom widgets are interactive interface components designed to meet unique UX needs. They are created by adding functionality to native widgets or to non-interactive components such as <div> elements. 

Custom widgets are most appropriate for complex controls (such as a text field, listbox, and button that together function as a combo box). For simple controls (such as buttons or links), it's better to use native widgets, as they require significantly less coding to make them accessible. 

A custom widget usually requires an ARIA widget role to communicate the correct function to assistive technologies and enable them to interact with the widget.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",Yes,Yes,,"
Add Accessible Names for Inputs Lacking Visible Labels
https://staging.userway.org/university/library/add-accessible-names-for-inputs-lacking-visible-labels/


If Repurposing a Standard Component, use ARIA to Set the Correct Name and Role:
https://staging.userway.org/university/library/if-repurposing-a-standard-component-use-aria-to-set-the-correct-name-and-role/

On Custom Components, use ARIA to Expose Name, Role, and Value:
https://staging.userway.org/university/library/on-custom-components-use-aria-to-expose-name-role-and-value/","
Regions:
https://staging.userway.org/university/library/regions/

White space:
https://staging.userway.org/university/library/white-space/",,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"Blind, Low Vision, Cognitive"
258,A,2.0,"4.1.2 Name, Role, Value",Missing accessible name on role=group,"Form elements grouped with role=""group"" have no accessible name, similar to HTML legend.","Action: Required: Make sure the name, role, value, states, and properties of user interface components are programmatically determinable by assistive technologies.
  
 How to fix:
 Use aria-label or aria-labelledby on the container that has role=group.","Making a custom widget involves modifying the role and/or function of one or more of the native HTML elements used as its building blocks.

Take the time to input the additional coding required, to make sure that the widget provides the right information to browsers and assistive technologies.",Serious,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,,,,,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"Blind, Low Vision, Cognitive"
259,A,2.0,"4.1.2 Name, Role, Value",Elements lacks accessible name and role.,"The element lacks an accessible name and role, consequently, assistive technology users were unable to comprehend its purpose.","Action: Ensure that all elements have an accessible name.

How to Fix:
You can use one of the following techniques:

1 . Utilize a native HTML element to furnish the element and employ attributes like aria-label, aria-labelledby, or the title attribute.
2 .Apply an appropriate role to the custom element and furnish it with an accessible name using attributes such as aria-label, aria-labelledby, or other suitable
techniques.","The absence of an accessible name and role for an element has significant implications for users who rely on assistive technologies, such as screen readers. Without this essential information, these users are left in the dark about the element's purpose and function. This can lead to a frustrating and inaccessible user experience, as they may not be able to navigate or interact with the content effectively.",Critical,https://www.w3.org/WAI/WCAG21/Understanding/name-role-value,"Custom Controls, Forms and UI",No,Yes,,,,,,,,,,,,